{"version":3,"file":"Navbar-Bb7p76Dq.js","sources":["../../src/script/utils/notifications.js","../../src/script/views/user/components/style.js","../../src/script/utils/HandleActivePage.js","../../src/script/views/user/components/Navbar.js"],"sourcesContent":["import supabase from './supabaseClients'\r\nimport auth from './auth'\r\n\r\nexport async function fetchUserNotifications() {\r\n    try {\r\n        // Get current session\r\n        const { data: { session }, error: sessionError } = await supabase.auth.getSession()\r\n        if (sessionError || !session) {\r\n            throw new Error('Not authenticated')\r\n        }\r\n\r\n        const userId = session.user.id\r\n\r\n        // Fetch notifications with proper error handling\r\n        const { data, error } = await supabase\r\n            .from('notifications')\r\n            .select(`\r\n                id,\r\n                title,\r\n                message,\r\n                type,\r\n                is_read,\r\n                created_at\r\n            `)\r\n            .eq('user_id', userId)\r\n            .order('created_at', { ascending: false })\r\n\r\n        if (error) throw error\r\n\r\n        return { data, error: null }\r\n    } catch (error) {\r\n        console.error('Fetch notifications error:', error)\r\n        return { data: null, error: error.message }\r\n    }\r\n}\r\n\r\nexport async function markNotificationAsRead(notificationId) {\r\n    try {\r\n        // Get current session\r\n        const { data: { session }, error: sessionError } = await supabase.auth.getSession()\r\n        if (sessionError || !session) {\r\n            throw new Error('Not authenticated')\r\n        }\r\n\r\n        const userId = session.user.id\r\n\r\n        // Update notification with safety checks\r\n        const { data, error } = await supabase\r\n            .from('notifications')\r\n            .update({ is_read: true })\r\n            .match({\r\n                id: notificationId,\r\n                user_id: userId\r\n            })\r\n            .select()\r\n            .single()\r\n\r\n        if (error) throw error\r\n\r\n        return { data, error: null }\r\n    } catch (error) {\r\n        console.error('Mark notification error:', error)\r\n        return { error: error.message }\r\n    }\r\n}\r\n\r\nexport async function createNotification(userId, type, title, message) {\r\n    try {\r\n        if (!['deposit', 'withdrawal', 'swap', 'system'].includes(type)) {\r\n            throw new Error('Invalid notification type')\r\n        }\r\n\r\n        const { data, error } = await supabase\r\n            .from('notifications')\r\n            .insert({\r\n                user_id: userId,\r\n                type,\r\n                title,\r\n                message,\r\n                is_read: false\r\n            })\r\n            .select()\r\n            .single()\r\n\r\n        if (error) throw error\r\n\r\n        return { data, error: null }\r\n    } catch (error) {\r\n        console.error('Create notification error:', error)\r\n        return { error: error.message }\r\n    }\r\n}\r\n\r\nexport async function deleteNotification(notificationId) {\r\n    try {\r\n        const { data: { session }, error: sessionError } = await supabase.auth.getSession()\r\n        if (sessionError || !session) {\r\n            throw new Error('Not authenticated')\r\n        }\r\n\r\n        const userId = session.user.id\r\n\r\n        const { error } = await supabase\r\n            .from('notifications')\r\n            .delete()\r\n            .match({\r\n                id: notificationId,\r\n                user_id: userId\r\n            })\r\n\r\n        if (error) throw error\r\n\r\n        return { error: null }\r\n    } catch (error) {\r\n        console.error('Delete notification error:', error)\r\n        return { error: error.message }\r\n    }\r\n}","export default function StyleUserPage() {\r\n    const style = /* html */ `\r\n        <style>\r\n            /* Reset and Base Styles */\r\n            :root {\r\n                --nav-height: 4rem;\r\n                --header-height: 4rem;\r\n                --safe-area: env(safe-area-inset-bottom, 0px);\r\n                --address-bar: var(--address-bar-height, 0px);--vh: 1vh;\r\n                --brand-black: #242424;\r\n                --brand-primary: #f1d416;\r\n            }\r\n\r\n            /* Layout & Viewport Fixes */\r\n            body {\r\n                margin: 0;\r\n                padding: 0;\r\n                height: 100vh;\r\n                height: calc(var(--vh, 1vh) * 100);\r\n                overflow: hidden;\r\n                position: fixed;\r\n                width: 100%;\r\n                -webkit-text-size-adjust: none !important;\r\n                overscroll-behavior-y: none;\r\n                -webkit-overflow-scrolling: touch;\r\n                -webkit-tap-highlight-color: transparent;\r\n                background-color: var(--brand-black);\r\n                font-family: \"BankFont\", system-ui, -apple-system, sans-serif;\r\n            }\r\n\r\n            /* Prevent Zoom on Inputs */\r\n            input, textarea {\r\n                font-size: 16px !important;\r\n                max-height: 100%;\r\n                -webkit-text-size-adjust: 100% !important;\r\n                transform: translateZ(0);\r\n            }\r\n            /* Select element fixes */\r\n            select {\r\n                -webkit-appearance: none;\r\n                appearance: none;\r\n                position: relative;\r\n                z-index: 3;\r\n                background-color: var(--brand-black);\r\n                border: 1px solid rgba(255,255,255,0.1);\r\n            }\r\n\r\n            /* Prevent select dropdown from disappearing */\r\n            .select-wrapper {\r\n                position: relative;\r\n                z-index: 100;\r\n            }\r\n\r\n            /* Smooth Transitions */\r\n            .page-transition {\r\n                animation: fadeIn 0.3s ease-out;\r\n            }\r\n\r\n            @keyframes fadeIn {\r\n                from { opacity: 0; transform: translateY(10px); }\r\n                to { opacity: 1; transform: translateY(0); }\r\n            }\r\n\r\n            /* Layout Structure */\r\n            .main-scroll-view {\r\n                position: fixed;\r\n                top: var(--header-height);\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                overflow: auto;\r\n                -webkit-overflow-scrolling: touch;\r\n                padding: 1rem;\r\n                padding-bottom: calc(1rem + var(--safe-area));\r\n                transition: all 0.3s ease;\r\n                z-index: 1;\r\n                transform: translate3d(0,0,0);\r\n                -webkit-transform: translate3d(0,0,0);\r\n            }\r\n\r\n            .mobile-nav-menu {\r\n                position: fixed !important;\r\n                left: 0 !important;\r\n                right: 0 !important;\r\n                top: cal(100vh - 4rem - env(safe-area-inset-bottom, 0px)) !important;\r\n                width: 100% !important;\r\n                height: calc(var(--nav-height) + var(--safe-area)) !important;\r\n                background-color: var(--brand-black) !important;\r\n                padding-bottom: var(--safe-area) !important;\r\n                transition: transform 0.3s ease;\r\n            }\r\n            \r\n            .dropdown-container,\r\n            #notificationDropdown {\r\n                z-index: 9999 !important;\r\n            }\r\n\r\n            /* Fix for input focus issues */\r\n            .input-wrapper {\r\n                transform: translateZ(0);\r\n                -webkit-transform: translate3d(0,0,0);\r\n                backface-visibility: hidden;\r\n                position: relative;\r\n                z-index: 2;\r\n            }\r\n\r\n            /* Prevent content disappearing */\r\n            .content-wrapper {\r\n                transform: translateZ(0);\r\n                -webkit-transform: translate3d(0,0,0);\r\n                backface-visibility: hidden;\r\n                contain: paint;\r\n            }\r\n\r\n            /* Mobile Specific (< 768px) */\r\n            @media (max-width: 768px) {\r\n                .main-scroll-view {\r\n                    padding-top: 4rem !important;\r\n                    height: calc((var(--vh, 1vh) * 100) - var(--header-height) - var(--safe-area));\r\n                    -webkit-mask-image: -webkit-radial-gradient(white, black);\r\n                }\r\n\r\n                /* Force hardware acceleration */\r\n                body * {\r\n                    -webkit-transform: translateZ(0);\r\n                    -moz-transform: translateZ(0);\r\n                    -ms-transform: translateZ(0);\r\n                    -o-transform: translateZ(0);\r\n                    transform: translateZ(0);\r\n                }\r\n            }\r\n\r\n            /* Tablet (769px - 1023px) */\r\n            @media (min-width: 769px) and (max-width: 1023px) {\r\n                .main-scroll-view {\r\n                    padding-top: 4rem !important;\r\n                    height: calc((var(--vh, 1vh) * 100) - var(--header-height) - var(--safe-area));\r\n                    -webkit-mask-image: -webkit-radial-gradient(white, black);\r\n                }\r\n            }\r\n\r\n            /* Desktop (> 1024px) */\r\n            @media (min-width: 1024px) {\r\n                .main-scroll-view {\r\n                    left: 5rem;\r\n                    right: 1rem;\r\n                    padding: 2rem;\r\n                    padding-top: 0;\r\n                    height: calc(100vh - var(--header-height));\r\n                }\r\n\r\n                .mobile-nav-menu {\r\n                    display: none !important;\r\n                }\r\n            }\r\n        </style>\r\n\r\n        <script>\r\n            ${handleStyle()}\r\n        </script>\r\n    `;\r\n\r\n    return style;\r\n}\r\n\r\n\r\nfunction handleStyle() {\r\n    const root = document.documentElement;\r\n    let resizeTimeout;\r\n\r\n    function updateViewport() {\r\n        const vh = window.innerHeight * 0.01;\r\n        root.style.setProperty('--vh', `${vh}px`);\r\n    }\r\n\r\n    function handleSelectFix() {\r\n        const selects = document.querySelectorAll('select');\r\n        selects.forEach(select => {\r\n            select.addEventListener('focus', () => {\r\n                // Prevent scroll position loss\r\n                const scrollView = document.querySelector('.main-scroll-view');\r\n                const scrollPos = scrollView.scrollTop;\r\n\r\n                select.addEventListener('blur', () => {\r\n                    setTimeout(() => {\r\n                        scrollView.scrollTop = scrollPos;\r\n                    }, 0);\r\n                }, { once: true });\r\n            });\r\n        });\r\n    }\r\n\r\n    // Initial setup\r\n    updateViewport();\r\n    handleSelectFix();\r\n\r\n    // Event listeners\r\n    window.addEventListener('resize', () => {\r\n        clearTimeout(resizeTimeout);\r\n        resizeTimeout = setTimeout(updateViewport, 100);\r\n    }, { passive: true });\r\n\r\n    window.addEventListener('orientationchange', () => {\r\n        setTimeout(updateViewport, 100);\r\n    }, { passive: true });\r\n\r\n    // Re-run select fix when content changes\r\n    const observer = new MutationObserver(handleSelectFix);\r\n    observer.observe(document.body, {\r\n        childList: true,\r\n        subtree: true\r\n    });\r\n\r\n    return '';\r\n}","export default async function handleActivePage() {\r\n    // Get current route from pathname, handling /user/ prefix\r\n    const pathParts = window.location.pathname.split('/').filter(Boolean)\r\n    const currentRoute = pathParts.length > 1 && pathParts[0] === 'user'\r\n        ? pathParts[1]  // Get the actual route after /user/\r\n        : pathParts[0] || 'trade'\r\n\r\n    // Update desktop navigation\r\n    document.querySelectorAll('[data-nav], [data-route]').forEach(item => {\r\n        const route = item.dataset.route || item.dataset.nav\r\n\r\n        // Skip if no route found\r\n        if (!route) return\r\n\r\n        if (route === \"dashboard\") return\r\n\r\n        if (route === currentRoute) {\r\n            if (item.closest('.mobile-nav-menu')) {\r\n                // Mobile styling\r\n                item.classList.remove('text-gray-400')\r\n                item.classList.add('text-brand-primary')\r\n            } else {\r\n                // Desktop styling\r\n                item.classList.remove('text-gray-400')\r\n                item.classList.add('bg-brand-primary', 'text-white')\r\n            }\r\n        } else {\r\n            if (item.closest('.mobile-nav-menu')) {\r\n                // Mobile styling\r\n                item.classList.remove('text-brand-primary')\r\n                item.classList.add('text-gray-400')\r\n            } else {\r\n                // Desktop styling\r\n                item.classList.remove('bg-brand-primary', 'text-white')\r\n                item.classList.add('text-gray-400')\r\n            }\r\n        }\r\n    })\r\n}","import auth from '../../../utils/auth'\r\nimport { fetchUserNotifications, markNotificationAsRead } from '../../../utils/notifications'\r\nimport { loadPage, parsePathToRoute } from '../../../routes/router'\r\nimport LOGO from '../../../../images/logo.jpg'\r\nimport USER from '../../../../images/user.png'\r\nimport StyleUserPage from './style'\r\nimport toastify from '../../../components/toastify'\r\nimport handleActivePage from '../../../utils/HandleActivePage'\r\nimport { logoutHandler } from '../functions/loginHandler'\r\n\r\n// SVG Icon Components\r\nconst icons = {\r\n    trade: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"/>\r\n    </svg>`,\r\n    discover: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"/>\r\n    </svg>`,\r\n    charts: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 13v-1m4 1v-3m4 3V8M12 21l9-9-9-9-9 9 9 9z\"/>\r\n    </svg>`,\r\n    wallet: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"/>\r\n    </svg>`,\r\n    notification: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"/>\r\n    </svg>`\r\n}\r\n\r\nconst menuItems = [\r\n    { id: 'trade', title: 'Trade', icon: icons.trade },\r\n    { id: 'discover', title: 'Discover', icon: icons.discover },\r\n    { id: 'charts', title: 'Charts', icon: icons.charts },\r\n    { id: 'wallet', title: 'Wallet', icon: icons.wallet }\r\n]\r\n\r\nconst Navbar = () => {\r\n    // Get current route using parsePathToRoute\r\n    const currentRoute = parsePathToRoute(window.location.pathname)\r\n    let activeRoute = currentRoute.page || 'trade'\r\n    let isProfileOpen = false\r\n    let isNotificationOpen = false\r\n    let notifications = []\r\n\r\n    async function handleNotifications() {\r\n        try {\r\n            const { data, error } = await fetchUserNotifications()\r\n            if (error) throw error\r\n\r\n            notifications = data || []\r\n            updateNotificationBadge()\r\n            renderNotifications() // Add this new function call\r\n        } catch (error) {\r\n            console.error('Error fetching notifications:', error)\r\n            notifications = []\r\n        }\r\n    }\r\n\r\n    // Add this new function to render notifications\r\n    function renderNotifications() {\r\n        const dropdown = document.querySelector('#notificationDropdown')\r\n        if (!dropdown) return\r\n\r\n        const notificationContent = notifications.length ? notifications.map(notification => `\r\n            <div class=\"p-3 rounded-xl hover:bg-brand-primary/10 transition-colors cursor-pointer\r\n                        ${notification.is_read ? 'opacity-60' : 'border-l-2 border-brand-primary'}\"\r\n                 data-notification-id=\"${notification.id}\">\r\n                <div class=\"flex items-center justify-between\">\r\n                    <div class=\"text-sm text-white font-medium\">${notification.title}</div>\r\n                    <div class=\"text-xs text-gray-400\">\r\n                        ${new Date(notification.created_at).toLocaleDateString()}\r\n                    </div>\r\n                </div>\r\n                <div class=\"text-xs text-gray-400 mt-1\">${notification.message}</div>\r\n            </div>\r\n        `).join('') : `\r\n            <div class=\"text-sm text-gray-400 text-center py-8\">\r\n                No notifications\r\n            </div>\r\n        `\r\n\r\n        dropdown.innerHTML = /* html */`\r\n            <div class=\"p-4\">\r\n                <div class=\"flex items-center justify-between mb-4\">\r\n                    <div class=\"text-sm font-medium text-white\">Notifications</div>\r\n                    ${notifications.length ? `\r\n                        <button class=\"text-xs text-brand-primary hover:text-brand-primary/80 transition-colors\"\r\n                                id=\"markAllRead\">\r\n                            Mark all as read\r\n                        </button>\r\n                    ` : ''}\r\n                </div>\r\n                <div class=\"space-y-2\">\r\n                    ${notificationContent}\r\n                </div>\r\n            </div>\r\n        `\r\n    }\r\n\r\n    function updateNotificationBadge() {\r\n        const badge = document.querySelector('#notificationBadge')\r\n        if (badge) {\r\n            const unread = notifications.filter(n => !n.is_read).length\r\n            badge.textContent = unread\r\n            badge.style.display = unread ? 'flex' : 'none'\r\n        }\r\n    }\r\n\r\n    function toggleDropdown(type) {\r\n        if (type === 'profile') {\r\n            isProfileOpen = !isProfileOpen\r\n            isNotificationOpen = false\r\n        } else if (type === 'notification') {\r\n            isNotificationOpen = !isNotificationOpen\r\n            isProfileOpen = false\r\n        }\r\n\r\n        renderDropdowns()\r\n    }\r\n\r\n    function renderDropdowns() {\r\n        // Update profile dropdown visibility\r\n        const profileDropdown = document.querySelector('#profileDropdown')\r\n        if (profileDropdown) {\r\n            profileDropdown.style.display = isProfileOpen ? 'block' : 'none'\r\n        }\r\n\r\n        // Update notification dropdown visibility\r\n        const notificationDropdown = document.querySelector('#notificationDropdown')\r\n        if (notificationDropdown) {\r\n            notificationDropdown.style.display = isNotificationOpen ? 'block' : 'none'\r\n        }\r\n    }\r\n\r\n    async function handleNavigation(route) {\r\n        try {\r\n            if (!route) return\r\n\r\n            // Parse the route first\r\n            const parsed = parsePathToRoute(`/user/${route}`)\r\n            if (parsed.page) {\r\n                activeRoute = parsed.page\r\n                await loadPage(parsed.page)\r\n            }\r\n        } catch (error) {\r\n            console.error('Navigation error:', error)\r\n            // Fallback to dashboard on error\r\n            await loadPage('dashboard')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async function pageEvents() {\r\n        await handleNotifications()\r\n        await handleActivePage()\r\n\r\n        // Setup click handlers with null checks\r\n        document.querySelectorAll('[data-route]').forEach(item => {\r\n            item.addEventListener('click', (e) => {\r\n                e.preventDefault()\r\n                const route = item.dataset.route\r\n                if (route) {\r\n                    handleNavigation(route)\r\n                }\r\n            })\r\n        })\r\n        // Logo click handler\r\n        const logo = document.querySelector('[data-route=\"dashboard\"]')\r\n        if (logo) {\r\n            logo.addEventListener('click', (e) => {\r\n                e.preventDefault()\r\n                handleNavigation('dashboard')\r\n            })\r\n        }\r\n\r\n        document.querySelector('#profileButton')?.addEventListener('click',\r\n            () => toggleDropdown('profile'))\r\n\r\n        document.querySelector('#notificationButton')?.addEventListener('click',\r\n            () => toggleDropdown('notification'))\r\n\r\n        // Add notification click handlers\r\n        document.addEventListener('click', async (e) => {\r\n            const notification = e.target.closest('[data-notification-id]')\r\n            if (notification) {\r\n                const id = notification.dataset.notificationId\r\n                await markNotificationAsRead(id)\r\n                await handleNotifications() // Refresh notifications\r\n            }\r\n\r\n            const markAllReadBtn = e.target.closest('#markAllRead')\r\n            if (markAllReadBtn) {\r\n                await Promise.all(\r\n                    notifications\r\n                        .filter(n => !n.is_read)\r\n                        .map(n => markNotificationAsRead(n.id))\r\n                )\r\n                await handleNotifications() // Refresh notifications\r\n            }\r\n        })\r\n\r\n        // Close dropdowns when clicking outside\r\n        document.addEventListener('click', (e) => {\r\n            if (!e.target.closest('.dropdown-container')) {\r\n                isProfileOpen = false\r\n                isNotificationOpen = false\r\n                renderDropdowns()\r\n            }\r\n        })\r\n\r\n        // Update logout handler to use loadPage\r\n        const logoutBtn = document.getElementById(\"logout-btn\")\r\n        if (logoutBtn) {\r\n            logoutBtn.addEventListener(\"click\", async () => {\r\n                await logoutHandler()\r\n            })\r\n        }\r\n    }\r\n\r\n    return {\r\n        html: /* html */`\r\n            <!-- Injected Styling -->\r\n            ${StyleUserPage()}\r\n            <!-- Desktop Sidebar -->\r\n            <aside class=\"hidden lg:flex flex-col fixed left-0 top-0 bottom-0 w-20 z-50 pt-10\">\r\n                <nav class=\"flex-1 py-6\">\r\n                    <div class=\"space-y-2 px-2\">\r\n                        ${menuItems.map(item => /* html */`\r\n                            <button data-nav data-route=\"${item.id}\"\r\n                                    class=\"w-full flex flex-col items-center gap-2 p-3 rounded-xl \r\n                                           ${activeRoute === item.id ? 'bg-brand-primary text-white' : 'text-gray-400 hover:bg-brand-primary/10'}\r\n                                           transition-all duration-200\" href=\"/user/${item.id}\">\r\n                                <div class=\"w-10 h-10 flex items-center justify-center text-white\">${item.icon}</div>\r\n                                <span class=\"text-xs font-medium text-white\">${item.title}</span>\r\n                                ${item.badge ? `\r\n                                    <span class=\"absolute top-1 right-1 px-1.5 py-0.5 rounded-full text-xs \r\n                                                ${activeRoute === item.id ? 'bg-white/20' : 'bg-brand-primary text-white'}\">\r\n                                        ${item.badge}\r\n                                    </span>\r\n                                ` : ''}\r\n                            </button>\r\n                        `).join('')}\r\n                    </div>\r\n                </nav>\r\n            </aside>\r\n\r\n            <!-- Top Navigation -->\r\n            <header class=\"sticky top-0 left-0 right-0 h-16 backdrop-blur-lg z-40\">\r\n                <div class=\"h-full px-4 flex items-center justify-between\">\r\n                    <!-- Logo -->\r\n                    <div data-route=\"dashboard\" class=\"cursor-pointer flex items-center gap-3\">\r\n                        <img src=\"${LOGO}\" alt=\"Logo\" class=\"h-8 w-auto\">\r\n                        <span class=\"text-xl font-bold text-brand-primary bg-clip-text\">\r\n                            Dashboard\r\n                        </span>\r\n                    </div>\r\n\r\n                    <!-- Right Actions -->\r\n                    <div class=\"flex items-center gap-4 z-50\">\r\n                        <!-- Notifications -->\r\n                        <div class=\"dropdown-container relative z-[99999]\">\r\n                            <button id=\"notificationButton\"\r\n                                    class=\"w-10 h-10 rounded-xl flex items-center justify-center \r\n                                           hover:bg-brand-primary/10 transition-colors\">\r\n                                ${icons.notification}\r\n                                <span id=\"notificationBadge\"\r\n                                      class=\"absolute -top-1 -right-1 w-5 h-5 rounded-full bg-brand-primary\r\n                                             flex items-center justify-center text-xs text-white\r\n                                             ring-2 ring-brand-dark\">\r\n                                </span>\r\n                            </button>\r\n\r\n                            <!-- Notification Dropdown -->\r\n                            <div id=\"notificationDropdown\"\r\n                                class=\"hidden fixed lg:absolute top-[4rem] lg:top-full -right-16 lg:right-0 mt-2 \r\n                                        w-[calc(100vw-2rem)] mx-auto lg:w-80 max-h-[calc(100vh-12rem)] overflow-y-auto\r\n                                        rounded-2xl bg-brand-black border border-brand-primary/10\r\n                                        shadow-lg shadow-black/20 h-[300px] lg:h-[400px] z-[9999999]\">\r\n                                <div class=\"p-4\">\r\n                                    <div class=\"text-sm font-medium text-white mb-2\">Notifications</div>\r\n                                    ${notifications.length ? notifications.map(notification => `\r\n                                        <div class=\"p-3 rounded-xl hover:bg-brand-primary/10 transition-colors \r\n                                                    ${notification.is_read ? 'opacity-60' : ''}\">\r\n                                            <div class=\"text-sm text-white\">${notification.title}</div>\r\n                                            <div class=\"text-xs text-gray-400 mt-1\">${notification.message}</div>\r\n                                        </div>\r\n                                    `).join('') : `\r\n                                        <div class=\"text-sm text-gray-400 text-center py-8\">\r\n                                            No notifications\r\n                                        </div>\r\n                                    `}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Profile -->\r\n                        <div class=\"dropdown-container relative\">\r\n                            <button id=\"profileButton\"\r\n                                    class=\"flex items-center gap-2 px-3 py-2 rounded-xl\r\n                                        hover:bg-brand-primary/10 transition-colors\">\r\n                                <img src=\"${auth.getProfile()?.avatar_url || USER}\" alt=\"Profile\"\r\n                                    class=\"w-8 h-8 rounded-xl object-cover\">\r\n                                <span class=\"hidden lg:block text-sm font-medium text-white\">\r\n                                    ${auth.getProfile()?.full_name || 'Guest'}\r\n                                </span>\r\n                            </button>\r\n\r\n                            <!-- Profile Dropdown -->\r\n                            <div id=\"profileDropdown\"\r\n                                class=\"hidden fixed lg:absolute top-[4rem] lg:top-full right-0 lg:right-0 mt-2 w-[calc(100vw-2rem)] mx-auto lg:w-64 \r\n                                        rounded-2xl bg-brand-black border border-brand-primary/10\r\n                                        shadow-lg shadow-black/20 z-[9999999]\">\r\n                                <div class=\"p-4 space-y-2\">\r\n                                    <div class=\"flex items-center gap-3 p-2\">\r\n                                        <img src=\"${auth.getProfile()?.avatar_url || USER}\" alt=\"Profile\" class=\"w-10 h-10 rounded-xl\">\r\n                                        <div>\r\n                                            <div class=\"text-sm font-medium text-white\">\r\n                                                ${auth.getProfile()?.full_name || 'Guest'}\r\n                                            </div>\r\n                                            <div class=\"text-xs text-gray-400\">\r\n                                                ${auth.getProfile()?.email || ''}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr class=\"border-brand-primary/10\">\r\n                                    <button data-nav data-route=\"settings\" class=\"w-full text-left p-2 text-sm text-gray-400 hover:text-white\r\n                                                hover:bg-brand-primary/10 rounded-lg transition-colors\">\r\n                                        Settings\r\n                                    </button>\r\n                                    <button class=\"w-full text-left p-2 text-sm text-red-500 hover:text-red-400\r\n                                                hover:bg-red-500/10 rounded-lg transition-colors\" id=\"logout-btn\">\r\n                                        Logout\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <!-- Mobile Bottom Navigation -->\r\n            <nav class=\"lg:hidden h-16 z-[10]\r\n                    border-t border-brand-primary/10 w-full mobile-nav-menu\">\r\n                <div class=\"h-full grid grid-cols-4 px-4 bg-brand-black/95 backdrop-blur-3xl\">\r\n                    ${menuItems.map(item => `\r\n                        <button data-route=\"${item.id}\"\r\n                                class=\"flex flex-col items-center justify-center gap-1\r\n                                    ${activeRoute === item.id ? 'text-brand-primary' : 'text-gray-400'}\" href=\"/user/${item.id}\">\r\n                            <div class=\"w-6 h-6\">${item.icon}</div>\r\n                            <span class=\"text-xs\">${item.title}</span>\r\n                        </button>\r\n                    `).join('')}\r\n                </div>\r\n            </nav>\r\n        `,\r\n        pageEvents\r\n    }\r\n}\r\n\r\nexport default Navbar"],"names":["fetchUserNotifications","session","sessionError","supabase","userId","data","error","markNotificationAsRead","notificationId","createNotification","type","title","message","StyleUserPage","handleStyle","root","resizeTimeout","updateViewport","vh","handleSelectFix","select","scrollView","scrollPos","handleActivePage","pathParts","currentRoute","item","route","icons","menuItems","Navbar","activeRoute","parsePathToRoute","isProfileOpen","isNotificationOpen","notifications","handleNotifications","updateNotificationBadge","renderNotifications","dropdown","notificationContent","notification","badge","unread","n","toggleDropdown","renderDropdowns","profileDropdown","notificationDropdown","handleNavigation","parsed","loadPage","pageEvents","e","logo","id","logoutBtn","logoutHandler","LOGO","auth","USER"],"mappings":"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"}