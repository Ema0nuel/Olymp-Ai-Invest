{"version":3,"mappings":"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","names":["minutesInMonth","minutesInDay","constructFromSymbol","constructFrom","date","value","toDate","argument","context","defaultOptions","getDefaultOptions","getTimezoneOffsetInMilliseconds","_date","utcDate","normalizeDates","dates","normalize","compareAsc","dateLeft","dateRight","diff","differenceInCalendarMonths","laterDate","earlierDate","options","laterDate_","earlierDate_","yearsDiff","monthsDiff","getRoundingMethod","method","number","result","differenceInMilliseconds","endOfDay","endOfMonth","month","isLastDayOfMonth","differenceInMonths","workingLaterDate","sign","difference","isLastMonthNotFull","differenceInSeconds","formatDistanceLocale","formatDistance","token","count","tokenValue","buildFormatLongFn","args","width","dateFormats","timeFormats","dateTimeFormats","formatLong","formatRelativeLocale","formatRelative","_baseDate","_options","buildLocalizeFn","valuesArray","defaultWidth","index","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","rem100","localize","quarter","buildMatchFn","string","matchPattern","matchResult","matchedString","parsePatterns","key","findIndex","pattern","findKey","rest","object","predicate","array","buildMatchPatternFn","parseResult","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","enUS","locale","defaultLocale","minutesInAlmostTwoDays","comparison","localizeOptions","seconds","offsetInSeconds","minutes","months","hours","days","nearestMonth","monthsSinceStartOfYear","years","Spinner","message","spinner","handleError","error","customMessage","toastify","assetsIcons","BTC","BNB","SOL","ETH","renderAssetLogo","asset","UserDetailsView","userId","tab","data","container","KycManager","TransactionManager","BalanceManager","AssetManager","EmailNotifier","sendEmail","supabase","target","action","id","type","newState","modal","handler","full_name","email","avatar_url","is_verified","created_at","liveAccount","acc","demoAccount","pendingTransactions","tx","userAssets","transactions","pendingCount","kyc_documents","kyc_status","kyc_submitted_at","doc","notifications","notif","tabId","tabContent","event","txId","accountId","accountType","assetId","docId","notifId","url","account","Modal","e","formData","amount","reason","availableAssets","userAsset","a","func","wait","timeout","later","adminSupabase","createClient","users","reset","cleanupAll","currentView","selectedUserId","usersData","userDetailsView","loadUsers","renderContent","renderUserAvatar","user","AVATAR","contentDiv","renderUsersList","renderUserCard","pageEvents","StyleAdminPage","button","route","loadPage","logoutAdmin","countries","c","close","form","authUser","authError","profileError","createTradingAccounts","generateWelcomeEmailTemplate","profile","deleteError","AdminNavbar"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"sources":["../../node_modules/date-fns/constants.js","../../node_modules/date-fns/constructFrom.js","../../node_modules/date-fns/toDate.js","../../node_modules/date-fns/_lib/defaultOptions.js","../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","../../node_modules/date-fns/_lib/normalizeDates.js","../../node_modules/date-fns/compareAsc.js","../../node_modules/date-fns/differenceInCalendarMonths.js","../../node_modules/date-fns/_lib/getRoundingMethod.js","../../node_modules/date-fns/differenceInMilliseconds.js","../../node_modules/date-fns/endOfDay.js","../../node_modules/date-fns/endOfMonth.js","../../node_modules/date-fns/isLastDayOfMonth.js","../../node_modules/date-fns/differenceInMonths.js","../../node_modules/date-fns/differenceInSeconds.js","../../node_modules/date-fns/locale/en-US/_lib/formatDistance.js","../../node_modules/date-fns/locale/_lib/buildFormatLongFn.js","../../node_modules/date-fns/locale/en-US/_lib/formatLong.js","../../node_modules/date-fns/locale/en-US/_lib/formatRelative.js","../../node_modules/date-fns/locale/_lib/buildLocalizeFn.js","../../node_modules/date-fns/locale/en-US/_lib/localize.js","../../node_modules/date-fns/locale/_lib/buildMatchFn.js","../../node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","../../node_modules/date-fns/locale/en-US/_lib/match.js","../../node_modules/date-fns/locale/en-US.js","../../node_modules/date-fns/formatDistance.js","../../src/script/views/admin/components/spinner.js","../../src/script/utils/errorHandler.js","../../src/script/views/admin/components/UserDetails.js","../../src/script/views/admin/users.js"],"sourcesContent":["/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { minutesInDay, minutesInMonth } from \"./constants.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistance(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const seconds = differenceInSeconds(earlierDate_, laterDate_);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(earlierDate_) -\n      getTimezoneOffsetInMilliseconds(laterDate_)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(earlierDate_, laterDate_);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","export class Spinner {\r\n    constructor() {\r\n        this.spinnerId = 'globalSpinner';\r\n    }\r\n\r\n    show(message = 'Loading...') {\r\n        const spinner = document.createElement('div');\r\n        spinner.id = this.spinnerId;\r\n        spinner.innerHTML = /* html */`\r\n            <div class=\"fixed inset-0 bg-brand-dark/80 backdrop-blur-sm z-50\r\n                        flex flex-col items-center justify-center\">\r\n                <div class=\"w-16 h-16 border-4 border-brand-primary/30 border-t-brand-primary\r\n                            rounded-full animate-spin\"></div>\r\n                <div class=\"text-white mt-4\">${message}</div>\r\n            </div>\r\n        `;\r\n        document.body.appendChild(spinner);\r\n    }\r\n\r\n    hide() {\r\n        document.getElementById(this.spinnerId)?.remove();\r\n    }\r\n}","import toastify from '../components/toastify';\r\n\r\nexport function handleError(error, customMessage = null) {\r\n    console.error('Error:', error);\r\n\r\n    toastify({\r\n        text: customMessage || error.message || 'An error occurred',\r\n        background: 'bg-red-500'\r\n    });\r\n}","import { Spinner } from \"./spinner\";\r\nimport { handleError } from \"../../../utils/errorHandler\";\r\nimport supabase from \"../../../utils/supabaseClients\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport toastify from \"../../../components/toastify\";\r\nimport { formatDistance } from \"date-fns\";\r\nimport BTC from '../../../../images/welcome/btc.png'\r\nimport ETH from '../../../../images/welcome/eth.png'\r\nimport SOL from '../../../../images/welcome/sol.png'\r\nimport BNB from '../../../../images/welcome/bnb.png'\r\nimport { sendEmail } from '../../../utils/send-email';\r\n\r\n\r\nconst assetsIcons = {\r\n    BTC,\r\n    BNB,\r\n    USDT: BNB,\r\n    SOL,\r\n    ETH\r\n}\r\n\r\n// Types and interfaces\r\n/**\r\n * @typedef {Object} UserState\r\n * @property {boolean} isLoading\r\n * @property {string} currentTab\r\n * @property {Object} filters\r\n * @property {string} filters.transactionType\r\n * @property {string} filters.transactionStatus\r\n */\r\n\r\n// Update the asset logo rendering\r\nfunction renderAssetLogo(asset) {\r\n    if (assetsIcons[asset.symbol]) {\r\n        return `<img src=\"${assetsIcons[asset.symbol]}\" alt=\"${asset.symbol}\" class=\"w-6 h-6\">`;\r\n    } else if (asset.logo_url) {\r\n        return `<img src=\"${asset.logo_url}\" alt=\"${asset.symbol}\" class=\"w-6 h-6\">`;\r\n    }\r\n    return `<span class=\"text-lg text-brand-primary\">${asset.symbol.charAt(0)}</span>`;\r\n}\r\n\r\n\r\nexport class UserDetailsView {\r\n    /**\r\n     * @param {string} userId - The ID of the user to display\r\n     */\r\n    constructor(userId) {\r\n        if (!userId) throw new Error('UserId is required');\r\n\r\n        this.userId = userId;\r\n        this.spinner = new Spinner();\r\n        this.activeModals = new Set();\r\n        this.refreshInterval = null;\r\n\r\n        // State management\r\n        this.state = {\r\n            isLoading: false,\r\n            currentTab: 'overview',\r\n            filters: {\r\n                transactionType: '',\r\n                transactionStatus: ''\r\n            }\r\n        };\r\n\r\n        // Initialize managers first\r\n        this.initializeManagers();\r\n\r\n        // Bind methods after they're defined\r\n        this.handleTabClick = (tab) => {\r\n            this.currentTab = tab;\r\n            this.render();\r\n        };\r\n\r\n        // Use arrow functions instead of bind\r\n        this.render = this.debounce((data) => {\r\n            const container = document.getElementById(\"userDetailsContent\");\r\n            if (!container || !this.userData) return;\r\n\r\n            container.innerHTML = `\r\n                <div class=\"space-y-6\">\r\n                    ${this.renderBackButton()}\r\n                    ${this.renderUserHeader()}\r\n                    ${this.renderTabs()}\r\n                    <div id=\"tabContent\">\r\n                        ${this.renderTabContent()}\r\n                    </div>\r\n                </div>\r\n            `;\r\n            this.initializeTabEvents();\r\n        }, 100);\r\n\r\n        // Bind methods that will be used as event listeners\r\n        this.handleTabClick = this.handleTabClick.bind(this);\r\n        this.handleAction = this.handleAction.bind(this)\r\n    }\r\n\r\n    // Add stopAutoRefresh method\r\n    stopAutoRefresh() {\r\n        if (this.refreshInterval) {\r\n            clearInterval(this.refreshInterval);\r\n            this.refreshInterval = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize all required managers\r\n     * @private\r\n     */\r\n    initializeManagers() {\r\n        import('./Management.js').then(({ KycManager, TransactionManager, BalanceManager, AssetManager, EmailNotifier }) => {\r\n            // Create EmailNotifier instance with sendEmail function\r\n            this.emailNotifier = new EmailNotifier(sendEmail, this.spinner);\r\n            this.kycManager = new KycManager(supabase, this.spinner);\r\n            this.transactionManager = new TransactionManager(supabase, this.spinner, this.emailNotifier);\r\n            this.balanceManager = new BalanceManager(supabase, this.spinner, this.emailNotifier);\r\n            this.assetManager = new AssetManager(supabase, this.spinner, this.emailNotifier);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialize the view and start data refresh\r\n     */\r\n    // Remove the bind in initialize()\r\n    async initialize() {\r\n        try {\r\n            await this.fetchUserData();\r\n            this.render();\r\n            // Initialize all event handlers right after render\r\n            this.initializeEventListeners();\r\n            this.initializeTabEvents();\r\n            this.startAutoRefresh();\r\n        } catch (error) {\r\n            handleError(error, 'Failed to initialize user view');\r\n        }\r\n    }\r\n\r\n    async fetchUserData() {\r\n        this.spinner.show(\"Loading user details...\");\r\n        try {\r\n            const { data, error } = await supabase\r\n                .from(\"profiles\")\r\n                .select(this.getFullUserQuery())\r\n                .eq(\"id\", this.userId)\r\n                .single();\r\n\r\n            if (error) throw error;\r\n            this.userData = data;\r\n        } catch (error) {\r\n            handleError(error, \"Failed to load user details\");\r\n        } finally {\r\n            this.spinner.hide();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up event delegation for the entire view\r\n     * @private\r\n     */\r\n    initializeEventDelegation() {\r\n        const container = document.getElementById('userDetailsContent');\r\n        if (!container) return;\r\n\r\n        container.addEventListener('click', (e) => {\r\n            const target = e.target.closest('[data-action]');\r\n            if (!target) return;\r\n\r\n            const { action, id, type } = target.dataset;\r\n            this.handleAction(action, id, type);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handle delegated actions\r\n     * @private\r\n     */\r\n    async handleAction(action, id, type) {\r\n        try {\r\n            switch (action) {\r\n                case 'editBalance':\r\n                    await this.handleEditBalance(id, type);\r\n                    break;\r\n                case 'handleTransaction':\r\n                    await this.handleTransaction(id, type);\r\n                    break;\r\n                case 'editAsset':\r\n                    await this.handleEditUserAsset(id);\r\n                    break;\r\n                // Add more cases as needed\r\n            }\r\n        } catch (error) {\r\n            handleError(error, `Failed to handle ${action}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update state and trigger re-render\r\n     * @param {Partial<UserState>} newState \r\n     */\r\n    updateState(newState) {\r\n        this.state = { ...this.state, ...newState };\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * Show modal and track it\r\n     * @param {Modal} modal \r\n     */\r\n    showModal(modal) {\r\n        this.activeModals.add(modal);\r\n        modal.show();\r\n    }\r\n\r\n    /**\r\n     * Clean up modal instances\r\n     * @private\r\n     */\r\n    clearModals() {\r\n        this.activeModals.forEach(modal => modal.hide());\r\n        this.activeModals.clear();\r\n    }\r\n\r\n    /**\r\n     * Start auto-refresh of user data\r\n     * @private\r\n     */\r\n    startAutoRefresh() {\r\n        this.refreshInterval = setInterval(() => {\r\n            if (!document.hidden) {\r\n                this.fetchUserData();\r\n            }\r\n        }, 30000);\r\n    }\r\n\r\n    /**\r\n     * Clean up all resources\r\n     */\r\n    // Update destroy method with proper cleanup\r\n    destroy() {\r\n        try {\r\n            // Stop auto refresh\r\n            this.stopAutoRefresh();\r\n\r\n            // Clear modals\r\n            this.clearModals();\r\n\r\n            // Remove tab event listeners properly\r\n            document.querySelectorAll('[data-tab]').forEach(tab => {\r\n                tab.removeEventListener('click', this.handleTabClick);\r\n            });\r\n\r\n            // Remove event delegation listener\r\n            const container = document.getElementById('userDetailsContent');\r\n            if (container) {\r\n                container.removeEventListener('click', this.handleAction);\r\n                container.innerHTML = '';\r\n            }\r\n\r\n            // Clear global window handlers\r\n            const windowHandlers = [\r\n                'handleTransaction',\r\n                'editBalance',\r\n                'addUserAsset',\r\n                'editUserAsset',\r\n                'removeUserAsset',\r\n                'handleKycDocument',\r\n                'sendNotification',\r\n                'markNotificationRead',\r\n                'deleteNotification',\r\n                'editUserProfile',\r\n                'sendCustomEmail',\r\n                'manageUserAssets',\r\n                'viewTransaction',\r\n                'openImage'\r\n            ];\r\n\r\n            windowHandlers.forEach(handler => {\r\n                if (window[handler]) {\r\n                    window[handler] = null;\r\n                }\r\n            });\r\n\r\n            // Clear data\r\n            this.userData = null;\r\n\r\n        } catch (error) {\r\n            console.error('Error during cleanup:', error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const container = document.getElementById(\"userDetailsContent\");\r\n        if (!container || !this.userData) return;\r\n\r\n        container.innerHTML = `\r\n            <div class=\"space-y-6\">\r\n                ${this.renderBackButton()}\r\n                ${this.renderUserHeader()}\r\n                ${this.renderTabs()}\r\n                <div id=\"tabContent\">\r\n                    ${this.renderTabContent()}\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        // Initialize tab events after rendering\r\n        this.initializeTabEvents();\r\n    }\r\n\r\n    renderBackButton() {\r\n        return `\r\n            <button onclick=\"window.backToUsersList()\"\r\n                class=\"flex items-center gap-2 text-gray-400 hover:text-white transition-colors\">\r\n                <i class=\"fas fa-arrow-left\"></i>\r\n                <span>Back to Users</span>\r\n            </button>\r\n        `;\r\n    }\r\n\r\n    renderUserHeader() {\r\n        const { full_name, email, avatar_url, is_verified, created_at } = this.userData;\r\n        const liveAccount = this.userData.trading_accounts?.find(acc => acc.account_type === \"live\");\r\n\r\n        return /* html */`\r\n        <div class=\"bg-brand-black/50 backdrop-blur-xl border border-brand-primary/10 rounded-2xl p-6\">\r\n            <div class=\"flex flex-col md:flex-row md:items-start justify-between gap-6\">\r\n                <div class=\"flex items-center gap-4\">\r\n                    <div class=\"w-16 h-16 rounded-full bg-brand-primary/10 flex items-center justify-center overflow-hidden\">\r\n                        ${avatar_url\r\n                ? `<img src=\"${avatar_url}\" alt=\"${full_name}\" class=\"w-full h-full object-cover\">`\r\n                : `<span class=\"text-2xl text-brand-primary\">${full_name.charAt(0).toUpperCase()}</span>`\r\n            }\r\n                    </div>\r\n                    <div>\r\n                        <h2 class=\"text-xl font-semibold text-white\">${full_name}</h2>\r\n                        <div class=\"text-gray-400 mt-1\">${email}</div>\r\n                        <div class=\"flex items-center gap-3 mt-2\">\r\n                            <span class=\"px-2 py-1 rounded-full text-sm\r\n                                ${is_verified ? \"bg-green-500/10 text-green-500\" : \"bg-yellow-500/10 text-yellow-500\"}\">\r\n                                ${is_verified ? \"Verified\" : \"Pending Verification\"}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"text-right\">\r\n                    <div class=\"text-sm text-gray-400\">Live Balance</div>\r\n                    <div class=\"text-2xl font-bold text-white mt-1\">\r\n                        $${liveAccount?.balance?.toLocaleString() || \"0.00\"}\r\n                    </div>\r\n                    <div class=\"text-sm text-gray-400 mt-2\">\r\n                        Joined ${formatDistance(new Date(created_at), new Date(), { addSuffix: true })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"flex flex-wrap gap-2 mt-6 pt-6 border-t border-brand-primary/10\">\r\n                <button onclick=\"window.editUserProfile('${this.userData.id}')\"\r\n                        class=\"px-3 py-2 rounded-lg bg-brand-primary/10 text-brand-primary hover:bg-brand-primary/20 transition-colors\">\r\n                    <i class=\"fas fa-edit\"></i>\r\n                    <span class=\"ml-2\">Edit Profile</span>\r\n                </button>\r\n                <button onclick=\"window.sendCustomEmail('${this.userData.id}')\"\r\n                        class=\"px-3 py-2 rounded-lg bg-brand-primary/10 text-brand-primary hover:bg-brand-primary/20 transition-colors\">\r\n                    <i class=\"fas fa-envelope\"></i>\r\n                    <span class=\"ml-2\">Send Email</span>\r\n                </button>\r\n                <button onclick=\"window.manageUserAssets('${this.userData.id}')\"\r\n                        class=\"px-3 py-2 rounded-lg bg-brand-primary/10 text-brand-primary hover:bg-brand-primary/20 transition-colors\">\r\n                    <i class=\"fas fa-coins\"></i>\r\n                    <span class=\"ml-2\">Manage Assets</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    renderTabs() {\r\n        const tabs = [\r\n            { id: \"overview\", label: \"Overview\", icon: \"chart-pie\" },\r\n            { id: \"assets\", label: \"Assets\", icon: \"coins\" },\r\n            { id: \"transactions\", label: \"Transactions\", icon: \"exchange-alt\" },\r\n            { id: \"kyc\", label: \"KYC Documents\", icon: \"id-card\" },\r\n            { id: \"notifications\", label: \"Notifications\", icon: \"bell\" },\r\n        ];\r\n        return `\r\n            <div class=\"flex overflow-x-auto hide-scrollbar gap-2\">\r\n                ${tabs.map(tab => `\r\n                    <button data-tab=\"${tab.id}\"\r\n                        class=\"flex items-center gap-2 px-4 py-2 rounded-xl\r\n                        ${tab.id === this.currentTab ? \"bg-brand-primary text-white\" : \"text-gray-400 hover:text-white\"}\r\n                        transition-colors\">\r\n                        <i class=\"fas fa-${tab.icon}\"></i>\r\n                        <span>${tab.label}</span>\r\n                    </button>\r\n                `).join(\"\")}\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    renderTabContent() {\r\n        if (!this.userData) return '<div>Loading...</div>';\r\n\r\n        switch (this.currentTab) {\r\n            case \"overview\":\r\n                return this.renderOverviewTab();\r\n            case \"assets\":\r\n                return this.renderAssetsTab();\r\n            case \"transactions\":\r\n                return this.renderTransactionsTab();\r\n            case \"kyc\":\r\n                return this.renderKycTab();\r\n            case \"notifications\":\r\n                return this.renderNotificationsTab();\r\n            default:\r\n                return this.renderOverviewTab();\r\n        }\r\n    }\r\n\r\n    renderOverviewTab() {\r\n        const liveAccount = this.userData.trading_accounts?.find(acc => acc.account_type === \"live\");\r\n        const demoAccount = this.userData.trading_accounts?.find(acc => acc.account_type === \"demo\");\r\n        const pendingTransactions = this.userData.transactions?.filter(tx => tx.status === \"pending\") || [];\r\n\r\n        return /* html */`\r\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <div class=\"bg-brand-black/30 rounded-xl p-6 space-y-4\">\r\n                <h3 class=\"text-lg font-semibold text-white\">Account Summary</h3>\r\n                <div class=\"p-4 bg-brand-primary/10 rounded-xl\">\r\n                    <div class=\"flex justify-between items-center\">\r\n                        <span class=\"text-gray-400\">Live Balance</span>\r\n                        <button onclick=\"window.editBalance('${liveAccount?.id}', 'live')\"\r\n                                class=\"text-sm text-brand-primary hover:text-brand-primary/80\">\r\n                            <i class=\"fas fa-edit\"></i> Edit\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"text-2xl font-bold text-white mt-1\">\r\n                        $${liveAccount?.balance?.toLocaleString() || \"0.00\"}\r\n                    </div>\r\n                    <div class=\"text-sm text-gray-400 mt-2\">\r\n                        Leverage: ${liveAccount?.leverage || 100}x\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-4 bg-brand-primary/5 rounded-xl\">\r\n                    <div class=\"flex justify-between items-center\">\r\n                        <span class=\"text-gray-400\">Demo Balance</span>\r\n                        <button onclick=\"window.editBalance('${demoAccount?.id}', 'demo')\"\r\n                                class=\"text-sm text-brand-primary hover:text-brand-primary/80\">\r\n                            <i class=\"fas fa-edit\"></i> Edit\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"text-xl text-gray-300 mt-1\">\r\n                        $${demoAccount?.balance?.toLocaleString() || \"0.00\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"bg-brand-black/30 rounded-xl p-6\">\r\n                <h3 class=\"text-lg font-semibold text-white mb-4\">Pending Transactions</h3>\r\n                ${pendingTransactions.length\r\n                ? `<div class=\"space-y-3\">\r\n                        ${pendingTransactions.map(tx => `\r\n                            <div class=\"p-4 bg-brand-black/20 rounded-xl\">\r\n                                <div class=\"flex justify-between items-center\">\r\n                                    <div>\r\n                                        <div class=\"text-white capitalize\">${tx.type}</div>\r\n                                        <div class=\"text-sm text-gray-400\">\r\n                                            $${tx.amount.toLocaleString()} ${tx.currency || \"\"}\r\n                                        </div>\r\n                                        <div class=\"text-xs text-gray-500 mt-1\">\r\n                                            ${formatDistance(new Date(tx.created_at), new Date(), { addSuffix: true })}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"flex gap-2\">\r\n                                        <button onclick=\"window.handleTransaction('${tx.id}', 'approve')\"\r\n                                                class=\"px-3 py-1 rounded-lg bg-green-500/10 text-green-500 hover:bg-green-500/20 transition-colors\">\r\n                                            Approve\r\n                                        </button>\r\n                                        <button onclick=\"window.handleTransaction('${tx.id}', 'reject')\"\r\n                                                class=\"px-3 py-1 rounded-lg bg-red-500/10 text-red-500 hover:bg-red-500/20 transition-colors\">\r\n                                            Reject\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        `).join(\"\")}\r\n                    </div>`\r\n                : `<div class=\"text-center text-gray-400 py-6\">No pending transactions</div>`\r\n            }\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    renderAssetsTab() {\r\n        const userAssets = this.userData.user_assets || [];\r\n        return /* html */`\r\n        <div class=\"space-y-6\">\r\n            <div class=\"flex justify-between items-center\">\r\n                <h3 class=\"text-lg font-semibold text-white\">User Assets</h3>\r\n                <button onclick=\"window.addUserAsset('${this.userData.id}')\"\r\n                        class=\"px-4 py-2 rounded-xl bg-brand-primary text-white hover:bg-brand-primary/90 transition-colors\">\r\n                    <i class=\"fas fa-plus\"></i>\r\n                    <span class=\"ml-2\">Add Asset</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                ${userAssets.length\r\n                ? userAssets.map(asset => /* html */`\r\n                        <div class=\"bg-brand-black/30 rounded-xl p-4\">\r\n                            <div class=\"flex items-center justify-between\">\r\n                                <div class=\"flex items-center gap-3\">\r\n                                    <div class=\"w-10 h-10 rounded-full bg-brand-primary/10 flex items-center justify-center overflow-hidden\">\r\n                                        ${renderAssetLogo(asset.assets)}\r\n                                    </div>\r\n                                    <div>\r\n                                        <div class=\"font-medium text-white\">${asset.assets.symbol}</div>\r\n                                        <div class=\"text-sm text-gray-400\">${asset.assets.name}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"flex items-center gap-2\">\r\n                                    <button onclick=\"window.editUserAsset('${asset.id}')\"\r\n                                            class=\"p-2 rounded-lg bg-brand-primary/10 text-brand-primary hover:bg-brand-primary/20 transition-colors\">\r\n                                        <i class=\"fas fa-edit\"></i>\r\n                                    </button>\r\n                                    <button onclick=\"window.removeUserAsset('${asset.id}')\"\r\n                                            class=\"p-2 rounded-lg bg-red-500/10 text-red-500 hover:bg-red-500/20 transition-colors\">\r\n                                        <i class=\"fas fa-trash\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"mt-4 pt-4 border-t border-brand-primary/10\">\r\n                                <div class=\"flex justify-between items-center\">\r\n                                    <span class=\"text-gray-400\">Balance</span>\r\n                                    <span class=\"text-white font-medium\">${asset.balance} ${asset.assets.symbol}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    `).join(\"\")\r\n                : `<div class=\"col-span-full p-8 text-center text-gray-400 bg-brand-black/30 rounded-xl\">No assets found for this user</div>`\r\n            }\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    renderTransactionsTab() {\r\n        const transactions = this.userData.transactions || [];\r\n        const pendingCount = transactions.filter(tx => tx.status === \"pending\").length;\r\n        return /* html */`\r\n        <div class=\"space-y-6\">\r\n            <div class=\"flex justify-between items-center\">\r\n                <h3 class=\"text-lg font-semibold text-white\">\r\n                    Transactions \r\n                    ${pendingCount\r\n                ? `<span class=\"ml-2 px-2 py-1 rounded-full text-sm bg-yellow-500/10 text-yellow-500\">${pendingCount} pending</span>`\r\n                : \"\"\r\n            }\r\n                </h3>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n                <table class=\"w-full\">\r\n                    <thead>\r\n                        <tr class=\"text-left border-b border-brand-primary/10\">\r\n                            <th class=\"p-4 text-gray-400 font-medium\">Type</th>\r\n                            <th class=\"p-4 text-gray-400 font-medium\">Amount</th>\r\n                            <th class=\"p-4 text-gray-400 font-medium\">Status</th>\r\n                            <th class=\"p-4 text-gray-400 font-medium\">Date</th>\r\n                            <th class=\"p-4 text-gray-400 font-medium\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        ${transactions.length\r\n                ? transactions.map(tx => /* html */`\r\n                                <tr class=\"border-b border-brand-primary/10\">\r\n                                    <td class=\"p-4\">\r\n                                        <div class=\"flex items-center gap-3\">\r\n                                            <span class=\"capitalize\">${tx.type}</span>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td class=\"p-4\">\r\n                                        <div class=\"text-white\">$${tx.amount.toLocaleString()}</div>\r\n                                        ${tx.fee\r\n                        ? `<div class=\"text-sm text-gray-400\">Fee: $${tx.fee.toLocaleString()}</div>`\r\n                        : \"\"\r\n                    }\r\n                                    </td>\r\n                                    <td class=\"p-4\">\r\n                                        <span class=\"px-2 py-1 rounded-full text-sm\r\n                                            ${tx.status === \"completed\"\r\n                        ? \"bg-green-500/10 text-green-500\"\r\n                        : tx.status === \"pending\"\r\n                            ? \"bg-yellow-500/10 text-yellow-500\"\r\n                            : \"bg-red-500/10 text-red-500\"\r\n                    }\">\r\n                                            ${tx.status}\r\n                                        </span>\r\n                                    </td>\r\n                                    <td class=\"p-4 text-gray-400\">\r\n                                        ${formatDistance(new Date(tx.created_at), new Date(), { addSuffix: true })}\r\n                                    </td>\r\n                                    <td class=\"p-4\">\r\n                                        <div class=\"flex items-center gap-2\">\r\n                                            <button onclick=\"window.viewTransaction('${tx.id}')\"\r\n                                                    class=\"p-2 rounded-lg bg-brand-primary/10 text-brand-primary hover:bg-brand-primary/20 transition-colors\">\r\n                                                <i class=\"fas fa-eye\"></i>\r\n                                            </button>\r\n                                            ${tx.status === \"pending\"\r\n                        ? `\r\n                                                    <button onclick=\"window.handleTransaction('${tx.id}', 'approve')\"\r\n                                                            class=\"p-2 rounded-lg bg-green-500/10 text-green-500 hover:bg-green-500/20 transition-colors\">\r\n                                                        <i class=\"fas fa-check\"></i>\r\n                                                    </button>\r\n                                                    <button onclick=\"window.handleTransaction('${tx.id}', 'reject')\"\r\n                                                            class=\"p-2 rounded-lg bg-red-500/10 text-red-500 hover:bg-red-500/20 transition-colors\">\r\n                                                        <i class=\"fas fa-times\"></i>\r\n                                                    </button>\r\n                                                `\r\n                        : \"\"\r\n                    }\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            `).join(\"\")\r\n                : `<tr><td colspan=\"5\" class=\"p-8 text-center text-gray-400\">No transactions found</td></tr>`\r\n            }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    renderKycTab() {\r\n        const { kyc_documents = [], kyc_status, kyc_submitted_at } = this.userData;\r\n        return /* html */`\r\n        <div class=\"space-y-6\">\r\n            <div class=\"flex items-center justify-between\">\r\n                <h3 class=\"text-lg font-semibold text-white\">KYC Documents</h3>\r\n                <span class=\"px-3 py-1 rounded-full text-sm\r\n                    ${kyc_status === \"approved\"\r\n                ? \"bg-green-500/10 text-green-500\"\r\n                : kyc_status === \"pending\"\r\n                    ? \"bg-yellow-500/10 text-yellow-500\"\r\n                    : kyc_status === \"rejected\"\r\n                        ? \"bg-red-500/10 text-red-500\"\r\n                        : \"bg-gray-500/10 text-gray-500\"\r\n            }\">\r\n                    ${kyc_status?.replace(\"_\", \" \").toUpperCase() || \"NOT STARTED\"}\r\n                </span>\r\n            </div>\r\n            ${kyc_submitted_at\r\n                ? `<div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    ${kyc_documents.map(doc => `\r\n                        <div class=\"bg-brand-black/30 rounded-xl p-4\">\r\n                            <div class=\"flex justify-between items-start mb-4\">\r\n                                <div>\r\n                                    <h4 class=\"text-white capitalize\">${doc.document_type.replace(/_/g, \" \")}</h4>\r\n                                    <div class=\"text-sm text-gray-400 mt-1\">\r\n                                        Submitted ${formatDistance(new Date(doc.created_at), new Date(), { addSuffix: true })}\r\n                                    </div>\r\n                                </div>\r\n                                <span class=\"px-2 py-1 rounded-full text-sm\r\n                                    ${doc.status === \"approved\"\r\n                        ? \"bg-green-500/10 text-green-500\"\r\n                        : doc.status === \"pending\"\r\n                            ? \"bg-yellow-500/10 text-yellow-500\"\r\n                            : \"bg-red-500/10 text-red-500\"\r\n                    }\">\r\n                                    ${doc.status}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"aspect-video bg-brand-black/20 rounded-lg overflow-hidden mb-4\">\r\n                                <img src=\"${doc.document_url}\" alt=\"${doc.document_type}\" class=\"w-full h-full object-contain cursor-pointer\" onclick=\"window.openImage('${doc.document_url}')\">\r\n                            </div>\r\n                            ${doc.status === \"pending\"\r\n                        ? `<div class=\"flex gap-2\">\r\n                                    <button onclick=\"window.handleKycDocument('${doc.id}', 'approve')\"\r\n                                            class=\"flex-1 py-2 rounded-lg bg-green-500/10 text-green-500 hover:bg-green-500/20 transition-colors\">\r\n                                        Approve\r\n                                    </button>\r\n                                    <button onclick=\"window.handleKycDocument('${doc.id}', 'reject')\"\r\n                                            class=\"flex-1 py-2 rounded-lg bg-red-500/10 text-red-500 hover:bg-red-500/20 transition-colors\">\r\n                                        Reject\r\n                                    </button>\r\n                                </div>`\r\n                        : \"\"\r\n                    }\r\n                        </div>\r\n                    `).join(\"\")}\r\n                </div>`\r\n                : `<div class=\"text-center text-gray-400 py-8\">User has not submitted KYC documents yet</div>`\r\n            }\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    renderNotificationsTab() {\r\n        const notifications = this.userData.notifications || [];\r\n        return /* html */`\r\n        <div class=\"space-y-6\">\r\n            <div class=\"flex justify-between items-center\">\r\n                <h3 class=\"text-lg font-semibold text-white\">Notifications</h3>\r\n                <button onclick=\"window.sendNotification('${this.userData.id}')\"\r\n                        class=\"px-4 py-2 rounded-xl bg-brand-primary text-white hover:bg-brand-primary/90 transition-colors\">\r\n                    <i class=\"fas fa-plus\"></i>\r\n                    <span class=\"ml-2\">Send Notification</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"space-y-4\">\r\n                ${notifications.length\r\n                ? notifications.map(notif => `\r\n                        <div class=\"bg-brand-black/30 rounded-xl p-4 flex items-start justify-between ${!notif.is_read ? \"border-l-4 border-brand-primary\" : \"\"}\">\r\n                            <div class=\"flex-1\">\r\n                                <div class=\"flex items-center gap-2\">\r\n                                    <h4 class=\"text-white font-medium\">${notif.title}</h4>\r\n                                    <span class=\"px-2 py-0.5 rounded-full text-xs capitalize bg-brand-primary/10 text-brand-primary\">${notif.type}</span>\r\n                                </div>\r\n                                <p class=\"text-gray-400 mt-1\">${notif.message}</p>\r\n                                <div class=\"text-sm text-gray-500 mt-2\">\r\n                                    ${formatDistance(new Date(notif.created_at), new Date(), { addSuffix: true })}\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"flex items-center gap-2 ml-4\">\r\n                                ${!notif.is_read\r\n                        ? `<button onclick=\"window.markNotificationRead('${notif.id}')\" class=\"p-2 rounded-lg bg-brand-primary/10 text-brand-primary hover:bg-brand-primary/20 transition-colors\"><i class=\"fas fa-check\"></i></button>`\r\n                        : \"\"\r\n                    }\r\n                                <button onclick=\"window.deleteNotification('${notif.id}')\" class=\"p-2 rounded-lg bg-red-500/10 text-red-500 hover:bg-red-500/20 transition-colors\"><i class=\"fas fa-trash\"></i></button>\r\n                            </div>\r\n                        </div>\r\n                    `).join(\"\")\r\n                : `<div class=\"text-center text-gray-400 py-8\">No notifications found</div>`\r\n            }\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    initializeTabEvents() {\r\n        document.querySelectorAll('[data-tab]').forEach(tab => {\r\n            // Remove old listener first to prevent duplicates\r\n            tab.removeEventListener('click', this.handleTabClick);\r\n            // Add new listener\r\n            tab.addEventListener('click', (e) => {\r\n                const tabId = e.currentTarget.dataset.tab;\r\n                this.currentTab = tabId;\r\n                const tabContent = document.getElementById(\"tabContent\");\r\n                if (tabContent) {\r\n                    tabContent.innerHTML = this.renderTabContent();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    handleTabClick(event) {\r\n        const tab = event.currentTarget;\r\n        this.currentTab = tab.dataset.tab;\r\n        document.getElementById(\"tabContent\").innerHTML = this.renderTabContent();\r\n    }\r\n\r\n    initializeEventListeners() {\r\n        // Set up all window handlers\r\n        const handlers = {\r\n            handleTransaction: async (txId, action) => {\r\n                await this.transactionManager.handleTransaction(txId, action);\r\n                await this.fetchUserData();\r\n                this.render();\r\n            },\r\n            editBalance: (accountId, accountType) => this.handleEditBalance(accountId, accountType),\r\n            addUserAsset: (userId) => this.handleAddUserAsset(userId),\r\n            editUserAsset: (assetId) => this.handleEditUserAsset(assetId),\r\n            removeUserAsset: (assetId) => this.handleRemoveUserAsset(assetId),\r\n            handleKycDocument: (docId, action) => this.handleKycDocument(docId, action),\r\n            sendNotification: (userId) => this.handleSendNotification(userId),\r\n            markNotificationRead: (notifId) => this.handleMarkNotificationRead(notifId),\r\n            deleteNotification: (notifId) => this.handleDeleteNotification(notifId),\r\n            editUserProfile: (userId) => this.handleEditUserProfile(userId),\r\n            sendCustomEmail: (userId) => this.handleSendCustomEmail(userId),\r\n            manageUserAssets: (userId) => this.handleManageUserAssets(userId),\r\n            viewTransaction: (txId) => this.handleViewTransaction(txId),\r\n            openImage: (url) => window.open(url, \"_blank\")\r\n        };\r\n\r\n        // Attach all handlers to window\r\n        Object.entries(handlers).forEach(([key, handler]) => {\r\n            window[key] = handler.bind(this);\r\n        });\r\n    }\r\n\r\n    getFullUserQuery() {\r\n        return `\r\n        *,\r\n        trading_accounts (\r\n            id, account_type, balance, leverage, asset_type\r\n        ),\r\n        user_assets (\r\n            id, balance,\r\n            assets:asset_id (\r\n                id, symbol, name, logo_url\r\n            )\r\n        ),\r\n        transactions!transactions_user_id_fkey (\r\n            id, \r\n            type,\r\n            status,\r\n            amount,\r\n            fee,\r\n            fee_percentage,\r\n            wallet_address,\r\n            network,\r\n            screenshot_url,\r\n            created_at,\r\n            completed_at,\r\n            notes,\r\n            metadata,\r\n            currency,\r\n            user_id,\r\n            account_id\r\n        ),\r\n        notifications (\r\n            id, title, message, type, is_read, created_at\r\n        ),\r\n        kyc_documents (\r\n            id,\r\n            document_type,\r\n            document_url,\r\n            status,\r\n            verification_number,\r\n            expiry_date,\r\n            created_at,\r\n            rejection_reason\r\n        )\r\n    `;\r\n    }\r\n\r\n    async handleEditBalance(accountId, accountType) {\r\n        const account = this.userData.trading_accounts.find(acc => acc.id === accountId);\r\n        if (!account) return;\r\n\r\n        const modal = new Modal({\r\n            title: `Edit ${accountType.toUpperCase()} Balance`,\r\n            content: `\r\n                <form id=\"editBalanceForm\" class=\"space-y-6\">\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Current Balance</label>\r\n                        <div class=\"text-xl font-bold text-white mt-1\">\r\n                            $${account.balance.toLocaleString()}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Action</label>\r\n                        <select name=\"action\" required\r\n                                class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 \r\n                                       border border-brand-primary/20 text-white \r\n                                       focus:border-brand-primary outline-none\">\r\n                            <option value=\"set\">Set exact amount</option>\r\n                            <option value=\"add\">Add to balance</option>\r\n                            <option value=\"subtract\">Subtract from balance</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Amount</label>\r\n                        <input type=\"number\" name=\"amount\" required min=\"0\" step=\"any\"\r\n                               class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 \r\n                                      border border-brand-primary/20 text-white \r\n                                      focus:border-brand-primary outline-none\">\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Reason</label>\r\n                        <textarea name=\"reason\" required rows=\"3\"\r\n                                  class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 \r\n                                         border border-brand-primary/20 text-white \r\n                                         focus:border-brand-primary outline-none\"\r\n                                  placeholder=\"Explain why you're modifying the balance...\"></textarea>\r\n                    </div>\r\n                    <button type=\"submit\"\r\n                            class=\"w-full py-3 rounded-lg bg-brand-primary text-white \r\n                                   hover:bg-brand-primary/90 transition-colors\">\r\n                        Update Balance\r\n                    </button>\r\n                </form>\r\n            `\r\n        });\r\n\r\n        modal.show();\r\n\r\n        document.getElementById('editBalanceForm').onsubmit = async (e) => {\r\n            e.preventDefault();\r\n            const formData = new FormData(e.target);\r\n            const action = formData.get('action');\r\n            const amount = parseFloat(formData.get('amount'));\r\n            const reason = formData.get('reason');\r\n            try {\r\n                await this.balanceManager.updateBalance(accountId, action, amount, reason);\r\n                modal.hide();\r\n                await this.fetchUserData();\r\n                this.render();\r\n            } catch (error) {\r\n                handleError(error, 'Failed to update balance');\r\n            }\r\n        };\r\n    }\r\n\r\n    async handleAddUserAsset(userId) {\r\n        const { data: availableAssets, error } = await supabase\r\n            .from('assets')\r\n            .select('*')\r\n            .order('symbol');\r\n        if (error) return handleError(error, 'Failed to load assets');\r\n\r\n        const modal = new Modal({\r\n            title: 'Add User Asset',\r\n            content: `\r\n                <form id=\"addAssetForm\" class=\"space-y-6\">\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Select Asset</label>\r\n                        <select name=\"asset_id\" required\r\n                                class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 \r\n                                       border border-brand-primary/20 text-white \r\n                                       focus:border-brand-primary outline-none\">\r\n                            <option value=\"\">Choose an asset</option>\r\n                            ${availableAssets.map(asset => `\r\n                                <option value=\"${asset.id}\">\r\n                                    ${asset.symbol} - ${asset.name}\r\n                                </option>\r\n                            `).join('')}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Initial Balance</label>\r\n                        <input type=\"number\" name=\"balance\" required min=\"0\" step=\"any\"\r\n                               class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 \r\n                                      border border-brand-primary/20 text-white \r\n                                      focus:border-brand-primary outline-none\">\r\n                    </div>\r\n                    <button type=\"submit\"\r\n                            class=\"w-full py-3 rounded-lg bg-brand-primary text-white \r\n                                   hover:bg-brand-primary/90 transition-colors\">\r\n                        Add Asset\r\n                    </button>\r\n                </form>\r\n            `\r\n        });\r\n        modal.show();\r\n\r\n        document.getElementById('addAssetForm').onsubmit = async (e) => {\r\n            e.preventDefault();\r\n            const formData = new FormData(e.target);\r\n            try {\r\n                await this.assetManager.updateUserAsset(\r\n                    userId,\r\n                    formData.get('asset_id'),\r\n                    parseFloat(formData.get('balance')),\r\n                    'set'\r\n                );\r\n                modal.hide();\r\n                await this.fetchUserData();\r\n                this.render();\r\n            } catch (error) {\r\n                handleError(error, 'Failed to add asset');\r\n            }\r\n        };\r\n    }\r\n\r\n    async handleEditUserAsset(assetId) {\r\n        const userAsset = this.userData.user_assets.find(a => a.id === assetId);\r\n        if (!userAsset) return;\r\n\r\n        const modal = new Modal({\r\n            title: `Edit ${userAsset.assets.symbol} Balance`,\r\n            content: `\r\n                <form id=\"editAssetForm\" class=\"space-y-6\">\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Current Balance</label>\r\n                        <div class=\"text-xl font-bold text-white mt-1\">\r\n                            ${userAsset.balance} ${userAsset.assets.symbol}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Action</label>\r\n                        <select name=\"action\" required\r\n                                class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 \r\n                                       border border-brand-primary/20 text-white \r\n                                       focus:border-brand-primary outline-none\">\r\n                            <option value=\"set\">Set exact amount</option>\r\n                            <option value=\"add\">Add to balance</option>\r\n                            <option value=\"subtract\">Subtract from balance</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Amount</label>\r\n                        <input type=\"number\" name=\"amount\" required min=\"0\" step=\"any\"\r\n                               class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 \r\n                                      border border-brand-primary/20 text-white \r\n                                      focus:border-brand-primary outline-none\">\r\n                    </div>\r\n                    <button type=\"submit\"\r\n                            class=\"w-full py-3 rounded-lg bg-brand-primary text-white \r\n                                   hover:bg-brand-primary/90 transition-colors\">\r\n                        Update Asset\r\n                    </button>\r\n                </form>\r\n            `\r\n        });\r\n        modal.show();\r\n\r\n        document.getElementById('editAssetForm').onsubmit = async (e) => {\r\n            e.preventDefault();\r\n            const formData = new FormData(e.target);\r\n            try {\r\n                await this.assetManager.updateUserAsset(\r\n                    this.userId,\r\n                    userAsset.assets.id,\r\n                    parseFloat(formData.get('amount')),\r\n                    formData.get('action')\r\n                );\r\n                modal.hide();\r\n                await this.fetchUserData();\r\n                this.render();\r\n            } catch (error) {\r\n                handleError(error, 'Failed to update asset');\r\n            }\r\n        };\r\n    }\r\n\r\n    async handleRemoveUserAsset(assetId) {\r\n        const confirm = window.confirm('Are you sure you want to remove this asset from the user?');\r\n        if (!confirm) return;\r\n        try {\r\n            await supabase.from('user_assets').delete().eq('id', assetId);\r\n            toastify({ text: 'Asset removed', background: 'bg-green-500' });\r\n            await this.fetchUserData();\r\n            this.render();\r\n        } catch (error) {\r\n            handleError(error, 'Failed to remove asset');\r\n        }\r\n    }\r\n\r\n    async handleKycDocument(docId, action) {\r\n        try {\r\n            let reason = null;\r\n            if (action === 'reject') {\r\n                reason = prompt('Enter rejection reason:');\r\n                if (!reason) return;\r\n            }\r\n            await this.kycManager.handleDocumentReview(docId, action, reason);\r\n            toastify({ text: `Document ${action}d`, background: 'bg-green-500' });\r\n            await this.fetchUserData();\r\n            this.render();\r\n        } catch (error) {\r\n            handleError(error, `Failed to ${action} document`);\r\n        }\r\n    }\r\n\r\n    async handleSendNotification(userId) {\r\n        const modal = new Modal({\r\n            title: 'Send Notification',\r\n            content: `\r\n                <form id=\"notificationForm\" class=\"space-y-6\">\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Title</label>\r\n                        <input type=\"text\" name=\"title\" required\r\n                               class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 \r\n                                      border border-brand-primary/20 text-white \r\n                                      focus:border-brand-primary outline-none\">\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Message</label>\r\n                        <textarea name=\"message\" required rows=\"4\"\r\n                                  class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 \r\n                                         border border-brand-primary/20 text-white \r\n                                         focus:border-brand-primary outline-none\"></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Type</label>\r\n                        <select name=\"type\" required\r\n                                class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 \r\n                                       border border-brand-primary/20 text-white \r\n                                       focus:border-brand-primary outline-none\">\r\n                            <option value=\"system\">System</option>\r\n                            <option value=\"deposit\">Deposit</option>\r\n                            <option value=\"withdrawal\">Withdrawal</option>\r\n                            <option value=\"swap\">Swap</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type=\"submit\"\r\n                            class=\"w-full py-3 rounded-lg bg-brand-primary text-white \r\n                                   hover:bg-brand-primary/90 transition-colors\">\r\n                        Send Notification\r\n                    </button>\r\n                </form>\r\n            `\r\n        });\r\n        modal.show();\r\n\r\n        document.getElementById('notificationForm').onsubmit = async (e) => {\r\n            e.preventDefault();\r\n            const formData = new FormData(e.target);\r\n            try {\r\n                await supabase.from('notifications').insert({\r\n                    user_id: userId,\r\n                    title: formData.get('title'),\r\n                    message: formData.get('message'),\r\n                    type: formData.get('type'),\r\n                    created_at: new Date().toISOString()\r\n                });\r\n                modal.hide();\r\n                toastify({ text: 'Notification sent', background: 'bg-green-500' });\r\n                await this.fetchUserData();\r\n                this.render();\r\n            } catch (error) {\r\n                handleError(error, 'Failed to send notification');\r\n            }\r\n        };\r\n    }\r\n\r\n    async handleMarkNotificationRead(notifId) {\r\n        try {\r\n            await supabase.from('notifications').update({ is_read: true }).eq('id', notifId);\r\n            await this.fetchUserData();\r\n            this.render();\r\n        } catch (error) {\r\n            handleError(error, 'Failed to mark notification as read');\r\n        }\r\n    }\r\n\r\n    async handleDeleteNotification(notifId) {\r\n        const confirm = window.confirm('Delete this notification?');\r\n        if (!confirm) return;\r\n        try {\r\n            await supabase.from('notifications').delete().eq('id', notifId);\r\n            await this.fetchUserData();\r\n            this.render();\r\n        } catch (error) {\r\n            handleError(error, 'Failed to delete notification');\r\n        }\r\n    }\r\n\r\n    async handleEditUserProfile(userId) {\r\n        // Example: Show a modal with editable fields\r\n        const modal = new Modal({\r\n            title: 'Edit User Profile',\r\n            content: `\r\n                <form id=\"editProfileForm\" class=\"space-y-6\">\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Full Name</label>\r\n                        <input type=\"text\" name=\"full_name\" value=\"${this.userData.full_name || ''}\" required\r\n                               class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 border border-brand-primary/20 text-white focus:border-brand-primary outline-none\">\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Email</label>\r\n                        <input type=\"email\" name=\"email\" value=\"${this.userData.email || ''}\" required\r\n                               class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 border border-brand-primary/20 text-white focus:border-brand-primary outline-none\">\r\n                    </div>\r\n                    <button type=\"submit\"\r\n                            class=\"w-full py-3 rounded-lg bg-brand-primary text-white hover:bg-brand-primary/90 transition-colors\">\r\n                        Save Changes\r\n                    </button>\r\n                </form>\r\n            `\r\n        });\r\n        modal.show();\r\n\r\n        document.getElementById('editProfileForm').onsubmit = async (e) => {\r\n            e.preventDefault();\r\n            const formData = new FormData(e.target);\r\n            try {\r\n                await supabase.from('profiles').update({\r\n                    full_name: formData.get('full_name'),\r\n                    email: formData.get('email')\r\n                }).eq('id', userId);\r\n                modal.hide();\r\n                toastify({ text: 'Profile updated', background: 'bg-green-500' });\r\n                await this.fetchUserData();\r\n                this.render();\r\n            } catch (error) {\r\n                handleError(error, 'Failed to update profile');\r\n            }\r\n        };\r\n    }\r\n\r\n    async handleSendCustomEmail(userId) {\r\n        const modal = new Modal({\r\n            title: 'Send Email',\r\n            content: `\r\n                <form id=\"sendEmailForm\" class=\"space-y-6\">\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Subject</label>\r\n                        <input type=\"text\" name=\"subject\" required\r\n                               class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 border border-brand-primary/20 text-white focus:border-brand-primary outline-none\">\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"text-sm text-gray-400\">Message</label>\r\n                        <textarea name=\"message\" required rows=\"6\"\r\n                                  class=\"w-full mt-1 p-3 rounded-lg bg-brand-black/50 border border-brand-primary/20 text-white focus:border-brand-primary outline-none\"></textarea>\r\n                    </div>\r\n                    <button type=\"submit\"\r\n                            class=\"w-full py-3 rounded-lg bg-brand-primary text-white hover:bg-brand-primary/90 transition-colors\">\r\n                        Send Email\r\n                    </button>\r\n                </form>\r\n            `\r\n        });\r\n        modal.show();\r\n\r\n        document.getElementById('sendEmailForm').onsubmit = async (e) => {\r\n            e.preventDefault();\r\n            const formData = new FormData(e.target);\r\n            try {\r\n                await supabase.rpc('send_custom_email', {\r\n                    user_id: userId,\r\n                    subject: formData.get('subject'),\r\n                    message: formData.get('message')\r\n                });\r\n                modal.hide();\r\n                toastify({ text: 'Email sent', background: 'bg-green-500' });\r\n            } catch (error) {\r\n                handleError(error, 'Failed to send email');\r\n            }\r\n        };\r\n    }\r\n\r\n    async handleManageUserAssets(userId) {\r\n        // Optionally, you can open a modal or navigate to a dedicated asset management view\r\n        this.handleAddUserAsset(userId);\r\n    }\r\n\r\n    async handleViewTransaction(txId) {\r\n        const { data: tx, error } = await supabase\r\n            .from('transactions')\r\n            .select('*')\r\n            .eq('id', txId)\r\n            .single();\r\n        if (error) return handleError(error, 'Failed to load transaction');\r\n\r\n        const modal = new Modal({\r\n            title: `Transaction Details`,\r\n            content: `\r\n                <div class=\"space-y-4\">\r\n                    <div><b>Type:</b> ${tx.type}</div>\r\n                    <div><b>Status:</b> ${tx.status}</div>\r\n                    <div><b>Amount:</b> $${tx.amount.toLocaleString()}</div>\r\n                    <div><b>Fee:</b> $${tx.fee?.toLocaleString() || '0'}</div>\r\n                    <div><b>Date:</b> ${new Date(tx.created_at).toLocaleString()}</div>\r\n                    <div><b>Notes:</b> ${tx.notes || '-'}</div>\r\n                    <div><b>Wallet Address:</b> ${tx.wallet_address || '-'}</div>\r\n                    <div><b>Network:</b> ${tx.network || '-'}</div>\r\n                    ${tx.screenshot_url ? `<div><b>Screenshot:</b><br><img src=\"${tx.screenshot_url}\" class=\"max-w-full rounded-lg mt-2\"></div>` : ''}\r\n                </div>\r\n            `\r\n        });\r\n        modal.show();\r\n    }\r\n\r\n    /**\r\n     * Debounce helper\r\n     * @private\r\n     */\r\n    debounce(func, wait) {\r\n        let timeout;\r\n        return function executedFunction(...args) {\r\n            const later = () => {\r\n                clearTimeout(timeout);\r\n                func(...args);\r\n            };\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n}\r\n\r\nexport default UserDetailsView;","import reset, { cleanupAll } from '../../utils/reset';\r\nimport AdminNavbar from './components/Navbar';\r\nimport StyleAdminPage from './components/style';\r\nimport { checkAdminAuth, logoutAdmin } from './functions/adminLoginHandler';\r\nimport { loadPage } from '../../routes/router';\r\nimport { formatDistance } from 'date-fns';\r\nimport Modal from '../../components/Modal';\r\nimport { Spinner } from './components/spinner';\r\nimport { handleError } from '../../utils/errorHandler';\r\nimport supabase from '../../utils/supabaseClients';\r\nimport { UserDetailsView } from './components/UserDetails';\r\nimport AVATAR from '../../../images/user.png'\r\nimport { sendEmail } from '../../utils/send-email';\r\nimport countries from '../../data/countries.json';\r\nimport { createTradingAccounts, generateWelcomeEmailTemplate } from '../user/functions/signupHandler';\r\nimport toastify from '../../components/toastify';\r\nimport { createClient } from '@supabase/supabase-js';\r\n// Create a Supabase client with service role key\r\nconst adminSupabase = createClient(\r\n    'https://ezdabfeiajfpzyoqiqcc.supabase.co',\r\n    import.meta.env.VITE_SUPABASE_SERVICE_ROLE_KEY\r\n);\r\n\r\nconst users = async () => {\r\n\r\n    reset('Olymp AI User Panel Management');\r\n    cleanupAll();\r\n\r\n    let currentView = 'list';\r\n    let selectedUserId = null;\r\n    let usersData = [];\r\n    const spinner = new Spinner();\r\n    let userDetailsView = null;\r\n\r\n    async function loadUsers() {\r\n        spinner.show('Loading users...');\r\n        try {\r\n            const { data, error } = await supabase\r\n                .from('profiles')\r\n                .select(`\r\n                    *,\r\n                    trading_accounts (\r\n                        id, account_type, balance, leverage, asset_type\r\n                    ),\r\n                    user_assets (\r\n                        id, balance,\r\n                        assets (id, symbol, name, logo_url)\r\n                    )\r\n                `)\r\n                .order('created_at', { ascending: false });\r\n\r\n            if (error) throw error;\r\n            usersData = data;\r\n            renderContent();\r\n        } catch (error) {\r\n            handleError(error, 'Failed to load users');\r\n        } finally {\r\n            spinner.hide();\r\n        }\r\n    }\r\n\r\n    function renderUserAvatar(user) {\r\n        return /* html */`\r\n            <div class=\"w-12 h-12 rounded-full bg-brand-primary/10 flex items-center justify-center overflow-hidden\">\r\n                ${user.avatar_url\r\n                ? `<img src=\"${user.avatar_url || AVATAR}\" \r\n                           alt=\"${user.full_name}\" \r\n                           class=\"w-full h-full object-cover\">`\r\n                : `<span class=\"text-xl text-brand-primary\">\r\n                           ${user.full_name.charAt(0).toUpperCase()}\r\n                       </span>`\r\n            }\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    function renderContent() {\r\n        const contentDiv = document.getElementById('mainContent');\r\n        if (!contentDiv) return;\r\n\r\n        try {\r\n            switch (currentView) {\r\n                case 'list':\r\n                    contentDiv.innerHTML = renderUsersList();\r\n                    break;\r\n                case 'details':\r\n                    contentDiv.innerHTML = `<div id=\"userDetailsContent\"></div>`;\r\n                    if (selectedUserId) {\r\n                        userDetailsView = new UserDetailsView(selectedUserId);\r\n                        userDetailsView.initialize().catch(error => {\r\n                            handleError(error, 'Failed to initialize user details');\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n        } catch (error) {\r\n            handleError(error, 'Failed to render content');\r\n        }\r\n    }\r\n\r\n    function renderUsersList() {\r\n        return /* html */`\r\n            <div class=\"space-y-6\">\r\n                <!-- Header with Add User Button -->\r\n                <div class=\"flex justify-between items-center\">\r\n                    <h1 class=\"text-2xl font-bold text-white\">Users</h1>\r\n                    <div class=\"flex flex-row gap-2\">\r\n                        <button onclick=\"window.handleAddUser()\"\r\n                                class=\"px-4 py-2 rounded-xl bg-brand-primary text-white\r\n                                    hover:bg-brand-primary/90 transition-colors\">\r\n                            <i class=\"fas fa-plus\"></i>\r\n                            <span class=\"ml-2\">Add User</span>\r\n                        </button>\r\n                        <button onclick=\"window.handleDeleteUser()\"\r\n                                class=\"px-4 py-2 rounded-xl bg-red-500 text-white\r\n                                    hover:bg-red-500/80 transition-colors\">\r\n                            <i class=\"fas fa-plus\"></i>\r\n                            <span class=\"ml-2\">Delete User</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Users Grid -->\r\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                    ${usersData.map(user => /* html */`\r\n                        <div class=\"bg-brand-black/50 rounded-xl p-6 hover:border-brand-primary/30 \r\n                                  transition-colors cursor-pointer\"\r\n                             onclick=\"window.viewUserDetails('${user.id}')\">\r\n                            <!-- User card content -->\r\n                            ${renderUserCard(user)}\r\n                        </div>\r\n                    `).join('')}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    function renderUserCard(user) {\r\n        const liveAccount = user.trading_accounts?.find(acc => acc.account_type === 'live');\r\n\r\n        return /* html */`\r\n            <div class=\"flex items-start justify-between\">\r\n                <!-- User basic info -->\r\n                <div class=\"flex items-center gap-4\">\r\n                    ${renderUserAvatar(user)}\r\n                    <div>\r\n                        <h3 class=\"font-medium text-white\">${user.full_name}</h3>\r\n                        <p class=\"text-sm text-gray-400\">${user.email}</p>\r\n                    </div>\r\n                </div>\r\n                <!-- Verification status -->\r\n                <span class=\"px-2 py-1 rounded-full text-sm\r\n                    ${user.is_verified ?\r\n                'bg-green-500/10 text-green-500' :\r\n                'bg-yellow-500/10 text-yellow-500'}\">\r\n                    ${user.is_verified ? 'Verified' : 'Pending'}\r\n                </span>\r\n            </div>\r\n            <!-- User balance info -->\r\n            <div class=\"mt-4 pt-4 border-t border-brand-primary/10\">\r\n                <div class=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                        <span class=\"text-sm text-gray-400\">Live Balance</span>\r\n                        <p class=\"text-white mt-1\">\r\n                            $${liveAccount?.balance?.toLocaleString() || '0.00'}\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <span class=\"text-sm text-gray-400\">Joined</span>\r\n                        <p class=\"text-white mt-1\">\r\n                            ${formatDistance(new Date(user.created_at), new Date(), {\r\n                    addSuffix: true\r\n                })}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    function pageEvents() {\r\n        StyleAdminPage();\r\n        // Handle navigation\r\n        document.querySelectorAll('[data-nav]').forEach(button => {\r\n            button.addEventListener('click', async (e) => {\r\n                e.preventDefault();\r\n                const route = button.dataset.route;\r\n                if (route) {\r\n                    await loadPage(`admin${route.charAt(0).toUpperCase() + route.slice(1)}`);\r\n                }\r\n            });\r\n        });\r\n\r\n        // Handle logout\r\n        document.getElementById('admin-logout')?.addEventListener('click', async () => {\r\n            await logoutAdmin();\r\n        });\r\n\r\n        loadUsers();\r\n\r\n        // Update the view handler\r\n        window.viewUserDetails = (userId) => {\r\n            if (!userId) return;\r\n\r\n            try {\r\n                selectedUserId = userId;\r\n                currentView = 'details';\r\n                renderContent();\r\n            } catch (error) {\r\n                handleError(error, 'Failed to view user details');\r\n            }\r\n        };\r\n\r\n        window.backToUsersList = () => {\r\n            try {\r\n                if (userDetailsView) {\r\n                    // Properly cleanup all window handlers\r\n                    [\r\n                        'handleTransaction',\r\n                        'editBalance',\r\n                        'addUserAsset',\r\n                        'editUserAsset',\r\n                        'removeUserAsset',\r\n                        'handleKycDocument',\r\n                        'sendNotification',\r\n                        'markNotificationRead',\r\n                        'deleteNotification',\r\n                        'editUserProfile',\r\n                        'sendCustomEmail',\r\n                        'manageUserAssets',\r\n                        'viewTransaction',\r\n                        'openImage'\r\n                    ].forEach(handler => {\r\n                        if (window[handler]) {\r\n                            window[handler] = null;\r\n                        }\r\n                    });\r\n\r\n                    userDetailsView.destroy();\r\n                    userDetailsView = null;\r\n                }\r\n                currentView = 'list';\r\n                renderContent();\r\n            } catch (error) {\r\n                handleError(error, 'Failed to return to users list');\r\n            }\r\n        };\r\n        window.handleAddUser = () => {\r\n            const modal = new Modal({\r\n                title: 'Add New User',\r\n                content: /* html */`\r\n            <form id=\"addUserForm\" class=\"space-y-6\">\r\n                <!-- Full Name Input -->\r\n                <div class=\"form-group\">\r\n                    <label for=\"fullname\" class=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                        Full Name\r\n                    </label>\r\n                    <input type=\"text\" id=\"fullname\" name=\"fullname\"\r\n                           class=\"w-full h-12 px-4 rounded-xl bg-brand-black/50 text-white \r\n                                  border border-brand-primary/30 focus:border-brand-primary \r\n                                  outline-none transition-all\"\r\n                           placeholder=\"Enter user's full name\" required>\r\n                </div>\r\n\r\n                <!-- Email Input -->\r\n                <div class=\"form-group\">\r\n                    <label for=\"email\" class=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                        Email Address\r\n                    </label>\r\n                    <input type=\"email\" id=\"email\" name=\"email\"\r\n                           class=\"w-full h-12 px-4 rounded-xl bg-brand-black/50 text-white \r\n                                  border border-brand-primary/30 focus:border-brand-primary \r\n                                  outline-none transition-all\"\r\n                           placeholder=\"user@example.com\" required>\r\n                </div>\r\n\r\n                <!-- Phone Input -->\r\n                <div class=\"form-group\">\r\n                    <label for=\"phone\" class=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                        Phone Number\r\n                    </label>\r\n                    <input type=\"tel\" id=\"phone\" name=\"phone\"\r\n                           class=\"w-full h-12 px-4 rounded-xl bg-brand-black/50 text-white \r\n                                  border border-brand-primary/30 focus:border-brand-primary \r\n                                  outline-none transition-all\"\r\n                           placeholder=\"+1234567890\" required>\r\n                </div>\r\n\r\n                <!-- Country Selection -->\r\n                <div class=\"form-group\">\r\n                    <label for=\"country\" class=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                        Country\r\n                    </label>\r\n                    <select id=\"country\" name=\"country\"\r\n                            class=\"w-full h-12 px-4 rounded-xl bg-brand-black/50 text-white \r\n                                   border border-brand-primary/30 focus:border-brand-primary \r\n                                   outline-none transition-all\" required>\r\n                        <option value=\"\">Select Country</option>\r\n                        ${countries.map(c => `<option value=\"${c.code}\">${c.name}</option>`).join('')}\r\n                    </select>\r\n                </div>\r\n\r\n                <!-- Password Input -->\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\" class=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                        Password\r\n                    </label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\"\r\n                           class=\"w-full h-12 px-4 rounded-xl bg-brand-black/50 text-white \r\n                                  border border-brand-primary/30 focus:border-brand-primary \r\n                                  outline-none transition-all\"\r\n                           placeholder=\"Create password\" required>\r\n                </div>\r\n            </form>\r\n        `,\r\n                actions: [{\r\n                    text: 'Add User',\r\n                    primary: true,\r\n                    onClick: async (close) => {\r\n                        const form = document.getElementById('addUserForm');\r\n                        const formData = {\r\n                            fullname: form.fullname.value.trim(),\r\n                            email: form.email.value.trim(),\r\n                            phone: form.phone.value.trim(),\r\n                            country: form.country.value,\r\n                            password: form.password.value\r\n                        };\r\n\r\n                        // Basic validation\r\n                        if (!formData.fullname || !formData.email || !formData.phone ||\r\n                            !formData.country || !formData.password) {\r\n                            toastify({\r\n                                text: \"Please fill in all fields\",\r\n                                icon: \"fas fa-exclamation-circle\",\r\n                                background: \"bg-red-500/10\"\r\n                            });\r\n                            return;\r\n                        }\r\n\r\n                        try {\r\n                            spinner.show('Creating user account...');\r\n\r\n                            // Create user with Supabase auth\r\n                            const { data: authUser, error: authError } = await supabase.auth.signUp({\r\n                                email: formData.email,\r\n                                password: formData.password,\r\n                                options: {\r\n                                    data: {\r\n                                        full_name: formData.fullname\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                            if (authError) throw authError;\r\n\r\n                            // Create profile\r\n                            const { error: profileError } = await supabase\r\n                                .from('profiles')\r\n                                .insert({\r\n                                    id: authUser.user.id,\r\n                                    full_name: formData.fullname,\r\n                                    email: formData.email,\r\n                                    phone_number: formData.phone,\r\n                                    country: formData.country,\r\n                                    is_verified: true // Automatically verify the user\r\n                                });\r\n\r\n                            if (profileError) throw profileError;\r\n\r\n                            // Create trading accounts\r\n                            await createTradingAccounts(authUser.user.id);\r\n\r\n                            // Send welcome email\r\n                            await sendEmail({\r\n                                to: formData.email,\r\n                                subject: \"Welcome to Olymp AI Invest\",\r\n                                html: generateWelcomeEmailTemplate(formData.email)\r\n                            });\r\n\r\n                            close();\r\n                            toastify({\r\n                                text: \"User created successfully\",\r\n                                icon: \"fas fa-check-circle\",\r\n                                background: \"bg-green-500/10\"\r\n                            });\r\n\r\n                            // Refresh users list\r\n                            window.dispatchEvent(new Event('refreshUsers'));\r\n\r\n                        } catch (error) {\r\n                            console.error('Error creating user:', error);\r\n                            toastify({\r\n                                text: error.message || \"Failed to create user\",\r\n                                icon: \"fas fa-exclamation-circle\",\r\n                                background: \"bg-red-500/10\"\r\n                            });\r\n                        } finally {\r\n                            spinner.hide();\r\n                        }\r\n                    }\r\n                }]\r\n            });\r\n\r\n            modal.show();\r\n        };\r\n\r\n        // Update the handleDeleteUser function\r\n        window.handleDeleteUser = () => {\r\n            const modal = new Modal({\r\n                title: 'Delete User',\r\n                content: /* html */`\r\n            <form id=\"deleteUserForm\" class=\"space-y-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"userEmail\" class=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                        User Email\r\n                    </label>\r\n                    <input type=\"email\" id=\"userEmail\" name=\"userEmail\"\r\n                           class=\"w-full h-12 px-4 rounded-xl bg-brand-black/50 text-white \r\n                                  border border-brand-primary/30 focus:border-brand-primary \r\n                                  outline-none transition-all\"\r\n                           placeholder=\"Enter user's email\" required>\r\n                </div>\r\n                <div class=\"mt-4 p-4 bg-red-500/10 rounded-lg\">\r\n                    <p class=\"text-red-500\">Warning: This action cannot be undone!</p>\r\n                    <p class=\"text-gray-400 mt-2\">\r\n                        This will permanently delete the user account and all associated data including:\r\n                        <ul class=\"list-disc list-inside mt-2 space-y-1\">\r\n                            <li>Profile information</li>\r\n                            <li>Trading accounts</li>\r\n                            <li>Transaction history</li>\r\n                            <li>Assets and balances</li>\r\n                            <li>KYC documents</li>\r\n                        </ul>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n        `,\r\n                actions: [{\r\n                    text: 'Delete User',\r\n                    primary: true,\r\n                    class: 'bg-red-500 hover:bg-red-600',\r\n                    onClick: async (close) => {\r\n                        try {\r\n                            const email = document.getElementById('userEmail').value.trim();\r\n\r\n                            if (!email) {\r\n                                toastify({\r\n                                    text: \"Please enter user's email\",\r\n                                    icon: \"fas fa-exclamation-circle\",\r\n                                    background: \"bg-red-500/10\"\r\n                                });\r\n                                return;\r\n                            }\r\n\r\n                            spinner.show('Deleting user...');\r\n\r\n                            // First, get the user's ID from their email\r\n                            const { data: profile, error: profileError } = await supabase\r\n                                .from('profiles')\r\n                                .select('id')\r\n                                .eq('email', email)\r\n                                .single();\r\n\r\n                            if (profileError || !profile) {\r\n                                throw new Error('User not found');\r\n                            }\r\n\r\n                            // Delete the user's auth record using service role\r\n                            const { error: authError } = await adminSupabase.auth.admin.deleteUser(\r\n                                profile.id\r\n                            );\r\n\r\n                            if (authError) throw authError;\r\n\r\n                            // Delete the user's profile and related data\r\n                            const { error: deleteError } = await supabase\r\n                                .from('profiles')\r\n                                .delete()\r\n                                .eq('id', profile.id);\r\n\r\n                            if (deleteError) throw deleteError;\r\n\r\n                            close();\r\n                            toastify({\r\n                                text: \"User deleted successfully\",\r\n                                icon: \"fas fa-check-circle\",\r\n                                background: \"bg-green-500/10\"\r\n                            });\r\n\r\n                            // Refresh users list\r\n                            loadUsers();\r\n\r\n                        } catch (error) {\r\n                            console.error('Error deleting user:', error);\r\n                            toastify({\r\n                                text: error.message || \"Failed to delete user\",\r\n                                icon: \"fas fa-exclamation-circle\",\r\n                                background: \"bg-red-500/10\"\r\n                            });\r\n                        } finally {\r\n                            spinner.hide();\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'Cancel',\r\n                    onClick: (close) => close()\r\n                }]\r\n            });\r\n\r\n            modal.show();\r\n        };\r\n\r\n        window.addEventListener('refreshUsers', loadUsers);\r\n    }\r\n\r\n    return {\r\n        html: /* html */`\r\n            <div class=\"flex min-h-screen bg-brand-dark mobile-container\">\r\n                ${AdminNavbar().html}\r\n                <main class=\"flex-1 lg:ml-24 p-4 lg:p-8 pb-24 lg:pb-8\">\r\n                    <div id=\"mainContent\" class=\"max-w-7xl mx-auto space-y-6\">\r\n                        <!-- Content will be rendered here -->\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        `,\r\n        pageEvents\r\n    };\r\n};\r\n\r\nexport default users;"],"file":"assets/users-DE58sFjk.js"}