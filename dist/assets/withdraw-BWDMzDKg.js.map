{"version":3,"file":"withdraw-BWDMzDKg.js","sources":["../../src/script/views/user/withdraw.js"],"sourcesContent":["import auth from '../../utils/auth'\r\nimport reset from '../../utils/reset'\r\nimport Navbar from './components/Navbar'\r\nimport supabase from '../../utils/supabaseClients'\r\nimport { createNotification } from '../../utils/notifications'\r\nimport toastify from '../../components/toastify'\r\nimport spinner from '../../utils/spinner'\r\nimport Modal from '../../components/Modal'\r\nimport { loadPage } from '../../routes/router'\r\nimport { trackPageVisit } from '../../utils/analtics'\r\n\r\n\r\nconst withdraw = async () => {\r\n    const authCheck = await auth.check('withdraw')\r\n    if (!authCheck) return { html: '', pageEvents: () => { } }\r\n\r\n    reset('Olymp AI | Withdraw Assets')\r\n    await trackPageVisit()\r\n\r\n    const { html: navbar, pageEvents: navEvents } = Navbar()\r\n\r\n    // State\r\n    let userAssets = []\r\n    let selectedAsset = null\r\n    let withdrawAmount = 0\r\n    let destinationWallet = ''\r\n    let selectedNetwork = ''\r\n    let isProcessing = false\r\n\r\n    // Fetch user assets\r\n    async function fetchUserAssets() {\r\n        try {\r\n            spinner.start()\r\n            const { data: { session }, error: sessionError } = await supabase.auth.getSession()\r\n\r\n            if (sessionError || !session) {\r\n                throw new Error('Authentication failed. Please login again.')\r\n            }\r\n\r\n            const { data, error } = await supabase\r\n                .from('user_assets')\r\n                .select(`\r\n                *,\r\n                assets:asset_id (\r\n                    id,\r\n                    symbol,\r\n                    name,\r\n                    network,\r\n                    logo_url\r\n                )\r\n            `)\r\n                .eq('user_id', session.user.id)\r\n\r\n            if (error) throw error\r\n\r\n            if (!data || data.length === 0) {\r\n                document.getElementById('assetSelect').innerHTML = `\r\n                <option value=\"\" disabled selected>No assets found</option>\r\n            `\r\n                return\r\n            }\r\n\r\n            userAssets = data\r\n            renderAssetList()\r\n        } catch (error) {\r\n            console.error('Fetch assets error:', error)\r\n            toastify({\r\n                text: error.message || 'Failed to load assets',\r\n                icon: 'fas fa-times',\r\n                background: 'bg-red-500',\r\n                duration: 5000\r\n            })\r\n\r\n            // Redirect to login if authentication failed\r\n            if (error.message.includes('authentication')) {\r\n                setTimeout(async () => await loadPage(\"login\"), 2000)\r\n            }\r\n        } finally {\r\n            spinner.stop()\r\n        }\r\n    }\r\n\r\n    // Handle asset selection\r\n    async function handleAssetSelect(e) {\r\n        const assetId = e.target.value\r\n        selectedAsset = userAssets.find(a => a.assets.id === assetId)?.assets\r\n\r\n        if (!selectedAsset) return\r\n\r\n        document.getElementById('networkSelect').innerHTML = `\r\n            <label class=\"block text-sm font-medium text-gray-400 mb-2\">Select Network</label>\r\n            <select class=\"w-full p-4 bg-brand-black/50 border border-brand-primary/20 rounded-xl text-white\"\r\n                    onchange=\"window.handleNetworkSelect(event)\">\r\n                <option value=\"\" disabled selected>Select Network</option>\r\n                ${selectedAsset.network.map(n => `\r\n                    <option value=\"${n}\">${n}</option>\r\n                `).join('')}\r\n            </select>\r\n        `\r\n    }\r\n\r\n    // Handle network selection\r\n    function handleNetworkSelect(e) {\r\n        selectedNetwork = e.target.value\r\n        document.getElementById('withdrawForm').classList.remove('hidden')\r\n    }\r\n\r\n    // Process withdrawal\r\n    async function processWithdraw(e) {\r\n        e.preventDefault()\r\n\r\n        if (isProcessing) return\r\n\r\n        try {\r\n            isProcessing = true\r\n            spinner.start()\r\n            // Validate all required fields first\r\n            if (!selectedAsset) {\r\n                throw new Error('Please select an asset')\r\n            }\r\n            if (!selectedNetwork) {\r\n                throw new Error('Please select a network')\r\n            }\r\n\r\n            const { data: { session } } = await supabase.auth.getSession()\r\n            if (!session) throw new Error('Not authenticated')\r\n\r\n            withdrawAmount = parseFloat(e.target.amount.value)\r\n            if (isNaN(withdrawAmount) || withdrawAmount <= 0) {\r\n                throw new Error('Please enter a valid amount')\r\n            }\r\n\r\n            destinationWallet = e.target.wallet.value\r\n            if (!destinationWallet) {\r\n                throw new Error('Please enter a destination wallet')\r\n            }\r\n\r\n            const userAsset = userAssets.find(a => a.assets.id === selectedAsset.id)\r\n            if (!userAsset) {\r\n                throw new Error('Selected asset not found')\r\n            }\r\n            if (userAsset.balance < withdrawAmount) {\r\n                throw new Error(`Insufficient balance. Available: ${userAsset.balance} ${selectedAsset.symbol}`)\r\n            }\r\n\r\n            isProcessing = false\r\n            spinner.stop()\r\n\r\n            // Get transaction PIN\r\n            const pin = await new Promise((resolve) => {\r\n                const modal = new Modal({\r\n                    title: 'Confirm Withdrawal',\r\n                    content: `\r\n                        <div class=\"space-y-4 text-center\">\r\n                            <i class=\"fas fa-lock text-4xl text-brand-primary\"></i>\r\n                            <input type=\"password\" \r\n                                   id=\"txPin\"\r\n                                   class=\"w-full p-4 bg-brand-black/50 border border-brand-primary/20 rounded-xl text-white\"\r\n                                   placeholder=\"Enter 6-digit PIN\"\r\n                                   maxlength=\"6\"\r\n                                   pattern=\"[0-9]*\">\r\n                        </div>\r\n                    `,\r\n                    actions: [{\r\n                        text: 'Confirm',\r\n                        primary: true,\r\n                        onClick: (close) => {\r\n                            resolve(document.getElementById('txPin').value)\r\n                            close()\r\n                        }\r\n                    }]\r\n                })\r\n                modal.show()\r\n            })\r\n\r\n            if (!pin || pin.length !== 6) throw new Error('Invalid PIN')\r\n\r\n            // Create withdrawal transaction\r\n            const { error: txError } = await supabase\r\n                .from('transactions')\r\n                .insert({\r\n                    user_id: session.user.id,\r\n                    type: 'withdrawal',\r\n                    status: 'pending',\r\n                    from_asset: selectedAsset.id,\r\n                    amount: withdrawAmount,\r\n                    fee: withdrawAmount * 0.01, // 1% fee\r\n                    fee_percentage: 1,\r\n                    wallet_address: destinationWallet,\r\n                    network: selectedNetwork\r\n                })\r\n\r\n            if (txError) throw txError\r\n\r\n            // Create notification\r\n            await createNotification(\r\n                session.user.id,\r\n                'withdrawal',\r\n                'Withdrawal Initiated',\r\n                `Your withdrawal of ${withdrawAmount} ${selectedAsset.symbol} is being processed`\r\n            )\r\n\r\n            // Show success\r\n            const successModal = new Modal({\r\n                content: `\r\n                    <div class=\"text-center space-y-4\">\r\n                        <div class=\"text-6xl text-green-500\">\r\n                            <i class=\"fas fa-check-circle\"></i>\r\n                        </div>\r\n                        <h3 class=\"text-xl font-medium text-white\">Withdrawal Initiated</h3>\r\n                        <p class=\"text-gray-400\">Your withdrawal will be processed within 24 hours</p>\r\n                    </div>\r\n                `\r\n            })\r\n            successModal.show()\r\n\r\n            setTimeout(async () => {\r\n                successModal.hide()\r\n                await loadPage(\"dashboard\")\r\n            }, 3000)\r\n\r\n        } catch (error) {\r\n            console.error('Withdrawal error:', error)\r\n            toastify({\r\n                text: error.message || 'Failed to process withdrawal',\r\n                background: 'bg-red-500'\r\n            })\r\n        } finally {\r\n            isProcessing = false\r\n            spinner.stop()\r\n        }\r\n    }\r\n\r\n    // Render asset list\r\n    function renderAssetList() {\r\n        const assetSelect = document.getElementById('assetSelect')\r\n        if (!assetSelect) return\r\n\r\n        assetSelect.innerHTML = userAssets.map(a => `\r\n            <option value=\"${a.assets.id}\">\r\n                ${a.assets.symbol} - Balance: ${a.balance}\r\n            </option>\r\n        `).join('')\r\n    }\r\n\r\n    // Attach global handlers\r\n    window.handleAssetSelect = handleAssetSelect\r\n    window.handleNetworkSelect = handleNetworkSelect\r\n    window.processWithdraw = processWithdraw\r\n\r\n    function pageEvents() {\r\n        navEvents()\r\n        // Add error boundary\r\n        window.onerror = function (msg, url, lineNo, columnNo, error) {\r\n            console.error('Global error:', error)\r\n            toastify({\r\n                text: 'Something went wrong. Please refresh the page.',\r\n                background: 'bg-red-500'\r\n            })\r\n            return false\r\n        }\r\n\r\n        // Initialize page\r\n        const init = async () => {\r\n            try {\r\n                await fetchUserAssets()\r\n\r\n                // Add event listeners for form elements\r\n                const form = document.getElementById('withdrawForm')\r\n                if (form) {\r\n                    form.addEventListener('submit', processWithdraw)\r\n                }\r\n            } catch (error) {\r\n                console.error('Initialization error:', error)\r\n            }\r\n        }\r\n\r\n        init()\r\n    }\r\n\r\n    // Update the renderAssetList function\r\n    function renderAssetList() {\r\n        const assetSelect = document.getElementById('assetSelect')\r\n        if (!assetSelect) return\r\n\r\n        try {\r\n            const options = userAssets\r\n                .filter(a => a.balance > 0) // Only show assets with balance\r\n                .map(a => `\r\n                <option value=\"${a.assets.id}\">\r\n                    ${a.assets.symbol} - Balance: ${parseFloat(a.balance).toFixed(8)}\r\n                </option>\r\n            `)\r\n\r\n            assetSelect.innerHTML = options.length ?\r\n                `<option value=\"\" disabled selected>Select Asset</option>${options.join('')}` :\r\n                '<option value=\"\" disabled selected>No available assets</option>'\r\n        } catch (error) {\r\n            console.error('Render assets error:', error)\r\n            assetSelect.innerHTML = '<option value=\"\" disabled selected>Error loading assets</option>'\r\n        }\r\n\r\n    }\r\n\r\n    return {\r\n        html: /* html */`\r\n            ${navbar}\r\n            <main class=\"main-scroll-view pb-36 lg:pb-0\">\r\n                <div class=\"max-w-3xl mx-auto p-4 md:p-8 space-y-8\">\r\n                    <h1 class=\"text-2xl font-bold text-white\">Withdraw Assets</h1>\r\n                    \r\n                    <!-- Asset Selection -->\r\n                    <div class=\"space-y-4\">\r\n                        <label class=\"block text-sm font-medium text-gray-400\">Select Asset</label>\r\n                        <select id=\"assetSelect\" \r\n                                class=\"w-full p-4 bg-brand-black/50 border border-brand-primary/20 rounded-xl text-white\"\r\n                                onchange=\"window.handleAssetSelect(event)\">\r\n                            <option value=\"\" disabled selected>Select Asset</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <!-- Network Selection -->\r\n                    <div id=\"networkSelect\" class=\"space-y-4\"></div>\r\n\r\n                    <!-- Withdrawal Form -->\r\n                    <form id=\"withdrawForm\" \r\n                          class=\"hidden space-y-6\" \r\n                          onsubmit=\"window.processWithdraw(event)\">\r\n                        <div class=\"space-y-4\">\r\n                            <label class=\"block text-sm font-medium text-gray-400\">Amount</label>\r\n                            <input type=\"number\" \r\n                                   name=\"amount\"\r\n                                   step=\"any\"\r\n                                   required\r\n                                   class=\"w-full p-4 bg-brand-black/50 border border-brand-primary/20 rounded-xl text-white\"\r\n                                   placeholder=\"Enter amount\">\r\n                        </div>\r\n\r\n                        <div class=\"space-y-4\">\r\n                            <label class=\"block text-sm font-medium text-gray-400\">Destination Wallet</label>\r\n                            <input type=\"text\" \r\n                                   name=\"wallet\"\r\n                                   required\r\n                                   class=\"w-full p-4 bg-brand-black/50 border border-brand-primary/20 rounded-xl text-white\"\r\n                                   placeholder=\"Enter destination wallet address\">\r\n                        </div>\r\n\r\n                        <button type=\"submit\"\r\n                                class=\"w-full p-4 bg-brand-primary text-white rounded-xl hover:bg-brand-primary/90\r\n                                       transition-colors duration-300 flex items-center justify-center gap-2\">\r\n                            <i class=\"fas fa-arrow-right\"></i>\r\n                            Proceed with Withdrawal\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        `,\r\n        pageEvents\r\n    }\r\n}\r\n\r\nexport default withdraw"],"names":["withdraw","auth","reset","trackPageVisit","navbar","navEvents","Navbar","userAssets","selectedAsset","withdrawAmount","destinationWallet","selectedNetwork","isProcessing","fetchUserAssets","spinner","session","sessionError","supabase","data","error","renderAssetList","toastify","loadPage","handleAssetSelect","e","assetId","n","handleNetworkSelect","processWithdraw","userAsset","a","pin","resolve","Modal","close","txError","createNotification","successModal","pageEvents","msg","url","lineNo","columnNo","form","assetSelect","options"],"mappings":"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"}