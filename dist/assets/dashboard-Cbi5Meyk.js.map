{"version":3,"file":"dashboard-Cbi5Meyk.js","sources":["../../src/script/utils/onboardingHandler.js","../../src/images/welcome/welcome.png","../../src/script/components/Onboarding.js","../../src/script/views/user/components/Cards.js","../../src/script/views/user/components/TradingWidget.js","../../src/script/views/user/components/TransactionList.js","../../src/script/views/user/dashboard.js"],"sourcesContent":["import supabase from './supabaseClients'\r\n\r\nexport async function checkOnboardingStatus(userId) {\r\n    try {\r\n        const { data, error } = await supabase\r\n            .from('profiles')\r\n            .select('is_created, onboarding_step')\r\n            .eq('id', userId)\r\n            .single()\r\n\r\n        if (error) throw error\r\n\r\n        return {\r\n            isComplete: data.is_created,\r\n            currentStep: data.onboarding_step || 0\r\n        }\r\n    } catch (error) {\r\n        console.error('Onboarding check failed:', error)\r\n        return { isComplete: false, currentStep: 0 }\r\n    }\r\n}\r\n\r\nexport async function updateOnboardingStep(userId, step) {\r\n    try {\r\n        const { error } = await supabase\r\n            .from('profiles')\r\n            .update({ onboarding_step: step })\r\n            .eq('id', userId)\r\n\r\n        if (error) throw error\r\n        return true\r\n    } catch (error) {\r\n        console.error('Failed to update onboarding step:', error)\r\n        return false\r\n    }\r\n}","export default \"__VITE_ASSET__CwOsRSQb__\"","import { updateOnboardingStep } from '../utils/onboardingHandler'\r\nimport toastify from './toastify'\r\nimport spinner from '../utils/spinner'\r\nimport WelcomeI from '../../images/welcome/welcome.png'\r\nimport supabase from '../utils/supabaseClients'\r\n\r\nexport default class Onboarding {\r\n    constructor(userId, currentStep = 0) {\r\n        this.userId = userId\r\n        this.currentStep = currentStep\r\n        this.steps = [\r\n            {\r\n                title: 'Welcome to Olymp AI Invest',\r\n                icon: 'rocket',\r\n                content: this.welcomeStep()\r\n            },\r\n            {\r\n                title: 'Basic Information',\r\n                icon: 'user',\r\n                content: this.basicInfoStep()\r\n            },\r\n            {\r\n                title: 'Trading Experience',\r\n                icon: 'chart-line',\r\n                content: this.experienceStep()\r\n            },\r\n            {\r\n                title: 'Security Setup',\r\n                icon: 'shield-alt',\r\n                content: this.securityStep()\r\n            }\r\n        ]\r\n\r\n        // Attach instance to window\r\n        window.onboarding = this;\r\n    }\r\n\r\n    welcomeStep() {\r\n        return /* html */`\r\n            <div class=\"text-center space-y-8 animate-fade-in-up\">\r\n                <div class=\"relative\">\r\n                    <img src=\"${WelcomeI}\" alt=\"Welcome\" \r\n                         class=\"w-64 lg:w-72 mx-auto transform hover:scale-105 transition-transform\">\r\n                </div>\r\n                <div class=\"space-y-4\">\r\n                    <h2 class=\"text-3xl lg:text-4xl font-bold text-white\">\r\n                        Welcome to Olymp AI Invest!\r\n                    </h2>\r\n                    <p class=\"text-gray-400 max-w-md mx-auto text-lg\">\r\n                        Let's get your account set up so you can start trading right away.\r\n                        This will only take a few minutes.\r\n                    </p>\r\n                </div>\r\n                <button onclick=\"onboarding.nextStep()\"\r\n                        class=\"group px-8 py-4 bg-brand-primary text-white rounded-xl\r\n                               hover:bg-opacity-90 transition-all text-lg font-medium\r\n                               flex items-center gap-3 mx-auto\">\r\n                    Let's Get Started\r\n                    <i class=\"fas fa-arrow-right group-hover:translate-x-1 transition-transform\"></i>\r\n                </button>\r\n            </div>\r\n        `\r\n    }\r\n\r\n    basicInfoStep() {\r\n        return /* html */`\r\n            <div class=\"max-w-md mx-auto space-y-6 animate-fade-in-up\">\r\n                <div class=\"flex items-center gap-4 mb-6\">\r\n                    <div class=\"w-12 h-12 bg-brand-primary/20 rounded-xl \r\n                               flex items-center justify-center shrink-0\">\r\n                        <i class=\"fas fa-user text-brand-primary text-xl\"></i>\r\n                    </div>\r\n                    <div>\r\n                        <h3 class=\"text-xl lg:text-2xl font-bold text-white\">Tell us about yourself</h3>\r\n                        <p class=\"text-gray-400\">Help us personalize your experience</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <form id=\"basicInfoForm\" class=\"space-y-6\">\r\n                    <div class=\"space-y-2\">\r\n                        <label class=\"text-sm font-medium text-gray-300 flex items-center gap-2\">\r\n                            <i class=\"fas fa-calendar-alt text-brand-primary\"></i>\r\n                            Date of Birth\r\n                        </label>\r\n                        <input type=\"date\" required\r\n                               class=\"w-full px-4 py-3 rounded-xl bg-brand-black/50 text-white\r\n                                      border border-brand-primary/30 focus:border-brand-primary\r\n                                      outline-none transition-all\">\r\n                    </div>\r\n                    <div class=\"space-y-2\">\r\n                        <label class=\"text-sm font-medium text-gray-300 flex items-center gap-2\">\r\n                            <i class=\"fas fa-map-marker-alt text-brand-primary\"></i>\r\n                            Address\r\n                        </label>\r\n                        <textarea required rows=\"3\"\r\n                                class=\"w-full px-4 py-3 rounded-xl bg-brand-black/50 text-white\r\n                                       border border-brand-primary/30 focus:border-brand-primary\r\n                                       outline-none transition-all resize-none\"></textarea>\r\n                    </div>\r\n                    <button type=\"submit\"\r\n                            class=\"group w-full py-4 bg-brand-primary text-white rounded-xl\r\n                                   hover:bg-opacity-90 transition-all flex items-center \r\n                                   justify-center gap-2 text-lg font-medium\">\r\n                        Continue\r\n                        <i class=\"fas fa-arrow-right group-hover:translate-x-1 transition-transform\"></i>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        `\r\n    }\r\n\r\n    experienceStep() {\r\n        return /* html */`\r\n            <div class=\"max-w-md mx-auto space-y-6 animate-fade-in-up\">\r\n                <div class=\"flex items-center gap-4 mb-6\">\r\n                    <div class=\"w-12 h-12 bg-brand-primary/20 rounded-xl \r\n                               flex items-center justify-center shrink-0\">\r\n                        <i class=\"fas fa-chart-line text-brand-primary text-xl\"></i>\r\n                    </div>\r\n                    <div>\r\n                        <h3 class=\"text-xl lg:text-2xl font-bold text-white\">Trading Experience</h3>\r\n                        <p class=\"text-gray-400\">Tell us about your trading background</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <form id=\"experienceForm\" class=\"space-y-6\">\r\n                    <div class=\"space-y-4\">\r\n                        <label class=\"text-sm font-medium text-gray-300 flex items-center gap-2\">\r\n                            <i class=\"fas fa-star text-brand-primary\"></i>\r\n                            How would you rate your trading experience?\r\n                        </label>\r\n                        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n                            <label class=\"relative cursor-pointer\">\r\n                                <input type=\"radio\" name=\"experience\" value=\"beginner\" \r\n                                       class=\"peer sr-only\" required>\r\n                                <div class=\"p-4 rounded-xl border border-brand-primary/30 \r\n                                           peer-checked:border-brand-primary peer-checked:bg-brand-primary/20\r\n                                           hover:bg-brand-primary/10 transition-all\">\r\n                                    <i class=\"fas fa-seedling text-2xl mb-2 text-brand-primary\"></i>\r\n                                    <h4 class=\"font-medium text-white\">Beginner</h4>\r\n                                    <p class=\"text-sm text-gray-400\">New to trading</p>\r\n                                </div>\r\n                            </label>\r\n                            <label class=\"relative cursor-pointer\">\r\n                                <input type=\"radio\" name=\"experience\" value=\"intermediate\" \r\n                                       class=\"peer sr-only\">\r\n                                <div class=\"p-4 rounded-xl border border-brand-primary/30 \r\n                                           peer-checked:border-brand-primary peer-checked:bg-brand-primary/20\r\n                                           hover:bg-brand-primary/10 transition-all\">\r\n                                    <i class=\"fas fa-chart-bar text-2xl mb-2 text-brand-primary\"></i>\r\n                                    <h4 class=\"font-medium text-white\">Intermediate</h4>\r\n                                    <p class=\"text-sm text-gray-400\">Some experience</p>\r\n                                </div>\r\n                            </label>\r\n                            <label class=\"relative cursor-pointer\">\r\n                                <input type=\"radio\" name=\"experience\" value=\"advanced\" \r\n                                       class=\"peer sr-only\">\r\n                                <div class=\"p-4 rounded-xl border border-brand-primary/30 \r\n                                           peer-checked:border-brand-primary peer-checked:bg-brand-primary/20\r\n                                           hover:bg-brand-primary/10 transition-all\">\r\n                                    <i class=\"fas fa-crown text-2xl mb-2 text-brand-primary\"></i>\r\n                                    <h4 class=\"font-medium text-white\">Advanced</h4>\r\n                                    <p class=\"text-sm text-gray-400\">Expert trader</p>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"space-y-4\">\r\n                        <label class=\"text-sm font-medium text-gray-300 flex items-center gap-2\">\r\n                            <i class=\"fas fa-briefcase text-brand-primary\"></i>\r\n                            What assets are you interested in trading?\r\n                        </label>\r\n                        <div class=\"space-y-3\">\r\n                            <label class=\"flex items-center gap-3 p-3 rounded-xl\r\n                                        border border-brand-primary/30 cursor-pointer\r\n                                        hover:bg-brand-primary/10 transition-all\">\r\n                                <input type=\"checkbox\" name=\"assets\" value=\"crypto\"\r\n                                       class=\"form-checkbox text-brand-primary rounded\">\r\n                                <div>\r\n                                    <span class=\"text-white font-medium\">Cryptocurrencies</span>\r\n                                    <p class=\"text-sm text-gray-400\">Bitcoin, Ethereum, etc.</p>\r\n                                </div>\r\n                            </label>\r\n                            <label class=\"flex items-center gap-3 p-3 rounded-xl\r\n                                        border border-brand-primary/30 cursor-pointer\r\n                                        hover:bg-brand-primary/10 transition-all\">\r\n                                <input type=\"checkbox\" name=\"assets\" value=\"stocks\"\r\n                                       class=\"form-checkbox text-brand-primary rounded\">\r\n                                <div>\r\n                                    <span class=\"text-white font-medium\">Stocks</span>\r\n                                    <p class=\"text-sm text-gray-400\">Company shares</p>\r\n                                </div>\r\n                            </label>\r\n                            <label class=\"flex items-center gap-3 p-3 rounded-xl\r\n                                        border border-brand-primary/30 cursor-pointer\r\n                                        hover:bg-brand-primary/10 transition-all\">\r\n                                <input type=\"checkbox\" name=\"assets\" value=\"forex\"\r\n                                       class=\"form-checkbox text-brand-primary rounded\">\r\n                                <div>\r\n                                    <span class=\"text-white font-medium\">Forex</span>\r\n                                    <p class=\"text-sm text-gray-400\">Currency pairs</p>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\"\r\n                            class=\"group w-full py-4 bg-brand-primary text-white rounded-xl\r\n                                   hover:bg-opacity-90 transition-all flex items-center \r\n                                   justify-center gap-2 text-lg font-medium\">\r\n                        Continue\r\n                        <i class=\"fas fa-arrow-right group-hover:translate-x-1 transition-transform\"></i>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        `\r\n    }\r\n\r\n    securityStep() {\r\n        return /* html */`\r\n            <div class=\"max-w-md mx-auto space-y-6 animate-fade-in-up\">\r\n                <div class=\"flex items-center gap-4 mb-6\">\r\n                    <div class=\"w-12 h-12 bg-brand-primary/20 rounded-xl \r\n                               flex items-center justify-center shrink-0\">\r\n                        <i class=\"fas fa-shield-alt text-brand-primary text-xl\"></i>\r\n                    </div>\r\n                    <div>\r\n                        <h3 class=\"text-xl lg:text-2xl font-bold text-white\">Setup Account Security</h3>\r\n                        <p class=\"text-gray-400\">Create a secure PIN for transactions</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <form id=\"securityForm\" class=\"space-y-6\">\r\n                    <div class=\"space-y-4\">\r\n                        <div class=\"space-y-2\">\r\n                            <label class=\"text-sm font-medium text-gray-300 flex items-center gap-2\">\r\n                                <i class=\"fas fa-key text-brand-primary\"></i>\r\n                                Create PIN (6 digits)\r\n                            </label>\r\n                            <div class=\"relative\">\r\n                                <input type=\"password\" required maxlength=\"6\" pattern=\"[0-9]{6}\"\r\n                                       placeholder=\"Enter 6-digit PIN\"\r\n                                       class=\"w-full px-4 py-3 rounded-xl bg-brand-black/50 text-white\r\n                                              border border-brand-primary/30 focus:border-brand-primary\r\n                                              outline-none transition-all text-center tracking-widest\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"space-y-2\">\r\n                            <label class=\"text-sm font-medium text-gray-300 flex items-center gap-2\">\r\n                                <i class=\"fas fa-check-circle text-brand-primary\"></i>\r\n                                Confirm PIN\r\n                            </label>\r\n                            <div class=\"relative\">\r\n                                <input type=\"password\" required maxlength=\"6\" pattern=\"[0-9]{6}\"\r\n                                       placeholder=\"Confirm 6-digit PIN\"\r\n                                       class=\"w-full px-4 py-3 rounded-xl bg-brand-black/50 text-white\r\n                                              border border-brand-primary/30 focus:border-brand-primary\r\n                                              outline-none transition-all text-center tracking-widest\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\"\r\n                            class=\"group w-full py-4 bg-brand-primary text-white rounded-xl\r\n                                   hover:bg-opacity-90 transition-all flex items-center \r\n                                   justify-center gap-2 text-lg font-medium\">\r\n                        Complete Setup\r\n                        <i class=\"fas fa-check group-hover:scale-110 transition-transform\"></i>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        `\r\n    }\r\n\r\n    async nextStep() {\r\n        try {\r\n            spinner.start()\r\n            await updateOnboardingStep(this.userId, this.currentStep + 1)\r\n            this.currentStep++\r\n            this.render()\r\n        } catch (error) {\r\n            toastify({\r\n                text: \"Failed to update progress\",\r\n                icon: \"fas fa-exclamation-circle\",\r\n                background: \"bg-red-500/10\"\r\n            })\r\n        } finally {\r\n            spinner.stop()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const container = document.getElementById('onboardingContainer')\r\n        if (!container) return\r\n\r\n        // Ensure instance is attached when rendering\r\n        window.onboarding = this;\r\n\r\n        const step = this.steps[this.currentStep]\r\n        container.innerHTML = /* html */`\r\n            <div class=\"min-h-screen flex items-center justify-center p-4 lg:p-6 animate-fade-in-up\">\r\n                <div class=\"w-full max-w-lg\">\r\n                    <!-- Step content -->\r\n                    <div class=\"bg-brand-dark/50 backdrop-blur-sm rounded-2xl p-6 lg:p-8 \r\n                                border border-brand-primary/20 transition-all duration-500\r\n                                hover:border-brand-primary/40 shadow-lg\">\r\n                        ${step.content}\r\n                    </div>\r\n                    <!-- Progress bar -->\r\n                    <div class=\"mb-8\">\r\n                        <div class=\"flex items-center justify-between mb-4\">\r\n                            <span class=\"text-sm text-gray-400\">\r\n                                Step ${this.currentStep + 1} of ${this.steps.length}\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"h-2 bg-brand-black/50 rounded-full overflow-hidden\">\r\n                            <div class=\"h-full bg-brand-primary transition-all duration-500\"\r\n                                 style=\"width: ${(this.currentStep + 1) / this.steps.length * 100}%\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `\r\n\r\n        this.setupEventListeners()\r\n    }\r\n\r\n\r\n    setupEventListeners() {\r\n        // Add form submission handlers based on current step\r\n        const forms = {\r\n            basicInfoForm: this.handleBasicInfo.bind(this),\r\n            experienceForm: this.handleExperience.bind(this),\r\n            securityForm: this.handleSecurity.bind(this)\r\n        }\r\n\r\n        Object.entries(forms).forEach(([formId, handler]) => {\r\n            const form = document.getElementById(formId)\r\n            if (form) {\r\n                form.onsubmit = async (e) => {\r\n                    e.preventDefault()\r\n                    await handler(e)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    // Form handlers\r\n    async handleBasicInfo(e) {\r\n        // Handle basic info submission\r\n        await this.nextStep()\r\n    }\r\n\r\n    async handleExperience(e) {\r\n        // Handle experience submission\r\n        await this.nextStep()\r\n    }\r\n\r\n    async handleSecurity(e) {\r\n        // Handle security setup and complete onboarding\r\n        try {\r\n            spinner.start()\r\n            const pin1 = e.target.querySelector('input[type=\"password\"]').value\r\n            const pin2 = e.target.querySelectorAll('input[type=\"password\"]')[1].value\r\n\r\n            if (pin1 !== pin2) {\r\n                toastify({\r\n                    text: \"PINs do not match\",\r\n                    icon: \"fas fa-exclamation-circle\",\r\n                    background: \"bg-red-500/10\"\r\n                })\r\n                return\r\n            }\r\n\r\n            // Update profile\r\n            const { error } = await supabase\r\n                .from('profiles')\r\n                .update({\r\n                    is_created: true,\r\n                    pin: pin1,\r\n                    onboarding_step: this.steps.length\r\n                })\r\n                .eq('id', this.userId)\r\n\r\n            if (error) throw error\r\n\r\n            toastify({\r\n                text: \"Account setup complete!\",\r\n                icon: \"fas fa-check-circle\",\r\n                background: \"bg-green-500/10\"\r\n            })\r\n\r\n            // Redirect to dashboard\r\n            setTimeout(() => window.location.reload(), 1500)\r\n\r\n        } catch (error) {\r\n            toastify({\r\n                text: \"Failed to complete setup\",\r\n                icon: \"fas fa-exclamation-circle\",\r\n                background: \"bg-red-500/10\"\r\n            })\r\n        } finally {\r\n            spinner.stop()\r\n        }\r\n    }\r\n}","import auth from '../../../utils/auth'\r\nimport supabase from '../../../utils/supabaseClients'\r\nimport { formatMoney } from '../../../utils/formatters'\r\nimport BTC from '../../../../images/welcome/btc.png'\r\nimport ETH from '../../../../images/welcome/eth.png'\r\nimport BNB from '../../../../images/welcome/bnb.png'\r\nimport SOL from '../../../../images/welcome/sol.png'\r\n\r\nconst cryptoImages = { BTC, ETH, BNB, SOL }\r\n\r\nconst Cards = async () => {\r\n    let isBalanceVisible = true\r\n    let balanceData = []\r\n    let cryptoPrices = []\r\n    let chart = null;\r\n    let currentBalance = 0\r\n\r\n    async function initializeChart() {\r\n        const ctx = document.getElementById('balanceChart').getContext('2d')\r\n        const gradient = ctx.createLinearGradient(0, 0, 0, 200)\r\n        gradient.addColorStop(0, 'rgba(41, 98, 255, 0.2)')\r\n        gradient.addColorStop(1, 'rgba(41, 98, 255, 0)')\r\n\r\n        chart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: balanceData.map(d => new Date(d.created_at).toLocaleDateString()),\r\n                datasets: [{\r\n                    label: 'Balance History',\r\n                    data: balanceData.map(d => d.amount),\r\n                    borderColor: '#2962ff',\r\n                    backgroundColor: gradient,\r\n                    tension: 0.4,\r\n                    fill: true\r\n                }]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                plugins: {\r\n                    legend: { display: false }\r\n                },\r\n                scales: {\r\n                    x: {\r\n                        grid: { display: false, drawBorder: false },\r\n                        ticks: { color: '#6b7280' }\r\n                    },\r\n                    y: {\r\n                        grid: { color: 'rgba(107, 114, 128, 0.1)', drawBorder: false },\r\n                        ticks: {\r\n                            color: '#6b7280',\r\n                            callback: value => `$${value.toLocaleString()}`\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    async function fetchBalanceData() {\r\n        try {\r\n            const profile = auth.getProfile()\r\n            if (!profile?.id) return 0\r\n\r\n            const { data: accounts, error: accountError } = await supabase\r\n                .from('trading_accounts')\r\n                .select('balance, created_at')\r\n                .eq('user_id', profile.id)\r\n                .eq('account_type', 'live')\r\n\r\n            if (accountError) return 0\r\n            if (!accounts || accounts.length === 0) return 0\r\n\r\n            const account = accounts[0]\r\n\r\n            const { data: transactions, error: txError } = await supabase\r\n                .from('transactions')\r\n                .select('amount, created_at, type')\r\n                .eq('user_id', profile.id)\r\n                .order('created_at', { ascending: false })\r\n                .limit(7)\r\n\r\n            if (txError) {\r\n                balanceData = []\r\n                return account?.balance || 0\r\n            }\r\n\r\n            balanceData = transactions || []\r\n            return account?.balance || 0\r\n        } catch (err) {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    async function fetchCryptoPrices() {\r\n        const coins = ['BTC', 'ETH', 'BNB', 'SOL']\r\n        cryptoPrices = coins.map(coin => ({\r\n            symbol: coin,\r\n            price: Math.random() * 50000,\r\n            change: (Math.random() * 10) - 5\r\n        }))\r\n    }\r\n\r\n    async function initializeBalance() {\r\n        currentBalance = await fetchBalanceData()\r\n        updateBalanceDisplay()\r\n    }\r\n\r\n    function updateBalanceDisplay() {\r\n        const balanceElement = document.querySelector('#balanceAmount')\r\n        if (balanceElement) {\r\n            balanceElement.textContent = isBalanceVisible ?\r\n                formatMoney(Number(currentBalance)) :\r\n                '******'\r\n        }\r\n    }\r\n\r\n    function toggleBalance() {\r\n        isBalanceVisible = !isBalanceVisible\r\n        const balanceElement = document.querySelector('#balanceAmount')\r\n        const toggleIcon = document.querySelector('#toggleIcon')\r\n        if (balanceElement && toggleIcon) {\r\n            updateBalanceDisplay()\r\n            toggleIcon.className = `fas ${isBalanceVisible ? 'fa-eye' : 'fa-eye-slash'} text-white`\r\n        }\r\n    }\r\n\r\n    async function pageEvents() {\r\n        document.querySelector('#toggleBalance')?.addEventListener('click', toggleBalance)\r\n        await initializeChart()\r\n        await initializeBalance()\r\n    }\r\n\r\n    return {\r\n        html: /* html */`\r\n    <div class=\"space-y-6\">\r\n        <div class=\"bg-gradient-to-br from-brand-black/80 to-brand-black/40 backdrop-blur-xl rounded-3xl p-6 sm:p-8 border border-brand-primary/10 overflow-hidden relative\">\r\n            <div class=\"absolute inset-0 opacity-5\">\r\n                <svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <pattern id=\"dots\" x=\"0\" y=\"0\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\r\n                        <circle cx=\"2\" cy=\"2\" r=\"1\" fill=\"currentColor\" />\r\n                    </pattern>\r\n                    <rect width=\"100%\" height=\"100%\" fill=\"url(#dots)\" />\r\n                </svg>\r\n            </div>\r\n            <div class=\"relative z-10\">\r\n                <div class=\"flex flex-col items-center sm:items-start text-center sm:text-left mb-8\">\r\n                    <span class=\"text-xs font-medium text-brand-primary mb-2\">Live Account</span>\r\n                    <h2 class=\"text-sm text-gray-400 mb-3\">Total Balance</h2>\r\n                    <div class=\"flex items-center gap-3\">\r\n                        <h3 id=\"balanceAmount\" class=\"text-4xl md:text-3xl font-bold text-white tracking-tight\">\r\n                            ${formatMoney(Number(await fetchBalanceData()))}\r\n                        </h3>\r\n                        <button id=\"toggleBalance\" \r\n                                class=\"p-2 hover:bg-white/5 rounded-xl transition-colors\"\r\n                                aria-label=\"${isBalanceVisible ? 'Hide' : 'Show'} balance\">\r\n                            <i id=\"toggleIcon\" class=\"fas fa-eye text-gray-400 hover:text-white transition-colors\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"my-4\">\r\n                    <div class=\"relative inline-block w-full\">\r\n                        <div class=\"w-full absolute -inset-[1px] rounded-2xl bg-gradient-to-r from-[#ce6706] via-[#f1d416] to-[#ce6706] \r\n                                    animate-gradient opacity-75 blur-[2px]\"></div>\r\n                        <a data-nav href=\"/copy-trade\" \r\n                        class=\"w-full relative inline-flex justify-center items-center gap-4 px-10 py-3  \r\n                                bg-[#242424]/90 backdrop-blur-sm\r\n                                rounded-2xl hover:scale-[1.02] transition-all duration-300 \r\n                                group border border-white/5\">\r\n                        <div class=\"p-2 bg-[#f1d416]/10 rounded-xl \r\n                                    group-hover:bg-[#f1d416]/20 transition-all duration-300 flex items-center justify-center\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" \r\n                                class=\"w-5 h-5 text-[#f1d416] group-hover:translate-x-1 \r\n                                        transition-transform duration-300\" \r\n                                viewBox=\"0 0 24 24\" \r\n                                fill=\"none\" \r\n                                stroke=\"currentColor\">\r\n                            <path stroke-linecap=\"round\" \r\n                                    stroke-linejoin=\"round\" \r\n                                    stroke-width=\"2\" \r\n                                    d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\"/>\r\n                            </svg>\r\n                        </div>\r\n                        <div class=\"flex flex-col items-center\">\r\n                            <span class=\"text-xs text-[#f1d416]/70\">Ready to automate?</span>\r\n                            <span class=\"text-lg font-medium text-white\">Start Copy Trading</span>\r\n                        </div>\r\n                        <div class=\"flex items-center gap-1 ml-4\">\r\n                            <div class=\"w-1.5 h-1.5 rounded-full bg-[#f1d416]/50 animate-pulse\"></div>\r\n                            <div class=\"w-1.5 h-1.5 rounded-full bg-[#f1d416]/50 animate-pulse delay-150\"></div>\r\n                            <div class=\"w-1.5 h-1.5 rounded-full bg-[#f1d416]/50 animate-pulse delay-300\"></div>\r\n                        </div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"grid grid-cols-3 gap-4 mb-8\">\r\n                    <a href=\"/deposit\" data-nav\r\n                       class=\"flex flex-col items-center p-4 rounded-2xl bg-white/5 hover:bg-white/10 transition-all group\">\r\n                        <div class=\"w-10 h-10 flex items-center justify-center rounded-xl bg-brand-primary/10 text-brand-primary mb-2 group-hover:scale-110 transition-transform\">\r\n                            <svg class=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\" />\r\n                            </svg>\r\n                        </div>\r\n                        <span class=\"text-sm font-medium text-white\">Deposit</span>\r\n                    </a>\r\n                    <a href=\"/withdraw\" data-nav\r\n                       class=\"flex flex-col items-center p-4 rounded-2xl bg-white/5 hover:bg-white/10 transition-all group\">\r\n                        <div class=\"w-10 h-10 flex items-center justify-center rounded-xl bg-red-500/10 text-red-500 mb-2 group-hover:scale-110 transition-transform\">\r\n                            <svg class=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16M4 12h16\" />\r\n                            </svg>\r\n                        </div>\r\n                        <span class=\"text-sm font-medium text-white\">Withdraw</span>\r\n                    </a>\r\n                    <a href=\"/swap\" data-nav\r\n                       class=\"flex flex-col items-center p-4 rounded-2xl bg-white/5 hover:bg-white/10 transition-all group\">\r\n                        <div class=\"w-10 h-10 flex items-center justify-center rounded-xl bg-purple-500/10 text-purple-500 mb-2 group-hover:scale-110 transition-transform\">\r\n                            <svg class=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\" />\r\n                            </svg>\r\n                        </div>\r\n                        <span class=\"text-sm font-medium text-white\">Swap</span>\r\n                    </a>\r\n                </div>\r\n                <div class=\"h-32 sm:h-48\">\r\n                    <canvas id=\"balanceChart\" class=\"w-full\"></canvas>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"grid grid-cols-2 sm:grid-cols-4 gap-4\">\r\n            ${(await fetchCryptoPrices(), cryptoPrices).map(coin => `\r\n                <div class=\"bg-brand-black/50 backdrop-blur-xl rounded-2xl p-4 border border-brand-primary/10\">\r\n                    <div class=\"flex items-center gap-3 mb-2\">\r\n                        <img src=\"${cryptoImages[coin.symbol]}\" \r\n                             alt=\"${coin.symbol}\" \r\n                             class=\"w-6 h-6 sm:w-8 sm:h-8\">\r\n                        <div>\r\n                            <h3 class=\"text-sm sm:font-medium text-white\">${coin.symbol}/USD</h3>\r\n                            <p class=\"text-xs text-gray-400\">Live Rate</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mt-2 sm:mt-3\">\r\n                        <div class=\"text-base sm:text-lg font-bold text-white\">\r\n                            ${formatMoney(coin.price)}\r\n                        </div>\r\n                        <div class=\"text-xs sm:text-sm ${coin.change > 0 ? 'text-green-500' : 'text-red-500'}\">\r\n                            ${coin.change > 0 ? '+' : ''}${coin.change.toFixed(2)}%\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            `).join('')}\r\n        </div>\r\n    </div>\r\n    `,\r\n        pageEvents\r\n    }\r\n}\r\n\r\nexport default Cards","const TradingWidget = () => {\r\n    function loadTradingViewWidget() {\r\n        // Check if widget already exists\r\n        if (document.querySelector('#tradingViewScript')) {\r\n            return;\r\n        }\r\n\r\n        const script = document.createElement('script');\r\n        script.id = 'tradingViewScript'; // Add ID to track script\r\n        script.type = 'text/javascript';\r\n        script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js';\r\n        script.async = true;\r\n        script.innerHTML = JSON.stringify({\r\n            \"colorTheme\": \"dark\",\r\n            \"dateRange\": \"12M\",\r\n            \"locale\": \"en\",\r\n            \"largeChartUrl\": \"\",\r\n            \"isTransparent\": false,\r\n            \"showFloatingTooltip\": false,\r\n            \"plotLineColorGrowing\": \"rgba(41, 98, 255, 1)\",\r\n            \"plotLineColorFalling\": \"rgba(41, 98, 255, 1)\",\r\n            \"gridLineColor\": \"rgba(240, 243, 250, 0)\",\r\n            \"scaleFontColor\": \"#DBDBDB\",\r\n            \"belowLineFillColorGrowing\": \"rgba(41, 98, 255, 0.12)\",\r\n            \"belowLineFillColorFalling\": \"rgba(41, 98, 255, 0.12)\",\r\n            \"belowLineFillColorGrowingBottom\": \"rgba(41, 98, 255, 0)\",\r\n            \"belowLineFillColorFallingBottom\": \"rgba(41, 98, 255, 0)\",\r\n            \"symbolActiveColor\": \"rgba(41, 98, 255, 0.12)\",\r\n            \"backgroundColor\": \"#0f0f0f\",\r\n            \"width\": \"100%\",\r\n            \"height\": \"100%\",\r\n            \"showSymbolLogo\": true,\r\n            \"showChart\": true\r\n        });\r\n\r\n        // Clear existing widget if any\r\n        const container = document.querySelector('#tradingViewWidget');\r\n        if (container) {\r\n            container.innerHTML = '<div class=\"tradingview-widget-container__widget\"></div>';\r\n            container.appendChild(script);\r\n        }\r\n    }\r\n\r\n    function pageEvents() {\r\n        // Delay widget loading slightly to ensure DOM is ready\r\n        setTimeout(loadTradingViewWidget, 100);\r\n    }\r\n\r\n    return {\r\n        html: /* html */`\r\n        <div class=\"mt-6\">\r\n            <div class=\"bg-brand-black/50 backdrop-blur-xl rounded-2xl p-2 h-[500px] border border-brand-primary/10\">\r\n                <div id=\"tradingViewWidget\" class=\"tradingview-widget-container\" style=\"height:600px\">\r\n                    <div class=\"tradingview-widget-container__widget\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        `,\r\n        pageEvents\r\n    }\r\n}\r\n\r\nexport default TradingWidget","import supabase from '../../../utils/supabaseClients'\r\nimport spinner from '../../../utils/spinner'\r\n\r\nconst TransactionList = async () => {\r\n    // State\r\n    let showAll = false\r\n\r\n    // Fetch transactions\r\n    async function fetchTransactions() {\r\n        try {\r\n            spinner.start()\r\n            const { data: { session }, error: sessionError } = await supabase.auth.getSession()\r\n            if (sessionError || !session) throw new Error('Not authenticated')\r\n\r\n            const { data, error } = await supabase\r\n                .from('transactions')\r\n                .select(`\r\n                    id,\r\n                    type,\r\n                    amount,\r\n                    status,\r\n                    created_at,\r\n                    from_asset,\r\n                    to_asset\r\n                `)\r\n                .eq('user_id', session.user.id)\r\n                .order('created_at', { ascending: false })\r\n\r\n            if (error) throw error\r\n            return data || []\r\n        } catch (error) {\r\n            console.error('Fetch transactions error:', error)\r\n            return []\r\n        } finally {\r\n            spinner.stop()\r\n        }\r\n    }\r\n\r\n    // Generate transaction row HTML\r\n    function generateTransactionRow(tx) {\r\n        return `\r\n            <tr class=\"border-b border-brand-primary/5 text-sm hover:bg-brand-primary/5 transition-colors\">\r\n                <td class=\"py-4\">\r\n                    <div class=\"flex items-center gap-2\">\r\n                        <div class=\"w-8 h-8 rounded-lg \r\n                            ${tx.type === 'deposit' ? 'bg-green-500/10 text-green-500' :\r\n                tx.type === 'withdrawal' ? 'bg-red-500/10 text-red-500' :\r\n                    'bg-brand-primary/10 text-brand-primary'} \r\n                            flex items-center justify-center\">\r\n                            <i class=\"fas fa-${tx.type === 'deposit' ? 'arrow-down' :\r\n                tx.type === 'withdrawal' ? 'arrow-up' :\r\n                    'exchange-alt'\r\n            }\"></i>\r\n                        </div>\r\n                        <span class=\"text-white capitalize\">${tx.type}</span>\r\n                    </div>\r\n                </td>\r\n                <td class=\"py-4\">\r\n                    <span class=\"${tx.type === 'deposit' ? 'text-green-500' :\r\n                tx.type === 'withdrawal' ? 'text-red-500' :\r\n                    'text-white'\r\n            }\">\r\n                        ${tx.type === 'withdrawal' ? '-' : '+'}$${tx.amount.toLocaleString('en-US', {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 8\r\n            })}\r\n                    </span>\r\n                </td>\r\n                <td class=\"py-4\">\r\n                    <span class=\"px-2 py-1 rounded-lg text-xs ${tx.status === 'completed' ? 'bg-green-500/10 text-green-500' :\r\n                tx.status === 'pending' ? 'bg-yellow-500/10 text-yellow-500' :\r\n                    'bg-red-500/10 text-red-500'\r\n            }\">\r\n                        ${tx.status}\r\n                    </span>\r\n                </td>\r\n                <td class=\"py-4 text-gray-400\">\r\n                    ${new Date(tx.created_at).toLocaleString()}\r\n                </td>\r\n            </tr>\r\n        `\r\n    }\r\n\r\n    // Toggle transactions visibility\r\n    async function toggleTransactions() {\r\n        showAll = !showAll\r\n        const tbody = document.getElementById('transactionsBody')\r\n        const viewMoreBtn = document.getElementById('viewMoreBtn')\r\n\r\n        if (!tbody || !viewMoreBtn) return\r\n\r\n        // Update button text and icon\r\n        viewMoreBtn.innerHTML = showAll ?\r\n            '<i class=\"fas fa-chevron-up mr-2\"></i>View Less' :\r\n            '<i class=\"fas fa-chevron-down mr-2\"></i>View More'\r\n\r\n        // Fetch fresh data\r\n        const transactions = await fetchTransactions()\r\n\r\n        // Render appropriate number of transactions\r\n        const displayedTransactions = showAll ? transactions : transactions.slice(0, 5)\r\n\r\n        tbody.innerHTML = displayedTransactions.length ?\r\n            displayedTransactions.map(generateTransactionRow).join('') :\r\n            `<tr>\r\n                <td colspan=\"4\" class=\"py-8 text-center text-gray-400\">\r\n                    <i class=\"fas fa-history text-4xl mb-2 block\"></i>\r\n                    <p>No transactions found</p>\r\n                </td>\r\n            </tr>`\r\n    }\r\n\r\n    // Fetch initial transactions\r\n    const transactions = await fetchTransactions()\r\n    const initialTransactions = transactions.slice(0, 5)\r\n\r\n    // Attach global handler\r\n    window.toggleTransactions = toggleTransactions\r\n\r\n    return {\r\n        html: /* html */`\r\n        <div class=\"mt-6 mb-16 lg:mb-2\">\r\n            <div class=\"bg-brand-black/50 backdrop-blur-xl rounded-2xl p-6 border border-brand-primary/10\">\r\n                <div class=\"flex justify-between items-center mb-4\">\r\n                    <h2 class=\"text-lg font-medium text-white\">\r\n                        <i class=\"fas fa-history mr-2\"></i>Recent Transactions\r\n                    </h2>\r\n                    ${transactions.length > 5 ? `\r\n                        <button id=\"viewMoreBtn\"\r\n                                onclick=\"window.toggleTransactions()\"\r\n                                class=\"text-sm text-brand-primary hover:text-brand-primary/80 transition-colors inline-flex items-center\">\r\n                            <i class=\"fas fa-chevron-down mr-2\"></i>View More\r\n                        </button>\r\n                    ` : ''}\r\n                </div>\r\n                <div class=\"overflow-x-auto\">\r\n                    <table class=\"w-full\">\r\n                        <thead>\r\n                            <tr class=\"text-left text-sm text-gray-400 border-b border-brand-primary/10\">\r\n                                <th class=\"pb-4 font-medium\">Type</th>\r\n                                <th class=\"pb-4 font-medium\">Amount</th>\r\n                                <th class=\"pb-4 font-medium\">Status</th>\r\n                                <th class=\"pb-4 font-medium\">Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody id=\"transactionsBody\">\r\n                            ${initialTransactions.length ?\r\n                initialTransactions.map(generateTransactionRow).join('') :\r\n                `<tr>\r\n                                    <td colspan=\"4\" class=\"py-8 text-center text-gray-400\">\r\n                                        <i class=\"fas fa-history text-4xl mb-2 block\"></i>\r\n                                        <p>No transactions found</p>\r\n                                    </td>\r\n                                </tr>`\r\n            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        `\r\n    }\r\n}\r\n\r\nexport default TransactionList","import auth from '../../utils/auth'\r\nimport reset from '../../utils/reset'\r\nimport Navbar from './components/Navbar'\r\nimport { checkOnboardingStatus } from '../../utils/onboardingHandler'\r\nimport Onboarding from '../../components/Onboarding'\r\nimport Cards from './components/Cards'\r\nimport TradingWidget from './components/TradingWidget'\r\nimport TransactionList from './components/TransactionList'\r\nimport { trackPageVisit } from '../../utils/analtics'\r\n\r\n\r\nconst dashboard = async () => {\r\n    const authCheck = await auth.check('dashboard')\r\n    if (!authCheck) return { html: '', pageEvents: () => { } }\r\n\r\n    reset('Olymp AI | Dashboard')\r\n    await trackPageVisit()\r\n\r\n    const profile = auth.getProfile()\r\n    if (!profile) return { html: '', pageEvents: () => { } }\r\n\r\n    const { isComplete, currentStep } = await checkOnboardingStatus(profile.id)\r\n\r\n    const { html: navbar, pageEvents: navEvents } = Navbar()\r\n    const cards = await Cards()\r\n    const tradingWidget = TradingWidget()\r\n    const transactions = await TransactionList()\r\n\r\n\r\n    async function pageEvents() {\r\n        if (!isComplete) {\r\n            const onboarding = new Onboarding(profile.id, currentStep)\r\n            onboarding.render()\r\n        } else {\r\n            navEvents()\r\n            await cards.pageEvents()  // Call the async pageEvents\r\n            tradingWidget.pageEvents()\r\n        }\r\n    }\r\n\r\n    return {\r\n        html: !isComplete ? /* html */`\r\n            <div id=\"onboardingContainer\"></div>\r\n        ` : /* html */`\r\n            ${navbar}\r\n            <main class=\"main-scroll-view\">\r\n                <div class=\"p-4 md:p-8\">\r\n                    ${cards.html}\r\n                    ${tradingWidget.html}\r\n                    ${transactions.html}\r\n                </div>\r\n            </main>\r\n        `,\r\n        pageEvents,\r\n    }\r\n}\r\n\r\n\r\nexport default dashboard"],"names":["checkOnboardingStatus","userId","data","error","supabase","updateOnboardingStep","step","WelcomeI","Onboarding","currentStep","spinner","toastify","container","forms","formId","handler","form","e","pin1","pin2","cryptoImages","BTC","ETH","BNB","SOL","Cards","isBalanceVisible","balanceData","cryptoPrices","currentBalance","initializeChart","ctx","gradient","d","value","fetchBalanceData","profile","auth","accounts","accountError","account","transactions","txError","fetchCryptoPrices","coin","initializeBalance","updateBalanceDisplay","balanceElement","formatMoney","toggleBalance","toggleIcon","pageEvents","TradingWidget","loadTradingViewWidget","script","TransactionList","showAll","fetchTransactions","session","sessionError","generateTransactionRow","tx","toggleTransactions","tbody","viewMoreBtn","displayedTransactions","initialTransactions","dashboard","reset","trackPageVisit","isComplete","navbar","navEvents","Navbar","cards","tradingWidget"],"mappings":"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"}