{"version":3,"file":"viewAnalytics-BpKs1l41.js","sources":["../../src/script/views/admin/viewAnalytics.js"],"sourcesContent":["// ...existing code...\r\nimport reset, { cleanupAll } from '../../utils/reset';\r\nimport AdminNavbar from './components/Navbar';\r\nimport StyleAdminPage from './components/style';\r\nimport supabase from '../../utils/supabaseClients';\r\nimport Modal from '../../components/Modal';\r\nimport { loadPage } from '../../routes/router';\r\n\r\n\r\n// Safe, single-render analytics view with robust Chart.js handling\r\nexport default async function analyticsView() {\r\n    reset('Analytics');\r\n    cleanupAll();\r\n\r\n    let charts = {};            // local chart instances\r\n    let isRendering = false;    // guard against re-entrancy\r\n    let mounted = true;         // track lifecycle for async work\r\n\r\n    // Safely destroy a chart instance\r\n    function safeDestroy(chart) {\r\n        try { if (chart && typeof chart.destroy === 'function') chart.destroy(); } catch (e) { /* noop */ }\r\n    }\r\n\r\n    // Destroy any chart attached to a canvas element (Chart.js v3+)\r\n    function destroyChartForCanvas(canvas) {\r\n        try {\r\n            if (!canvas || !window.Chart) return;\r\n            const existing = window.Chart.getChart(canvas) || window.Chart.getChart(canvas.id);\r\n            if (existing) existing.destroy();\r\n        } catch (e) { /* noop */ }\r\n    }\r\n\r\n    function cleanupCharts() {\r\n        Object.values(charts).forEach(c => safeDestroy(c));\r\n        charts = {};\r\n        // Also attempt to remove charts attached directly to canvases\r\n        ['chart-visitors', 'chart-devices', 'chart-pages'].forEach(id => {\r\n            const el = document.getElementById(id);\r\n            if (el) destroyChartForCanvas(el);\r\n        });\r\n    }\r\n\r\n    // Load Chart.js once\r\n    async function loadChartJs() {\r\n        if (window.Chart) return;\r\n        if (window._chartJsLoading) {\r\n            await window._chartJsLoading;\r\n            return;\r\n        }\r\n        window._chartJsLoading = new Promise((resolve, reject) => {\r\n            const s = document.createElement('script');\r\n            s.src = 'https://cdn.jsdelivr.net/npm/chart.js';\r\n            s.onload = () => { resolve(); window._chartJsLoading = null; };\r\n            s.onerror = (e) => { reject(e); window._chartJsLoading = null; };\r\n            document.head.appendChild(s);\r\n        });\r\n        await window._chartJsLoading;\r\n    }\r\n\r\n    async function fetchLogs(limit = 1000) {\r\n        const { data, error } = await supabase\r\n            .from('activity_logs')\r\n            .select('*')\r\n            .order('created_at', { ascending: false })\r\n            .limit(limit);\r\n        if (error) throw error;\r\n        return data || [];\r\n    }\r\n\r\n    function showLogModal(log) {\r\n        new Modal({\r\n            title: 'Activity Details',\r\n            content: `\r\n        <div class=\"space-y-3 text-sm\">\r\n          <div><strong>Time:</strong> ${new Date(log.created_at).toLocaleString()}</div>\r\n          <div><strong>Page:</strong> ${log.row_data?.page || 'N/A'}</div>\r\n          <div><strong>Operation:</strong> ${log.operation || ''}</div>\r\n          <div><strong>IP:</strong> ${log.ip_address || 'N/A'}</div>\r\n          <div><strong>Location:</strong> ${log.geo?.city || ''} ${log.geo?.country || ''}</div>\r\n          <div><strong>Device:</strong> ${log.device_info?.platform || ''} ${log.device_info?.language || ''}</div>\r\n          <pre class=\"mt-2 p-2 bg-[#0b0b0b] rounded text-xs overflow-auto\">${JSON.stringify(log, null, 2)}</pre>\r\n        </div>\r\n      `\r\n        }).show();\r\n    }\r\n\r\n    function processLogs(logs) {\r\n        const labels = [];\r\n        const countsByDate = {};\r\n        for (let i = 6; i >= 0; i--) {\r\n            const d = new Date();\r\n            d.setDate(d.getDate() - i);\r\n            const key = d.toLocaleDateString();\r\n            labels.push(key);\r\n            countsByDate[key] = 0;\r\n        }\r\n\r\n        const devices = {};\r\n        const pages = {};\r\n        const countries = {};\r\n\r\n        logs.forEach(l => {\r\n            const day = new Date(l.created_at).toLocaleDateString();\r\n            if (countsByDate[day] !== undefined) countsByDate[day]++;\r\n\r\n            const dev = l.device_info?.platform?.split(' ')[0] || 'Unknown';\r\n            devices[dev] = (devices[dev] || 0) + 1;\r\n\r\n            const page = l.row_data?.page || 'Unknown';\r\n            pages[page] = (pages[page] || 0) + 1;\r\n\r\n            const country = l.geo?.country || 'Unknown';\r\n            countries[country] = (countries[country] || 0) + 1;\r\n        });\r\n\r\n        return {\r\n            labels,\r\n            visitors: labels.map(l => countsByDate[l]),\r\n            devices,\r\n            pages,\r\n            countries\r\n        };\r\n    }\r\n\r\n    async function render() {\r\n        if (isRendering) return;\r\n        isRendering = true;\r\n\r\n        const container = document.getElementById('analytics-content');\r\n        if (!container) { isRendering = false; return; }\r\n\r\n        // Ensure any previous charts are gone before DOM manipulation\r\n        cleanupCharts();\r\n\r\n        // Loading UI\r\n        container.innerHTML = `\r\n      <div class=\"flex items-center justify-center h-40\">\r\n        <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-brand-primary\"></div>\r\n      </div>\r\n    `;\r\n\r\n        try {\r\n            await loadChartJs();\r\n            const logs = await fetchLogs(1000);\r\n            if (!mounted) return;\r\n\r\n            const data = processLogs(logs);\r\n\r\n            // Render markup with canvases\r\n            container.innerHTML = `\r\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          <div class=\"bg-brand-black/50 rounded-2xl p-6\">\r\n            <h2 class=\"text-lg font-bold text-brand-primary mb-3\">Visitors (last 7 days)</h2>\r\n            <div style=\"height:300px\"><canvas id=\"chart-visitors\"></canvas></div>\r\n          </div>\r\n          <div class=\"bg-brand-black/50 rounded-2xl p-6\">\r\n            <h2 class=\"text-lg font-bold text-brand-primary mb-3\">Devices</h2>\r\n            <div style=\"height:300px\"><canvas id=\"chart-devices\"></canvas></div>\r\n          </div>\r\n          <div class=\"lg:col-span-2 bg-brand-black/50 rounded-2xl p-6\">\r\n            <h2 class=\"text-lg font-bold text-brand-primary mb-3\">Top Pages</h2>\r\n            <div style=\"height:300px\"><canvas id=\"chart-pages\"></canvas></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mt-6 bg-brand-black/50 rounded-2xl p-6\">\r\n          <h2 class=\"text-lg font-bold text-brand-primary mb-3\">Recent activity</h2>\r\n          <div class=\"overflow-x-auto\">\r\n            <table class=\"w-full text-sm\">\r\n              <thead>\r\n                <tr class=\"text-left text-brand-primary\">\r\n                  <th class=\"p-2\">Time</th>\r\n                  <th class=\"p-2\">Page</th>\r\n                  <th class=\"p-2\">Country</th>\r\n                  <th class=\"p-2\">Device</th>\r\n                  <th class=\"p-2\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                ${logs.slice(0, 50).map((l, i) => `\r\n                  <tr class=\"border-t border-[#1f1f1f]\">\r\n                    <td class=\"p-2 text-xs\">${new Date(l.created_at).toLocaleString()}</td>\r\n                    <td class=\"p-2\">${l.row_data?.page || ''}</td>\r\n                    <td class=\"p-2\">${l.geo?.country || ''}</td>\r\n                    <td class=\"p-2\">${l.device_info?.platform || ''}</td>\r\n                    <td class=\"p-2\">\r\n                      <button class=\"btn-view-detail text-brand-primary\" data-idx=\"${i}\">View</button>\r\n                    </td>\r\n                  </tr>\r\n                `).join('')}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      `;\r\n\r\n            // Wait two frames to ensure canvases are laid out & available\r\n            await new Promise(r => requestAnimationFrame(() => requestAnimationFrame(r)));\r\n            if (!mounted) return;\r\n\r\n            // Get canvas elements\r\n            const visitorsEl = document.getElementById('chart-visitors');\r\n            const devicesEl = document.getElementById('chart-devices');\r\n            const pagesEl = document.getElementById('chart-pages');\r\n\r\n            // Safety: if any is missing, abort and show helpful message\r\n            if (!visitorsEl || !devicesEl || !pagesEl) {\r\n                console.error('Canvas elements not ready', { visitorsEl, devicesEl, pagesEl });\r\n                container.innerHTML = `<div class=\"p-4 text-red-400\">Charts could not be rendered: canvas not found.</div>`;\r\n                isRendering = false;\r\n                return;\r\n            }\r\n\r\n            // Ensure Chart.js has no existing charts attached to these canvases\r\n            [visitorsEl, devicesEl, pagesEl].forEach(el => destroyChartForCanvas(el));\r\n            // final cleanup of local chart refs\r\n            cleanupCharts();\r\n\r\n            // create charts\r\n            const visitorsCtx = visitorsEl.getContext('2d');\r\n            const devicesCtx = devicesEl.getContext('2d');\r\n            const pagesCtx = pagesEl.getContext('2d');\r\n\r\n            charts.visitors = new window.Chart(visitorsCtx, {\r\n                type: 'line',\r\n                data: {\r\n                    labels: data.labels,\r\n                    datasets: [{ label: 'Visitors', data: data.visitors, borderColor: '#f1d416', backgroundColor: 'rgba(241,212,22,0.08)', fill: true, tension: 0.35, pointRadius: 3 }]\r\n                },\r\n                options: { responsive: true, maintainAspectRatio: false }\r\n            });\r\n\r\n            charts.devices = new window.Chart(devicesCtx, {\r\n                type: 'doughnut',\r\n                data: { labels: Object.keys(data.devices), datasets: [{ data: Object.values(data.devices), backgroundColor: ['#f1d416', '#e11d48', '#06b6d4', '#8b5cf6', '#84cc16'] }] },\r\n                options: { responsive: true, maintainAspectRatio: false }\r\n            });\r\n\r\n            const topPages = Object.entries(data.pages).sort((a, b) => b[1] - a[1]).slice(0, 8);\r\n            charts.pages = new window.Chart(pagesCtx, {\r\n                type: 'bar',\r\n                data: { labels: topPages.map(p => p[0]), datasets: [{ data: topPages.map(p => p[1]), backgroundColor: '#06b6d4' }] },\r\n                options: { responsive: true, maintainAspectRatio: false }\r\n            });\r\n\r\n            // attach detail handlers using the local logs array (deterministic)\r\n            const btns = Array.from(document.querySelectorAll('.btn-view-detail'));\r\n            btns.forEach(btn => {\r\n                btn.onclick = () => {\r\n                    const idx = Number(btn.dataset.idx) || 0;\r\n                    const log = logs[idx];\r\n                    if (log) showLogModal(log);\r\n                };\r\n            });\r\n\r\n        } catch (err) {\r\n            console.error('Analytics render error', err);\r\n            container.innerHTML = `<div class=\"p-4 text-red-400\">Failed to load analytics: ${err?.message || err}</div>`;\r\n        } finally {\r\n            isRendering = false;\r\n        }\r\n    }\r\n\r\n    function pageEvents() {\r\n        StyleAdminPage();\r\n        render(); // run once\r\n        // Handle navigation\r\n        document.querySelectorAll('[data-nav]').forEach(button => {\r\n            button.addEventListener('click', async (e) => {\r\n                e.preventDefault();\r\n                const route = button.dataset.route;\r\n                if (route) {\r\n                    await loadPage(`admin${route.charAt(0).toUpperCase() + route.slice(1)}`);\r\n                }\r\n            });\r\n        });\r\n\r\n        // Handle logout\r\n        document.getElementById('admin-logout')?.addEventListener('click', async () => {\r\n            await logoutAdmin();\r\n        });\r\n        // on navigate away, ensure charts destroyed and async work ignored\r\n        return () => {\r\n            mounted = false;\r\n            cleanupCharts();\r\n        };\r\n    }\r\n\r\n    return {\r\n        html: /* html */ `\r\n      <div class=\"flex min-h-screen bg-brand-dark\">\r\n        ${AdminNavbar().html}\r\n        <main class=\"flex-1 lg:ml-24 p-4 lg:p-8\">\r\n          <div class=\"max-w-7xl mx-auto space-y-6\">\r\n            <header class=\"bg-brand-black/50 rounded-2xl p-6\">\r\n              <h1 class=\"text-2xl font-bold text-white\">Analytics</h1>\r\n              <p class=\"text-gray-400 mt-1\">Activity logs and insights</p>\r\n            </header>\r\n            <div id=\"analytics-content\"></div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    `,\r\n        pageEvents\r\n    };\r\n}\r\n// ...existing code..."],"names":["analyticsView","reset","cleanupAll","charts","isRendering","mounted","safeDestroy","chart","destroyChartForCanvas","canvas","existing","cleanupCharts","c","id","el","loadChartJs","resolve","reject","s","e","fetchLogs","limit","data","error","supabase","showLogModal","log","Modal","processLogs","logs","labels","countsByDate","i","key","devices","pages","countries","l","day","dev","page","country","render","container","r","visitorsEl","devicesEl","pagesEl","visitorsCtx","devicesCtx","pagesCtx","topPages","a","b","p","btn","idx","err","pageEvents","StyleAdminPage","button","route","loadPage","AdminNavbar"],"mappings":"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"}