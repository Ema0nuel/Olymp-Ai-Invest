{"version":3,"file":"kyc-BdBT3kCF.js","sources":["../../src/script/views/user/kyc.js"],"sourcesContent":["import auth from '../../utils/auth'\r\nimport reset from '../../utils/reset'\r\nimport Navbar from './components/Navbar'\r\nimport supabase from '../../utils/supabaseClients'\r\nimport spinner from '../../utils/spinner'\r\nimport Modal from '../../components/Modal'\r\nimport toastify from '../../components/toastify'\r\nimport { trackPageVisit } from '../../utils/analtics'\r\n\r\n\r\nconst kyc = async () => {\r\n    const authCheck = await auth.check('kyc')\r\n    if (!authCheck) return { html: '', pageEvents: () => { } }\r\n\r\n    reset('Olymp AI | Identity Verification')\r\n    await trackPageVisit()\r\n    const { html: navbar, pageEvents: navEvents } = Navbar()\r\n\r\n    // State\r\n    let kycStatus = 'not_started'\r\n    let userId = null\r\n    let uploadedDocuments = new Set()\r\n\r\n    // Fetch current KYC status\r\n    async function fetchKycStatus() {\r\n        try {\r\n            spinner.start()\r\n            const { data: { user } } = await supabase.auth.getUser()\r\n            if (!user) throw new Error('Not authenticated')\r\n\r\n            userId = user.id\r\n\r\n            // Fetch both profile status and uploaded documents\r\n            const [profileResult, documentsResult] = await Promise.all([\r\n                supabase.from('profiles')\r\n                    .select('kyc_status')\r\n                    .eq('id', user.id)\r\n                    .single(),\r\n                supabase.from('kyc_documents')\r\n                    .select('document_type')\r\n                    .eq('user_id', user.id)\r\n            ])\r\n\r\n            if (profileResult.error) throw profileResult.error\r\n            if (documentsResult.error) throw documentsResult.error\r\n\r\n            kycStatus = profileResult.data.kyc_status\r\n            uploadedDocuments = new Set(documentsResult.data.map(doc => doc.document_type))\r\n            updateKycUI()\r\n            updateUploadStatus()\r\n        } catch (error) {\r\n            console.error('KYC status error:', error)\r\n        } finally {\r\n            spinner.stop()\r\n        }\r\n    }\r\n\r\n    // Update upload status indicators\r\n    function updateUploadStatus() {\r\n        const requiredDocs = ['id_front', 'id_back', 'selfie', 'address_proof']\r\n        requiredDocs.forEach(docType => {\r\n            const indicator = document.getElementById(`${docType}_status`)\r\n            if (indicator) {\r\n                if (uploadedDocuments.has(docType)) {\r\n                    indicator.className = 'text-green-500'\r\n                    indicator.innerHTML = '<i class=\"fas fa-check-circle\"></i> Uploaded'\r\n                } else {\r\n                    indicator.className = 'text-gray-400'\r\n                    indicator.innerHTML = 'Not uploaded'\r\n                }\r\n            }\r\n        })\r\n\r\n        // Update submit button state\r\n        const submitBtn = document.getElementById('kycSubmitBtn')\r\n        if (submitBtn) {\r\n            const allUploaded = requiredDocs.every(doc => uploadedDocuments.has(doc))\r\n            submitBtn.disabled = !allUploaded\r\n            submitBtn.className = `w-full md:w-auto px-8 py-4 rounded-xl transition-colors flex items-center justify-center gap-2 ${allUploaded\r\n                ? 'bg-brand-primary text-white hover:bg-brand-primary/90'\r\n                : 'bg-gray-500/50 text-gray-400 cursor-not-allowed'\r\n                }`\r\n        }\r\n    }\r\n\r\n    // Handle document upload\r\n    async function handleDocumentUpload(file, type) {\r\n        try {\r\n            if (!file || !type) throw new Error('Invalid file or document type')\r\n\r\n            spinner.start()\r\n\r\n            // Validate file size (max 5MB)\r\n            if (file.size > 5 * 1024 * 1024) {\r\n                throw new Error('File size should not exceed 5MB')\r\n            }\r\n\r\n            // Validate file type\r\n            const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg', 'application/pdf']\r\n            if (!allowedTypes.includes(file.type)) {\r\n                throw new Error('Only JPG, PNG and PDF files are allowed')\r\n            }\r\n\r\n            // Upload document\r\n            const filePath = `${userId}/kyc/${type}_${Date.now()}.${file.name.split('.').pop()}`\r\n            const { error: uploadError } = await supabase.storage\r\n                .from('deposit-screenshots')\r\n                .upload(filePath, file)\r\n\r\n            if (uploadError) throw uploadError\r\n\r\n            // Get public URL\r\n            const { data: urlData } = supabase.storage\r\n                .from('deposit-screenshots')\r\n                .getPublicUrl(filePath)\r\n\r\n            // Create KYC document record\r\n            const { error: docError } = await supabase\r\n                .from('kyc_documents')\r\n                .insert({\r\n                    user_id: userId,\r\n                    document_type: type,\r\n                    document_url: urlData.publicUrl\r\n                })\r\n\r\n            if (docError) throw docError\r\n\r\n            uploadedDocuments.add(type)\r\n            updateUploadStatus()\r\n\r\n            toastify({\r\n                text: 'Document uploaded successfully',\r\n                background: 'bg-green-500'\r\n            })\r\n\r\n        } catch (error) {\r\n            console.error('Upload error:', error)\r\n            toastify({\r\n                text: error.message,\r\n                background: 'bg-red-500'\r\n            })\r\n        } finally {\r\n            spinner.stop()\r\n        }\r\n    }\r\n\r\n    // Handle KYC submission\r\n    async function handleKycSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            spinner.start()\r\n\r\n            const requiredDocs = ['id_front', 'id_back', 'selfie', 'address_proof']\r\n            const missingDocs = requiredDocs.filter(doc => !uploadedDocuments.has(doc))\r\n\r\n            if (missingDocs.length > 0) {\r\n                throw new Error(`Please upload all required documents. Missing: ${missingDocs.join(', ')}`)\r\n            }\r\n\r\n            // Update profile KYC status\r\n            const { error: updateError } = await supabase\r\n                .from('profiles')\r\n                .update({\r\n                    kyc_status: 'pending',\r\n                    kyc_submitted_at: new Date()\r\n                })\r\n                .eq('id', userId)\r\n\r\n            if (updateError) throw updateError\r\n\r\n            toastify({\r\n                text: 'KYC submission successful! We will review your documents.',\r\n                background: 'bg-green-500'\r\n            })\r\n\r\n            kycStatus = 'pending'\r\n            updateKycUI()\r\n\r\n        } catch (error) {\r\n            console.error('KYC submission error:', error)\r\n            toastify({\r\n                text: error.message,\r\n                background: 'bg-red-500'\r\n            })\r\n        } finally {\r\n            spinner.stop()\r\n        }\r\n    }\r\n\r\n    // Update KYC UI based on status\r\n    function updateKycUI() {\r\n        const statusElement = document.getElementById('kycStatus')\r\n        const formElement = document.getElementById('kycForm')\r\n\r\n        if (statusElement) {\r\n            statusElement.className = `inline-flex items-center px-3 py-1 rounded-full text-sm ${kycStatus === 'approved' ? 'bg-green-500/20 text-green-500' :\r\n                kycStatus === 'pending' ? 'bg-yellow-500/20 text-yellow-500' :\r\n                    kycStatus === 'rejected' ? 'bg-red-500/20 text-red-500' :\r\n                        'bg-gray-500/20 text-gray-500'\r\n                }`\r\n            statusElement.innerHTML = `\r\n                <i class=\"fas fa-${kycStatus === 'approved' ? 'check-circle' :\r\n                    kycStatus === 'pending' ? 'clock' :\r\n                        kycStatus === 'rejected' ? 'times-circle' :\r\n                            'user-shield'\r\n                } mr-2\"></i>\r\n                ${kycStatus.toUpperCase()}\r\n            `\r\n        }\r\n\r\n        if (formElement) {\r\n            formElement.style.display =\r\n                (kycStatus === 'not_started' || kycStatus === 'rejected') ? 'block' : 'none'\r\n        }\r\n    }\r\n\r\n    // Global handlers\r\n    window.handleDocumentUpload = handleDocumentUpload\r\n    window.handleKycSubmit = handleKycSubmit\r\n\r\n    return {\r\n        html: /* html */`\r\n            ${navbar}\r\n            <main class=\"main-scroll-view pb-36 lg:pb-0\">\r\n                <div class=\"max-w-4xl mx-auto p-4 md:p-8 space-y-8\">\r\n                    <!-- KYC Header -->\r\n                    <div class=\"text-center space-y-4\">\r\n                        <h1 class=\"text-2xl md:text-3xl font-bold text-white\">Identity Verification</h1>\r\n                        <p class=\"text-gray-400 max-w-2xl mx-auto\">\r\n                            Complete your identity verification to unlock full trading capabilities\r\n                            and higher withdrawal limits.\r\n                        </p>\r\n                        <div id=\"kycStatus\" class=\"inline-flex items-center px-3 py-1 rounded-full text-sm\">\r\n                            <i class=\"fas fa-spinner fa-spin mr-2\"></i>Loading...\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- KYC Form -->\r\n                    <form id=\"kycForm\" class=\"space-y-8 pb-14 lg:pb-0\" onsubmit=\"handleKycSubmit(event)\">\r\n                        <!-- ID Verification -->\r\n                        <div class=\"bg-brand-black/50 backdrop-blur-xl rounded-xl p-6 space-y-4\">\r\n                            <h3 class=\"text-lg font-medium text-white\">Government ID Verification</h3>\r\n                            \r\n                            <!-- ID Front -->\r\n                            <div class=\"space-y-2\">\r\n                                <div class=\"flex justify-between items-center\">\r\n                                    <label class=\"block text-sm font-medium text-gray-400\">\r\n                                        ID Front Side\r\n                                    </label>\r\n                                    <span id=\"id_front_status\" class=\"text-gray-400 text-sm\">Not uploaded</span>\r\n                                </div>\r\n                                <input type=\"file\"\r\n                                       accept=\"image/*\"\r\n                                       onchange=\"handleDocumentUpload(this.files[0], 'id_front')\"\r\n                                       class=\"w-full p-4 bg-brand-black/50 border border-brand-primary/20 rounded-xl text-white\">\r\n                            </div>\r\n\r\n                            <!-- ID Back -->\r\n                            <div class=\"space-y-2\">\r\n                                <div class=\"flex justify-between items-center\">\r\n                                    <label class=\"block text-sm font-medium text-gray-400\">\r\n                                        ID Back Side\r\n                                    </label>\r\n                                    <span id=\"id_back_status\" class=\"text-gray-400 text-sm\">Not uploaded</span>\r\n                                </div>\r\n                                <input type=\"file\"\r\n                                       accept=\"image/*\"\r\n                                       onchange=\"handleDocumentUpload(this.files[0], 'id_back')\"\r\n                                       class=\"w-full p-4 bg-brand-black/50 border border-brand-primary/20 rounded-xl text-white\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Selfie Verification -->\r\n                        <div class=\"bg-brand-black/50 backdrop-blur-xl rounded-xl p-6 space-y-4\">\r\n                            <h3 class=\"text-lg font-medium text-white\">Selfie Verification</h3>\r\n                            <div class=\"space-y-2\">\r\n                                <div class=\"flex justify-between items-center\">\r\n                                    <label class=\"block text-sm font-medium text-gray-400\">\r\n                                        Take a clear selfie holding your ID\r\n                                    </label>\r\n                                    <span id=\"selfie_status\" class=\"text-gray-400 text-sm\">Not uploaded</span>\r\n                                </div>\r\n                                <input type=\"file\"\r\n                                       accept=\"image/*\"\r\n                                       onchange=\"handleDocumentUpload(this.files[0], 'selfie')\"\r\n                                       class=\"w-full p-4 bg-brand-black/50 border border-brand-primary/20 rounded-xl text-white\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Address Verification -->\r\n                        <div class=\"bg-brand-black/50 backdrop-blur-xl rounded-xl p-6 space-y-4\">\r\n                            <h3 class=\"text-lg font-medium text-white\">Proof of Address</h3>\r\n                            <div class=\"space-y-2\">\r\n                                <div class=\"flex justify-between items-center\">\r\n                                    <label class=\"block text-sm font-medium text-gray-400\">\r\n                                        Upload a recent utility bill or bank statement\r\n                                    </label>\r\n                                    <span id=\"address_proof_status\" class=\"text-gray-400 text-sm\">Not uploaded</span>\r\n                                </div>\r\n                                <input type=\"file\"\r\n                                       accept=\"image/*,.pdf\"\r\n                                       onchange=\"handleDocumentUpload(this.files[0], 'address_proof')\"\r\n                                       class=\"w-full p-4 bg-brand-black/50 border border-brand-primary/20 rounded-xl text-white\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button id=\"kycSubmitBtn\"\r\n                                type=\"submit\"\r\n                                disabled\r\n                                class=\"w-full md:w-auto px-8 py-4 bg-gray-500/50 text-gray-400 rounded-xl cursor-not-allowed transition-colors flex items-center justify-center gap-2\">\r\n                            <i class=\"fas fa-shield-alt\"></i>\r\n                            Submit Documents for Verification\r\n                        </button>\r\n                    </form>\r\n\r\n                    <!-- Status Display for Approved/Pending -->\r\n                    ${kycStatus === 'approved' ? `\r\n                        <div class=\"text-center space-y-4\">\r\n                            <div class=\"text-6xl text-green-500\">\r\n                                <i class=\"fas fa-shield-check\"></i>\r\n                            </div>\r\n                            <h2 class=\"text-xl font-medium text-white\">Verification Complete</h2>\r\n                            <p class=\"text-gray-400\">Your identity has been verified successfully</p>\r\n                        </div>\r\n                    ` : kycStatus === 'pending' ? `\r\n                        <div class=\"text-center space-y-4\">\r\n                            <div class=\"text-6xl text-yellow-500\">\r\n                                <i class=\"fas fa-clock\"></i>\r\n                            </div>\r\n                            <h2 class=\"text-xl font-medium text-white\">Verification in Progress</h2>\r\n                            <p class=\"text-gray-400\">We are reviewing your documents. This usually takes 1-2 business days.</p>\r\n                        </div>\r\n                    ` : ''}\r\n                </div>\r\n            </main>\r\n        `,\r\n        pageEvents: () => {\r\n            navEvents()\r\n            fetchKycStatus()\r\n        }\r\n    }\r\n}\r\n\r\nexport default kyc"],"names":["kyc","auth","reset","trackPageVisit","navbar","navEvents","Navbar","kycStatus","userId","uploadedDocuments","fetchKycStatus","spinner","user","supabase","profileResult","documentsResult","doc","updateKycUI","updateUploadStatus","error","requiredDocs","docType","indicator","submitBtn","allUploaded","handleDocumentUpload","file","type","filePath","uploadError","urlData","docError","toastify","handleKycSubmit","missingDocs","updateError","statusElement","formElement"],"mappings":"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"}