{"version":3,"file":"dashboard-B7RjKDE9.js","sources":["../../src/script/views/admin/components/CryptoPrices.js","../../src/script/views/admin/components/RecentTransactions.js","../../src/script/views/admin/components/Analytics.js","../../src/script/views/admin/dashboard.js"],"sourcesContent":["import toastify from '../../../components/toastify';\r\n\r\nconst CryptoPrices = () => {\r\n    // Add the missing function\r\n    async function fetchCryptoPrices() {\r\n        try {\r\n            const res = await fetch(\r\n                \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum,tether,binancecoin&vs_currencies=usd\"\r\n            );\r\n            const data = await res.json();\r\n\r\n            return {\r\n                BTC: data.bitcoin.usd,\r\n                ETH: data.ethereum.usd,\r\n                USDT: data.tether.usd,\r\n                BNB: data.binancecoin.usd,\r\n            };\r\n        } catch (err) {\r\n            toastify({\r\n                text: 'Failed to fetch current prices',\r\n                background: 'bg-red-500'\r\n            });\r\n            return {};\r\n        }\r\n    }\r\n\r\n    async function fetchAndDisplayPrices() {\r\n        try {\r\n            const prices = await fetchCryptoPrices();\r\n            const pricesContainer = document.getElementById('cryptoPrices');\r\n            if (!pricesContainer) return;\r\n\r\n            // Clear existing content first\r\n            pricesContainer.innerHTML = '';\r\n\r\n            Object.entries(prices).forEach(([symbol, price]) => {\r\n                const priceChange = Math.random() * 5 - 2.5; // Mock price change\r\n                const element = document.createElement('div');\r\n                element.className = 'flex items-center justify-between p-4 bg-brand-black/30 rounded-xl border border-brand-primary/10';\r\n                element.innerHTML = `\r\n                    <div class=\"flex items-center gap-3\">\r\n                        ${cryptoIcons[symbol]}\r\n                        <div>\r\n                            <h3 class=\"font-medium text-white\">${symbol}</h3>\r\n                            <p class=\"text-sm text-gray-400\">$${price.toLocaleString()}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <span class=\"${priceChange >= 0 ? 'text-green-500' : 'text-red-500'}\">\r\n                            ${priceChange >= 0 ? '↑' : '↓'} ${Math.abs(priceChange).toFixed(2)}%\r\n                        </span>\r\n                    </div>\r\n                `;\r\n                pricesContainer.appendChild(element);\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching prices:', error);\r\n        }\r\n    }\r\n\r\n    const cryptoIcons = {\r\n        BTC: '<svg class=\"w-8 h-8\" viewBox=\"0 0 32 32\"><path fill=\"#F7931A\" d=\"M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z\"/><path fill=\"white\" d=\"M23.189 14.02c.314-2.096-1.283-3.223-3.465-3.975l.708-2.84-1.728-.43-.69 2.765c-.454-.114-.92-.22-1.385-.326l.695-2.783L15.596 6l-.708 2.839c-.376-.086-.746-.17-1.104-.26l.002-.009-2.384-.595-.46 1.846s1.283.294 1.256.312c.7.175.826.638.805 1.006l-.806 3.235c.048.012.11.03.18.057l-.183-.045-1.13 4.532c-.086.212-.303.531-.793.41.018.025-1.256-.313-1.256-.313l-.858 1.978 2.25.561c.418.105.828.215 1.231.318l-.715 2.872 1.727.43.708-2.84c.472.127.93.245 1.378.357l-.706 2.828 1.728.43.715-2.866c2.948.558 5.164.333 6.097-2.333.752-2.146-.037-3.385-1.588-4.192 1.13-.26 1.98-1.003 2.207-2.538zm-3.95 5.538c-.533 2.147-4.148.986-5.32.695l.95-3.805c1.172.293 4.929.872 4.37 3.11zm.535-5.569c-.487 1.953-3.495.96-4.47.717l.86-3.45c.975.243 4.118.696 3.61 2.733z\"/></svg>',\r\n        ETH: '<svg class=\"w-8 h-8\" viewBox=\"0 0 32 32\"><path fill=\"#627EEA\" d=\"M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z\"/><path fill=\"white\" fill-opacity=\"0.602\" d=\"M16.498 4v8.87l7.497 3.35z\"/><path fill=\"white\" d=\"M16.498 4L9 16.22l7.498-3.35z\"/><path fill=\"white\" fill-opacity=\"0.602\" d=\"M16.498 21.968v6.027L24 17.616z\"/><path fill=\"white\" d=\"M16.498 27.995v-6.028L9 17.616z\"/><path fill=\"white\" fill-opacity=\"0.2\" d=\"M16.498 20.573l7.497-4.353-7.497-3.348z\"/><path fill=\"white\" fill-opacity=\"0.602\" d=\"M9 16.22l7.498 4.353v-7.701z\"/></svg>',\r\n        USDT: '<svg class=\"w-8 h-8\" viewBox=\"0 0 32 32\"><path fill=\"#26A17B\" d=\"M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z\"/><path fill=\"white\" d=\"M17.922 17.383v-.002c-.11.008-.677.042-1.942.042-1.01 0-1.721-.03-1.971-.042v.003c-3.888-.171-6.79-.848-6.79-1.658 0-.809 2.902-1.486 6.79-1.66v2.644c.254.018.982.061 1.988.061 1.207 0 1.812-.05 1.925-.06v-2.643c3.88.173 6.775.85 6.775 1.658 0 .81-2.895 1.485-6.775 1.657m0-3.59v-2.366h5.414V7.819H8.595v3.608h5.414v2.365c-4.4.202-7.709 1.074-7.709 2.118 0 1.044 3.309 1.915 7.709 2.118v7.582h3.913v-7.584c4.393-.202 7.694-1.073 7.694-2.116 0-1.043-3.301-1.914-7.694-2.117\"/></svg>',\r\n        BNB: '<svg class=\"w-8 h-8\" viewBox=\"0 0 32 32\"><path fill=\"#F3BA2F\" d=\"M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z\"/><path fill=\"white\" d=\"M12.116 14.404L16 10.52l3.886 3.886 2.26-2.26L16 6l-6.144 6.144 2.26 2.26zM6 16l2.26-2.26L10.52 16l-2.26 2.26L6 16zm6.116 1.596L16 21.48l3.886-3.886 2.26 2.259L16 26l-6.144-6.144-.003-.003 2.263-2.257zM21.48 16l2.26-2.26L26 16l-2.26 2.26L21.48 16zm-3.188-.002h.002V16L16 18.294l-2.291-2.29-.004-.004.004-.003.401-.402.195-.195L16 13.706l2.293 2.293z\"/></svg>'\r\n    };\r\n\r\n    return {\r\n        html: /* html */`\r\n        <div class=\"bg-brand-black/50 backdrop-blur-xl border border-brand-primary/10 rounded-2xl p-6\">\r\n            <div class=\"flex items-center justify-between mb-4\">\r\n                <h2 class=\"text-lg font-semibold text-white\">Crypto Assets</h2>\r\n                <button id=\"refreshPrices\" \r\n                        class=\"text-gray-400 hover:text-white transition-colors\">\r\n                    <i class=\"fas fa-sync-alt\"></i>\r\n                </button>\r\n            </div>\r\n            <div id=\"cryptoPrices\" class=\"space-y-4\"></div>\r\n        </div>\r\n    `,\r\n        init: () => {\r\n            fetchAndDisplayPrices();\r\n            document.getElementById('refreshPrices')?.addEventListener('click', (e) => {\r\n                const icon = e.currentTarget.querySelector('i');\r\n                icon?.classList.add('animate-spin');\r\n                fetchAndDisplayPrices().finally(() => {\r\n                    setTimeout(() => icon?.classList.remove('animate-spin'), 1000);\r\n                });\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport default CryptoPrices;","import supabase from '../../../utils/supabaseClients';\r\nimport Modal from '../../../components/Modal';\r\n\r\nconst RecentTransactions = () => {\r\n    async function fetchTransactions() {\r\n        try {\r\n            const container = document.getElementById('recentTransactions');\r\n            if (!container) return;\r\n\r\n            // Clear existing content first\r\n            container.innerHTML = ''\r\n\r\n            const { data, error } = await supabase\r\n                .from('transactions')\r\n                .select(`\r\n                    *,\r\n                    profiles!transactions_user_id_fkey (full_name, email)\r\n                `)\r\n                .order('created_at', { ascending: false })\r\n                .limit(4);\r\n\r\n            if (error) throw error;\r\n            if (!data) return;\r\n\r\n            data.forEach(tx => {\r\n                const element = document.createElement('div');\r\n                element.className = 'flex items-center justify-between p-4 bg-brand-black/30 rounded-xl border border-brand-primary/10 cursor-pointer hover:bg-brand-primary/5 transition-colors';\r\n                element.onclick = () => showTransactionDetails(tx);\r\n\r\n                const statusColor = {\r\n                    completed: 'text-green-500',\r\n                    pending: 'text-yellow-500',\r\n                    failed: 'text-red-500'\r\n                }[tx.status];\r\n\r\n                element.innerHTML = `\r\n                    <div class=\"flex items-center gap-3\">\r\n                        <div class=\"w-10 h-10 rounded-full bg-brand-primary/10 flex items-center justify-center\">\r\n                            <i class=\"fas fa-${tx.type === 'deposit' ? 'arrow-down' : 'arrow-up'} \r\n                                   ${tx.type === 'deposit' ? 'text-green-500' : 'text-red-500'}\"></i>\r\n                        </div>\r\n                        <div>\r\n                            <h3 class=\"font-medium text-white\">${tx.profiles.full_name}</h3>\r\n                            <p class=\"text-sm text-gray-400\">${tx.type} - $${tx.amount}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <span class=\"${statusColor}\">${tx.status}</span>\r\n                        <p class=\"text-sm text-gray-400\">${new Date(tx.created_at).toLocaleDateString()}</p>\r\n                    </div>\r\n                `;\r\n                container.appendChild(element);\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching transactions:', error);\r\n        }\r\n    }\r\n\r\n    function showTransactionDetails(tx) {\r\n        new Modal({\r\n            title: 'Transaction Details',\r\n            content: /* html */`\r\n                <div class=\"space-y-4\">\r\n                    <div class=\"flex justify-center mb-6\">\r\n                        <div class=\"w-16 h-16 rounded-full bg-brand-primary/10 flex items-center justify-center\">\r\n                            <i class=\"fas fa-${tx.type === 'deposit' ? 'arrow-down' : 'arrow-up'} text-2xl \r\n                                   ${tx.type === 'deposit' ? 'text-green-500' : 'text-red-500'}\"></i>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div class=\"grid grid-cols-2 gap-4\">\r\n                        <div>\r\n                            <p class=\"text-sm text-gray-400\">Type</p>\r\n                            <p class=\"text-white font-medium\">${tx.type}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p class=\"text-sm text-gray-400\">Amount</p>\r\n                            <p class=\"text-white font-medium\">$${tx.amount}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p class=\"text-sm text-gray-400\">Status</p>\r\n                            <p class=\"text-white font-medium\">${tx.status}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p class=\"text-sm text-gray-400\">Date</p>\r\n                            <p class=\"text-white font-medium\">${new Date(tx.created_at).toLocaleString()}</p>\r\n                        </div>\r\n                        <div class=\"col-span-2\">\r\n                            <p class=\"text-sm text-gray-400\">User</p>\r\n                            <p class=\"text-white font-medium\">${tx.profiles.full_name}</p>\r\n                            <p class=\"text-sm text-gray-400\">${tx.profiles.email}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            `\r\n        }).show();\r\n    }\r\n\r\n    return {\r\n        html: /* html */`\r\n            <div class=\"bg-brand-black/50 backdrop-blur-xl border border-brand-primary/10 rounded-2xl p-6\">\r\n                <h2 class=\"text-lg font-semibold text-white mb-4\">Recent Transactions</h2>\r\n                <div id=\"recentTransactions\" class=\"space-y-4\"></div>\r\n            </div>\r\n        `,\r\n        init: fetchTransactions\r\n    };\r\n};\r\n\r\nexport default RecentTransactions;","import supabase from '../../../utils/supabaseClients';\r\n\r\nconst Analytics = () => {\r\n    // Store chart instances\r\n    let charts = {\r\n        transaction: null,\r\n        userGrowth: null\r\n    };\r\n\r\n    // Cleanup function\r\n    function destroyCharts() {\r\n        if (charts.transaction) {\r\n            charts.transaction.destroy();\r\n            charts.transaction = null;\r\n        }\r\n        if (charts.userGrowth) {\r\n            charts.userGrowth.destroy();\r\n            charts.userGrowth = null;\r\n        }\r\n    }\r\n\r\n    async function initializeCharts() {\r\n        try {\r\n            // Destroy existing charts first\r\n            destroyCharts();\r\n\r\n            // Load Chart.js if not already loaded\r\n            if (!window.Chart) {\r\n                await new Promise((resolve, reject) => {\r\n                    const script = document.createElement('script');\r\n                    script.src = 'https://cdn.jsdelivr.net/npm/chart.js';\r\n                    script.onload = resolve;\r\n                    script.onerror = reject;\r\n                    document.head.appendChild(script);\r\n                });\r\n            }\r\n\r\n            // Wait for both charts to be created\r\n            await Promise.all([\r\n                createTransactionChart(),\r\n                createUserGrowthChart()\r\n            ]);\r\n\r\n        } catch (error) {\r\n            console.error('Chart initialization error:', error);\r\n        }\r\n    }\r\n\r\n    async function createTransactionChart() {\r\n        try {\r\n            const ctx = document.getElementById('transactionChart');\r\n            if (!ctx) return;\r\n\r\n            // Get fresh canvas context\r\n            ctx.getContext('2d').clearRect(0, 0, ctx.width, ctx.height);\r\n\r\n            const { data, error } = await supabase\r\n                .from('transactions')\r\n                .select('amount, created_at, type')\r\n                .order('created_at', { ascending: true });\r\n\r\n            if (error) throw error;\r\n\r\n            const groupedData = data.reduce((acc, tx) => {\r\n                const date = new Date(tx.created_at).toLocaleDateString();\r\n                if (!acc[date]) acc[date] = { deposits: 0, withdrawals: 0 };\r\n                if (tx.type === 'deposit') acc[date].deposits += tx.amount;\r\n                if (tx.type === 'withdrawal') acc[date].withdrawals += tx.amount;\r\n                return acc;\r\n            }, {});\r\n\r\n            charts.transaction = new Chart(ctx, {\r\n                type: 'line',\r\n                data: {\r\n                    labels: Object.keys(groupedData),\r\n                    datasets: [\r\n                        {\r\n                            label: 'Deposits',\r\n                            data: Object.values(groupedData).map(d => d.deposits),\r\n                            borderColor: '#10B981',\r\n                            tension: 0.4\r\n                        },\r\n                        {\r\n                            label: 'Withdrawals',\r\n                            data: Object.values(groupedData).map(d => d.withdrawals),\r\n                            borderColor: '#EF4444',\r\n                            tension: 0.4\r\n                        }\r\n                    ]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true,\r\n                            grid: { color: 'rgba(255, 255, 255, 0.1)' },\r\n                            ticks: { color: '#9CA3AF' }\r\n                        },\r\n                        x: {\r\n                            grid: { color: 'rgba(255, 255, 255, 0.1)' },\r\n                            ticks: { color: '#9CA3AF' }\r\n                        }\r\n                    },\r\n                    plugins: {\r\n                        legend: { labels: { color: '#9CA3AF' } }\r\n                    }\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating transaction chart:', error);\r\n        }\r\n    }\r\n\r\n    async function createUserGrowthChart() {\r\n        try {\r\n            const ctx = document.getElementById('userGrowthChart');\r\n            if (!ctx) return;\r\n\r\n            // Get fresh canvas context\r\n            ctx.getContext('2d').clearRect(0, 0, ctx.width, ctx.height);\r\n\r\n            const { data, error } = await supabase\r\n                .from('profiles')\r\n                .select('created_at')\r\n                .order('created_at', { ascending: true });\r\n\r\n            if (error) throw error;\r\n\r\n            const groupedData = data.reduce((acc, user) => {\r\n                const date = new Date(user.created_at).toLocaleDateString();\r\n                acc[date] = (acc[date] || 0) + 1;\r\n                return acc;\r\n            }, {});\r\n\r\n            // Calculate cumulative users\r\n            let cumulative = 0;\r\n            const userCount = Object.entries(groupedData).map(([date, count]) => {\r\n                cumulative += count;\r\n                return { date, total: cumulative };\r\n            });\r\n\r\n            charts.userGrowth = new Chart(ctx, {\r\n                type: 'line',\r\n                data: {\r\n                    labels: userCount.map(d => d.date),\r\n                    datasets: [{\r\n                        label: 'Total Users',\r\n                        data: userCount.map(d => d.total),\r\n                        borderColor: '#8B5CF6',\r\n                        tension: 0.4\r\n                    }]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true,\r\n                            grid: { color: 'rgba(255, 255, 255, 0.1)' },\r\n                            ticks: { color: '#9CA3AF' }\r\n                        },\r\n                        x: {\r\n                            grid: { color: 'rgba(255, 255, 255, 0.1)' },\r\n                            ticks: { color: '#9CA3AF' }\r\n                        }\r\n                    },\r\n                    plugins: {\r\n                        legend: { labels: { color: '#9CA3AF' } }\r\n                    }\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating user growth chart:', error);\r\n        }\r\n    }\r\n\r\n    return {\r\n        html: /* html */`\r\n            <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                <div class=\"bg-brand-black/50 backdrop-blur-xl border border-brand-primary/10 rounded-2xl p-6\">\r\n                    <h2 class=\"text-lg font-semibold text-white mb-4\">Transaction Flow</h2>\r\n                    <div class=\"h-[300px] relative\">\r\n                        <canvas id=\"transactionChart\"></canvas>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"bg-brand-black/50 backdrop-blur-xl border border-brand-primary/10 rounded-2xl p-6\">\r\n                    <h2 class=\"text-lg font-semibold text-white mb-4\">User Growth</h2>\r\n                    <div class=\"h-[300px] relative\">\r\n                        <canvas id=\"userGrowthChart\"></canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `,\r\n        init: initializeCharts,\r\n        cleanup: destroyCharts\r\n    };\r\n};\r\n\r\nexport default Analytics;","import reset, { cleanupAll } from '../../utils/reset';\r\nimport AdminNavbar from './components/Navbar';\r\nimport StyleAdminPage from './components/style';\r\nimport { checkAdminAuth, logoutAdmin } from './functions/adminLoginHandler';\r\nimport { loadPage } from '../../routes/router';\r\nimport CryptoPrices from './components/CryptoPrices';\r\nimport RecentTransactions from './components/RecentTransactions';\r\nimport Analytics from './components/Analytics';\r\nimport supabase from '../../utils/supabaseClients';\r\n\r\nconst dashboard = async () => {\r\n\r\n    reset('Olymp AI Admin Dashboard');\r\n    cleanupAll();\r\n\r\n    // Fetch total balance\r\n    const { data: totalBalance } = await supabase\r\n        .from('trading_accounts')\r\n        .select('balance')\r\n        .eq('account_type', 'live');\r\n\r\n    const totalValue = totalBalance?.reduce((sum, acc) => sum + acc.balance, 0) || 0;\r\n\r\n    const cryptoPrices = CryptoPrices();\r\n    const recentTx = RecentTransactions();\r\n    const analytics = Analytics();\r\n\r\n    function pageEvents() {\r\n        StyleAdminPage();\r\n        cryptoPrices.init();\r\n        recentTx.init();\r\n        analytics.init();\r\n\r\n        // Handle navigation\r\n        document.querySelectorAll('[data-nav]').forEach(button => {\r\n            button.addEventListener('click', async (e) => {\r\n                e.preventDefault();\r\n                const route = button.dataset.route;\r\n                if (route) {\r\n                    await loadPage(`admin${route.charAt(0).toUpperCase() + route.slice(1)}`);\r\n                }\r\n            });\r\n        });\r\n\r\n        // Handle logout\r\n        document.getElementById('admin-logout')?.addEventListener('click', async () => {\r\n            await logoutAdmin();\r\n        });\r\n    }\r\n\r\n    return {\r\n        html: /* html */`\r\n        <div class=\"flex min-h-screen bg-brand-dark\">\r\n            ${AdminNavbar().html}\r\n            \r\n            <main class=\"flex-1 lg:ml-24 p-4 lg:p-8 pb-24 lg:pb-8\">\r\n                <div class=\"max-w-7xl mx-auto space-y-6\">\r\n                    <!-- Header with Total Balance -->\r\n                    <header class=\"bg-brand-black/50 backdrop-blur-xl border border-brand-primary/10 rounded-2xl p-6\">\r\n                        <h1 class=\"text-2xl lg:text-3xl font-bold text-white\">Admin Dashboard</h1>\r\n                        <p class=\"text-gray-400 mt-2\">Platform Overview</p>\r\n                        <div class=\"mt-4 p-4 bg-brand-primary/10 rounded-xl\">\r\n                            <p class=\"text-sm text-gray-400\">Total User Balance</p>\r\n                            <p class=\"text-4xl font-bold text-white\">$${totalValue.toLocaleString()}</p>\r\n                        </div>\r\n                    </header>\r\n\r\n                    <!-- Analytics Charts -->\r\n                    ${analytics.html}\r\n\r\n                    <!-- Crypto Prices and Recent Transactions -->\r\n                    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                        ${cryptoPrices.html}\r\n                        ${recentTx.html}\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n        `,\r\n        pageEvents\r\n    };\r\n};\r\n\r\nexport default dashboard;"],"names":["CryptoPrices","fetchCryptoPrices","data","toastify","fetchAndDisplayPrices","prices","pricesContainer","symbol","price","priceChange","element","cryptoIcons","error","e","icon","RecentTransactions","fetchTransactions","container","supabase","tx","showTransactionDetails","statusColor","Modal","Analytics","charts","destroyCharts","initializeCharts","resolve","reject","script","createTransactionChart","createUserGrowthChart","ctx","groupedData","acc","date","d","user","cumulative","userCount","count","dashboard","reset","cleanupAll","totalBalance","totalValue","sum","cryptoPrices","recentTx","analytics","pageEvents","StyleAdminPage","button","route","loadPage","logoutAdmin","AdminNavbar"],"mappings":"kXAEA,MAAMA,EAAe,IAAM,CAEvB,eAAeC,GAAoB,CAC/B,GAAI,CAIA,MAAMC,EAAO,MAHD,MAAM,MACd,yGAChB,GACmC,OAEvB,MAAO,CACH,IAAKA,EAAK,QAAQ,IAClB,IAAKA,EAAK,SAAS,IACnB,KAAMA,EAAK,OAAO,IAClB,IAAKA,EAAK,YAAY,GACtC,CACQ,MAAc,CACV,OAAAC,EAAS,CACL,KAAM,iCACN,WAAY,YAC5B,CAAa,EACM,EACX,CACJ,CAEA,eAAeC,GAAwB,CACnC,GAAI,CACA,MAAMC,EAAS,MAAMJ,IACfK,EAAkB,SAAS,eAAe,cAAc,EAC9D,GAAI,CAACA,EAAiB,OAGtBA,EAAgB,UAAY,GAE5B,OAAO,QAAQD,CAAM,EAAE,QAAQ,CAAC,CAACE,EAAQC,CAAK,IAAM,CAChD,MAAMC,EAAc,KAAK,OAAM,EAAK,EAAI,IAClCC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAY,oGACpBA,EAAQ,UAAY;AAAA;AAAA,0BAEVC,EAAYJ,CAAM,CAAC;AAAA;AAAA,iEAEoBA,CAAM;AAAA,gEACPC,EAAM,gBAAgB;AAAA;AAAA;AAAA;AAAA,uCAI/CC,GAAe,EAAI,iBAAmB,cAAc;AAAA,8BAC7DA,GAAe,EAAI,IAAM,GAAG,IAAI,KAAK,IAAIA,CAAW,EAAE,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA,kBAI9EH,EAAgB,YAAYI,CAAO,CACvC,CAAC,CACL,OAASE,EAAO,CACZ,QAAQ,MAAM,yBAA0BA,CAAK,CACjD,CACJ,CAEA,MAAMD,EAAc,CAChB,IAAK,48BACL,IAAK,8lBACL,KAAM,+qBACN,IAAK,mjBACb,EAEI,MAAO,CACH,KAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYhB,KAAM,IAAM,CACRP,IACA,SAAS,eAAe,eAAe,GAAG,iBAAiB,QAAUS,GAAM,CACvE,MAAMC,EAAOD,EAAE,cAAc,cAAc,GAAG,EAC9CC,GAAM,UAAU,IAAI,cAAc,EAClCV,EAAqB,EAAG,QAAQ,IAAM,CAClC,WAAW,IAAMU,GAAM,UAAU,OAAO,cAAc,EAAG,GAAI,CACjE,CAAC,CACL,CAAC,CACL,CACR,CACA,ECxFMC,EAAqB,IAAM,CAC7B,eAAeC,GAAoB,CAC/B,GAAI,CACA,MAAMC,EAAY,SAAS,eAAe,oBAAoB,EAC9D,GAAI,CAACA,EAAW,OAGhBA,EAAU,UAAY,GAEtB,KAAM,CAAE,KAAAf,EAAM,MAAAU,CAAK,EAAK,MAAMM,EACzB,KAAK,cAAc,EACnB,OAAO;AAAA;AAAA;AAAA,iBAGP,EACA,MAAM,aAAc,CAAE,UAAW,EAAK,CAAE,EACxC,MAAM,CAAC,EAEZ,GAAIN,EAAO,MAAMA,EACjB,GAAI,CAACV,EAAM,OAEXA,EAAK,QAAQiB,GAAM,CACf,MAAMT,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAY,8JACpBA,EAAQ,QAAU,IAAMU,EAAuBD,CAAE,EAEjD,MAAME,EAAc,CAChB,UAAW,iBACX,QAAS,kBACT,OAAQ,cAC5B,EAAkBF,EAAG,MAAM,EAEXT,EAAQ,UAAY;AAAA;AAAA;AAAA,+CAGWS,EAAG,OAAS,UAAY,aAAe,UAAU;AAAA,qCAC3DA,EAAG,OAAS,UAAY,iBAAmB,cAAc;AAAA;AAAA;AAAA,iEAG7BA,EAAG,SAAS,SAAS;AAAA,+DACvBA,EAAG,IAAI,OAAOA,EAAG,MAAM;AAAA;AAAA;AAAA;AAAA,uCAI/CE,CAAW,KAAKF,EAAG,MAAM;AAAA,2DACL,IAAI,KAAKA,EAAG,UAAU,EAAE,mBAAkB,CAAE;AAAA;AAAA,kBAGvFF,EAAU,YAAYP,CAAO,CACjC,CAAC,CACL,OAASE,EAAO,CACZ,QAAQ,MAAM,+BAAgCA,CAAK,CACvD,CACJ,CAEA,SAASQ,EAAuBD,EAAI,CAChC,IAAIG,EAAM,CACN,MAAO,sBACP,QAAmB;AAAA;AAAA;AAAA;AAAA,+CAIgBH,EAAG,OAAS,UAAY,aAAe,UAAU;AAAA,qCAC3DA,EAAG,OAAS,UAAY,iBAAmB,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAO9BA,EAAG,IAAI;AAAA;AAAA;AAAA;AAAA,iEAINA,EAAG,MAAM;AAAA;AAAA;AAAA;AAAA,gEAIVA,EAAG,MAAM;AAAA;AAAA;AAAA;AAAA,gEAIT,IAAI,KAAKA,EAAG,UAAU,EAAE,eAAc,CAAE;AAAA;AAAA;AAAA;AAAA,gEAIxCA,EAAG,SAAS,SAAS;AAAA,+DACtBA,EAAG,SAAS,KAAK;AAAA;AAAA;AAAA;AAAA,aAKhF,CAAS,EAAE,KAAI,CACX,CAEA,MAAO,CACH,KAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,UAMhB,KAAMH,CACd,CACA,ECzGMO,EAAY,IAAM,CAEpB,IAAIC,EAAS,CACT,YAAa,KACb,WAAY,IACpB,EAGI,SAASC,GAAgB,CACjBD,EAAO,cACPA,EAAO,YAAY,UACnBA,EAAO,YAAc,MAErBA,EAAO,aACPA,EAAO,WAAW,UAClBA,EAAO,WAAa,KAE5B,CAEA,eAAeE,GAAmB,CAC9B,GAAI,CAEAD,IAGK,OAAO,OACR,MAAM,IAAI,QAAQ,CAACE,EAASC,IAAW,CACnC,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,IAAM,wCACbA,EAAO,OAASF,EAChBE,EAAO,QAAUD,EACjB,SAAS,KAAK,YAAYC,CAAM,CACpC,CAAC,EAIL,MAAM,QAAQ,IAAI,CACdC,EAAsB,EACtBC,EAAqB,CACrC,CAAa,CAEL,OAASnB,EAAO,CACZ,QAAQ,MAAM,8BAA+BA,CAAK,CACtD,CACJ,CAEA,eAAekB,GAAyB,CACpC,GAAI,CACA,MAAME,EAAM,SAAS,eAAe,kBAAkB,EACtD,GAAI,CAACA,EAAK,OAGVA,EAAI,WAAW,IAAI,EAAE,UAAU,EAAG,EAAGA,EAAI,MAAOA,EAAI,MAAM,EAE1D,KAAM,CAAE,KAAA9B,EAAM,MAAAU,CAAK,EAAK,MAAMM,EACzB,KAAK,cAAc,EACnB,OAAO,0BAA0B,EACjC,MAAM,aAAc,CAAE,UAAW,EAAI,CAAE,EAE5C,GAAIN,EAAO,MAAMA,EAEjB,MAAMqB,EAAc/B,EAAK,OAAO,CAACgC,EAAKf,IAAO,CACzC,MAAMgB,EAAO,IAAI,KAAKhB,EAAG,UAAU,EAAE,qBACrC,OAAKe,EAAIC,CAAI,IAAGD,EAAIC,CAAI,EAAI,CAAE,SAAU,EAAG,YAAa,CAAC,GACrDhB,EAAG,OAAS,YAAWe,EAAIC,CAAI,EAAE,UAAYhB,EAAG,QAChDA,EAAG,OAAS,eAAce,EAAIC,CAAI,EAAE,aAAehB,EAAG,QACnDe,CACX,EAAG,CAAA,CAAE,EAELV,EAAO,YAAc,IAAI,MAAMQ,EAAK,CAChC,KAAM,OACN,KAAM,CACF,OAAQ,OAAO,KAAKC,CAAW,EAC/B,SAAU,CACN,CACI,MAAO,WACP,KAAM,OAAO,OAAOA,CAAW,EAAE,IAAIG,GAAKA,EAAE,QAAQ,EACpD,YAAa,UACb,QAAS,EACrC,EACwB,CACI,MAAO,cACP,KAAM,OAAO,OAAOH,CAAW,EAAE,IAAIG,GAAKA,EAAE,WAAW,EACvD,YAAa,UACb,QAAS,EACrC,CACA,CACA,EACgB,QAAS,CACL,WAAY,GACZ,oBAAqB,GACrB,OAAQ,CACJ,EAAG,CACC,YAAa,GACb,KAAM,CAAE,MAAO,0BAA0B,EACzC,MAAO,CAAE,MAAO,SAAS,CACrD,EACwB,EAAG,CACC,KAAM,CAAE,MAAO,0BAA0B,EACzC,MAAO,CAAE,MAAO,SAAS,CACrD,CACA,EACoB,QAAS,CACL,OAAQ,CAAE,OAAQ,CAAE,MAAO,SAAS,CAAE,CAC9D,CACA,CACA,CAAa,CACL,OAASxB,EAAO,CACZ,QAAQ,MAAM,oCAAqCA,CAAK,CAC5D,CACJ,CAEA,eAAemB,GAAwB,CACnC,GAAI,CACA,MAAMC,EAAM,SAAS,eAAe,iBAAiB,EACrD,GAAI,CAACA,EAAK,OAGVA,EAAI,WAAW,IAAI,EAAE,UAAU,EAAG,EAAGA,EAAI,MAAOA,EAAI,MAAM,EAE1D,KAAM,CAAE,KAAA9B,EAAM,MAAAU,CAAK,EAAK,MAAMM,EACzB,KAAK,UAAU,EACf,OAAO,YAAY,EACnB,MAAM,aAAc,CAAE,UAAW,EAAI,CAAE,EAE5C,GAAIN,EAAO,MAAMA,EAEjB,MAAMqB,EAAc/B,EAAK,OAAO,CAACgC,EAAKG,IAAS,CAC3C,MAAMF,EAAO,IAAI,KAAKE,EAAK,UAAU,EAAE,qBACvC,OAAAH,EAAIC,CAAI,GAAKD,EAAIC,CAAI,GAAK,GAAK,EACxBD,CACX,EAAG,CAAA,CAAE,EAGL,IAAII,EAAa,EACjB,MAAMC,EAAY,OAAO,QAAQN,CAAW,EAAE,IAAI,CAAC,CAACE,EAAMK,CAAK,KAC3DF,GAAcE,EACP,CAAE,KAAAL,EAAM,MAAOG,GACzB,EAEDd,EAAO,WAAa,IAAI,MAAMQ,EAAK,CAC/B,KAAM,OACN,KAAM,CACF,OAAQO,EAAU,IAAIH,GAAKA,EAAE,IAAI,EACjC,SAAU,CAAC,CACP,MAAO,cACP,KAAMG,EAAU,IAAIH,GAAKA,EAAE,KAAK,EAChC,YAAa,UACb,QAAS,EACjC,CAAqB,CACrB,EACgB,QAAS,CACL,WAAY,GACZ,oBAAqB,GACrB,OAAQ,CACJ,EAAG,CACC,YAAa,GACb,KAAM,CAAE,MAAO,0BAA0B,EACzC,MAAO,CAAE,MAAO,SAAS,CACrD,EACwB,EAAG,CACC,KAAM,CAAE,MAAO,0BAA0B,EACzC,MAAO,CAAE,MAAO,SAAS,CACrD,CACA,EACoB,QAAS,CACL,OAAQ,CAAE,OAAQ,CAAE,MAAO,SAAS,CAAE,CAC9D,CACA,CACA,CAAa,CACL,OAASxB,EAAO,CACZ,QAAQ,MAAM,oCAAqCA,CAAK,CAC5D,CACJ,CAEA,MAAO,CACH,KAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAiBhB,KAAMc,EACN,QAASD,CACjB,CACA,EC5LMgB,EAAY,SAAY,CAE1BC,EAAM,0BAA0B,EAChCC,IAGA,KAAM,CAAE,KAAMC,CAAY,EAAK,MAAM1B,EAChC,KAAK,kBAAkB,EACvB,OAAO,SAAS,EAChB,GAAG,eAAgB,MAAM,EAExB2B,EAAaD,GAAc,OAAO,CAACE,EAAKZ,IAAQY,EAAMZ,EAAI,QAAS,CAAC,GAAK,EAEzEa,EAAe/C,IACfgD,EAAWjC,IACXkC,EAAY1B,IAElB,SAAS2B,GAAa,CAClBC,IACAJ,EAAa,KAAI,EACjBC,EAAS,KAAI,EACbC,EAAU,KAAI,EAGd,SAAS,iBAAiB,YAAY,EAAE,QAAQG,GAAU,CACtDA,EAAO,iBAAiB,QAAS,MAAOvC,GAAM,CAC1CA,EAAE,eAAc,EAChB,MAAMwC,EAAQD,EAAO,QAAQ,MACzBC,GACA,MAAMC,EAAS,QAAQD,EAAM,OAAO,CAAC,EAAE,YAAW,EAAKA,EAAM,MAAM,CAAC,CAAC,EAAE,CAE/E,CAAC,CACL,CAAC,EAGD,SAAS,eAAe,cAAc,GAAG,iBAAiB,QAAS,SAAY,CAC3E,MAAME,EAAW,CACrB,CAAC,CACL,CAEA,MAAO,CACH,KAAgB;AAAA;AAAA,cAEVC,EAAW,EAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAUwCX,EAAW,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAK7EI,EAAU,IAAI;AAAA;AAAA;AAAA;AAAA,0BAIVF,EAAa,IAAI;AAAA,0BACjBC,EAAS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,UAM/B,WAAAE,CACR,CACA"}